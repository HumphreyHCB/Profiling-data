begin_compilation
  name " HotSpotCompilation-1742[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1742[java.util.HashMap$HashIterator.nextNode()]"
  date 1714038079945
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j715 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a729 
=== Usages ===
j717 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a729  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v755 v756 v758 v759 ?16 ?83 v763 j352 j453 j548 j644 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
=== Succesors ===
next: i730 
=== Usages ===
v761 v757 
=== Predecessor ===
j715 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - #next: i730  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v802 i730 a733 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-36363|0xffffffffffff71f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v757 
lastLocationAccess: - 
=== Succesors ===
next: a731 
=== Usages ===
v7 
=== Predecessor ===
a729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v757 lastLocationAccess: - #next: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v761 
lastLocationAccess: - 
=== Succesors ===
next: a732 
=== Usages ===
a164 v762 
=== Predecessor ===
i730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v761 lastLocationAccess: - #next: a732  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a732 v160 v185 v198 j412 j602 j507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
=== Succesors ===
next: a733 
=== Usages ===
a136 v152 v760 
=== Predecessor ===
a731 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - #next: a733  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a732 
=== Succesors ===
=== Usages ===
a733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-39435|0xffffffffffff65f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v760 
lastLocationAccess: - 
=== Succesors ===
next: a734 
=== Usages ===
a158 v201 v160 
=== Predecessor ===
a732 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v760 lastLocationAccess: - #next: a734  <|@  <|@
f <@~|@floating>@ <|@
tid a116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 v752 v753 v754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a734 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: a735 
=== Usages ===
v747 
=== Predecessor ===
a733 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v751 lastLocationAccess: - #next: a735  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a735 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v752 
lastLocationAccess: - 
=== Succesors ===
next: a736 
=== Usages ===
v748 
=== Predecessor ===
a734 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v752 lastLocationAccess: - #next: a736  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a736 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v753 
lastLocationAccess: - 
=== Succesors ===
next: a737 
=== Usages ===
v749 
=== Predecessor ===
a735 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v753 lastLocationAccess: - #next: a737  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a737 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
v750 
=== Predecessor ===
a736 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a734 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a734  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a735 
=== Succesors ===
=== Usages ===
v70 j725 v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a735  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a736 
=== Succesors ===
=== Usages ===
v70 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a736  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v747 v748 v749 v750 
=== Succesors ===
next: i738 
=== Usages ===
=== Predecessor ===
a737 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v747 v748 v749 v750 #next: i738  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v7 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i730 
y: i738 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i730 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
i738 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j305 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j306 
=== Usages ===
v766 v768 v769 
=== Predecessor ===
v349 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j306  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v152 j306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v759 
=== Succesors ===
next: i335 
=== Usages ===
v767 
=== Predecessor ===
j305 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v759 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
v343 
=== Predecessor ===
j306 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 v397 v404 v444 v493 v499 v539 v588 v594 v634 v684 v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i342 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid j333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j394 j436 j490 j531 j585 j626 j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 v650 v520 v615 v319 v358 v378 v554 v425 v459 v477 v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
i335 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v309 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
a337 v344 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
a336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v316 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j338 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j338 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
v319 j334 v770 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j338 
y: j278 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j338 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j324 v327 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v321 
falseSuccessor: v320 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v321 #falseSuccessor: v320  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a337 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a337 #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j339 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
lastLocationAccess: - 
=== Succesors ===
next: j324 
=== Usages ===
v770 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 lastLocationAccess: - #next: j324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
j339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a337 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j339 
index: j338 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j339 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
lastLocationAccess: - 
value: j324 
stateAfter: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
j324 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v770 lastLocationAccess: - value: j324 stateAfter: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j338 
y: j333 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j338 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v768 lastLocationAccess: - value: j334 stateAfter: - #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v313 v315 v326 v328 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v313 v315 v326 v328 #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
lastLocationAccess: - 
value: a732 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v759 lastLocationAccess: - value: a732 stateAfter: - #next: v410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a351 
=== Usages ===
v771 v772 
=== Predecessor ===
v410 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a351  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a732 
=== Succesors ===
=== Usages ===
?83 a351 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a136 
=== Succesors ===
next: j352 
=== Usages ===
j353 
=== Predecessor ===
j350 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a136 #next: j352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j353 
=== Usages ===
j354 j367 
=== Predecessor ===
a351 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a351 
=== Succesors ===
next: v357 
=== Usages ===
j354 v358 
=== Predecessor ===
j352 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a351 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j352 
y: j353 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j352 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 v487 v582 v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
x: j354 
y: j388 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j354 y: j388  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 v498 v593 v689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j367 j466 j561 j657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 v774 j488 v783 j583 v792 j679 v801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
j353 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v356 #falseSuccessor: v355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j353 
y: j278 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j353 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v363 #falseSuccessor: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i395 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i395  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j352 
y: i366 
=== Succesors ===
=== Usages ===
j390 v774 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j352 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j367 
index: j365 
=== Succesors ===
=== Usages ===
i395 i396 v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
v403 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i395 
y: i402 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i395 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
i395 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v370 #falseSuccessor: v368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i396 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
v404 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i342 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i396 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v375 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - value: i342 stateAfter: - #next: j398  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j398 v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
v378 j394 v773 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v771 lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j398 
y: j278 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j398 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j367 
y: j365 
=== Succesors ===
=== Usages ===
v385 v400 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j367 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
j398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v380 #falseSuccessor: v379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j390 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j390 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j399 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
v773 
=== Predecessor ===
v379 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j399 
index: j398 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j399 index: j398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
lastLocationAccess: - 
value: j390 
stateAfter: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 lastLocationAccess: - value: j390 stateAfter: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j398 
y: j333 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j398 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
lastLocationAccess: - 
value: j394 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v771 lastLocationAccess: - value: j394 stateAfter: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v360 v362 v369 v374 v384 v386 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v360 v362 v369 v374 v384 v386 #next: v450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j411 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v775 v777 v778 
=== Predecessor ===
v450 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i437 
=== Usages ===
v776 
=== Predecessor ===
j411 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
v444 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v775 lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i342 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v415 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a438 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
a439 v445 
=== Predecessor ===
v414 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v776 lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
a438 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v422 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j440 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
j440 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
lastLocationAccess: - 
=== Succesors ===
next: v428 
=== Usages ===
v425 j436 v779 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 lastLocationAccess: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j278 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j440 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
j430 v433 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
j440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v427 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a439 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a439 #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j441  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
lastLocationAccess: - 
=== Succesors ===
next: j430 
=== Usages ===
v779 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 lastLocationAccess: - #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a439 
=== Succesors ===
next: v442 
=== Usages ===
v442 
=== Predecessor ===
j441 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a439 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j441 
index: j440 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
lastLocationAccess: - 
value: j430 
stateAfter: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
j430 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v779 lastLocationAccess: - value: j430 stateAfter: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j440 
y: j333 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j440 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
lastLocationAccess: - 
value: j436 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v777 lastLocationAccess: - value: j436 stateAfter: - #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 v432 v434 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 v432 v434 #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a733 
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a733 stateAfter: - #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j451 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a452 
=== Usages ===
v780 v781 
=== Predecessor ===
v505 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a452  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a733 
=== Succesors ===
=== Usages ===
?16 a452 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a158 
=== Succesors ===
next: j453 
=== Usages ===
j454 
=== Predecessor ===
j451 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a158 #next: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j454 
=== Usages ===
j455 j466 
=== Predecessor ===
a452 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a452 
=== Succesors ===
next: v458 
=== Usages ===
j455 v459 
=== Predecessor ===
j453 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a452 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j453 
y: j454 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j453 y: j454  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
x: j455 
y: j388 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j455 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
j454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j278 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j454 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v464 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i491 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i491  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j453 
y: i366 
=== Succesors ===
=== Usages ===
j488 v783 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j453 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j466 
index: j365 
=== Succesors ===
=== Usages ===
i491 i492 v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v498 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i402 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i491 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
i491 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v469 #falseSuccessor: v467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i492 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v499 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i342 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i492 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
i492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v474 #falseSuccessor: v472  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - value: i342 stateAfter: - #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j451 
index: - 
=== Succesors ===
=== Usages ===
j494 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
v477 j490 v782 
=== Predecessor ===
v493 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v780 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j278 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j494 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j466 
y: j365 
=== Succesors ===
=== Usages ===
v484 v496 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j466 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j488 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j488 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j451 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
v782 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v781 lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: j494 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v782 
lastLocationAccess: - 
value: j488 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v782 lastLocationAccess: - value: j488 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j494 
y: j333 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j494 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
lastLocationAccess: - 
value: j490 
stateAfter: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 lastLocationAccess: - value: j490 stateAfter: - #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v461 v463 v468 v473 v483 v485 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v461 v463 v468 v473 v483 v485 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a733 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a733  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.8737766266527316
stamp: void
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i739 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i739  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a158 a1 - a136 
=== Succesors ===
=== Usages ===
v803 i739 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a158 a1 - a136  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a731 
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-42507|0xffffffffffff59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v762 
lastLocationAccess: - 
=== Succesors ===
next: i740 
=== Usages ===
v31 v73 v174 v242 j230 i231 v239 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v762 lastLocationAccess: - #next: i740  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i740 v172 v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i740 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v73 i78 v174 v764 
=== Predecessor ===
i739 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i740 
y: i739 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i740 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9816102129714395
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i740 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v75 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i740 
y: i739 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i740 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v257 #falseSuccessor: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i740 
y: i40 
=== Succesors ===
=== Usages ===
v172 i102 i231 j743 v239 v242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i740 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i78 
stateAfter: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i78 stateAfter: - #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j506 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
v784 v786 v787 
=== Predecessor ===
v545 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i532 
=== Usages ===
v785 
=== Predecessor ===
j506 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v539 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v784 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i342 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i532 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v510 #falseSuccessor: v509  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
a534 v540 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
a533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v517 #falseSuccessor: v513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j535 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j535  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j535 v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
v520 j531 v788 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v786 lastLocationAccess: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j278 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j535 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a534 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
j525 v528 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v522 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v522 #falseSuccessor: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a534 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a534 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j536 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
lastLocationAccess: - 
=== Succesors ===
next: j525 
=== Usages ===
v788 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v787 lastLocationAccess: - #next: j525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a534 
=== Succesors ===
next: v537 
=== Usages ===
v537 
=== Predecessor ===
j536 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j536 
index: j535 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j536 index: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
lastLocationAccess: - 
value: j525 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
j525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 lastLocationAccess: - value: j525 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j535 
y: j333 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j535 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
lastLocationAccess: - 
value: j531 
stateAfter: - 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 lastLocationAccess: - value: j531 stateAfter: - #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v514 v516 v527 v529 
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v514 v516 v527 v529 #next: a741  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v765 ?83 v764 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a164 
index: i740 
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a164 index: i740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
a183 v203 v185 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 lastLocationAccess: - #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a741 
stateAfter: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a741 stateAfter: - #next: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a547 
=== Usages ===
v789 v790 
=== Predecessor ===
v600 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a547  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
?83 a547 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a183 
=== Succesors ===
next: j548 
=== Usages ===
j549 
=== Predecessor ===
j546 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a183 #next: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j549 
=== Usages ===
j550 j561 
=== Predecessor ===
a547 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a547 
=== Succesors ===
next: v553 
=== Usages ===
j550 v554 
=== Predecessor ===
j548 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a547 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j548 
y: j549 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j548 y: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j550 
y: j388 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j550 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
j549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v552 #falseSuccessor: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j278 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j549 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v559 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v559 #falseSuccessor: v555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i586 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j548 
y: i366 
=== Succesors ===
=== Usages ===
j583 v792 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j548 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j561 
index: j365 
=== Succesors ===
=== Usages ===
i586 i587 v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v593 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i586 
y: i402 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i586 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
i586 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i587 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
v594 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i342 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i587 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
i587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v569 #falseSuccessor: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j589 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - value: i342 stateAfter: - #next: j589  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
j589 v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j589 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
v572 j585 v791 
=== Predecessor ===
v588 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v789 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j589 
y: j278 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j589 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j561 
y: j365 
=== Succesors ===
=== Usages ===
v579 v591 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j561 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
j589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j583 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j583 #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j590 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j590  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
j590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j590 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
lastLocationAccess: - 
=== Succesors ===
next: v591 
=== Usages ===
v791 
=== Predecessor ===
v573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 lastLocationAccess: - #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j590 
index: j589 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j590 index: j589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
lastLocationAccess: - 
value: j583 
stateAfter: - 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
j590 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 lastLocationAccess: - value: j583 stateAfter: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j589 
y: j333 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j589 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
lastLocationAccess: - 
value: j585 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 lastLocationAccess: - value: j585 stateAfter: - #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 v563 v568 v578 v580 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 v563 v568 v578 v580 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a741  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8776268255188316
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v87 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i739 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v705 #falseSuccessor: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i739 
y: i78 
=== Succesors ===
=== Usages ===
j234 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i739 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i231 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j234 
y: j743 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j234 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j273 
y: j235 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j273 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i739 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i739  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j274 
y: j230 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j274 y: j230  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v713 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i739 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i78 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v703 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v703 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v709 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v709 #next: v262  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a183 a1 a164 a136 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a183 a1 a164 a136  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 189
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0x66445d5f]: GuardMovement@2[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v701 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v701 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i78 i41 
=== Succesors ===
=== Usages ===
v31 i41 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i78 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i102 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i739 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9816102129714395
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i102 
y: i40 
=== Succesors ===
=== Usages ===
v186 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i41 stateAfter: - #next: v640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j601 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j601 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j602 
=== Usages ===
v793 v795 v796 
=== Predecessor ===
v640 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i627 
=== Usages ===
v794 
=== Predecessor ===
j601 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v793 
lastLocationAccess: - 
=== Succesors ===
next: v606 
=== Usages ===
v634 
=== Predecessor ===
j602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v793 lastLocationAccess: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i627 
y: i342 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i627 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i627 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v605 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a628 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a628  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
a628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a628 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v794 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
a629 v635 
=== Predecessor ===
v604 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v794 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a628 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a628  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v612 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
a628 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v612 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j630 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
j630 v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
lastLocationAccess: - 
=== Succesors ===
next: v618 
=== Usages ===
v615 j626 v797 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v795 lastLocationAccess: - #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j630 
y: j278 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j630 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a628 
=== Succesors ===
=== Usages ===
j620 v623 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a628  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
j630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v617 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a629 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a629 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j631 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j631  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j631 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
lastLocationAccess: - 
=== Succesors ===
next: j620 
=== Usages ===
v797 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 lastLocationAccess: - #next: j620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a629 
=== Succesors ===
next: v632 
=== Usages ===
v632 
=== Predecessor ===
j631 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a629 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j631 
index: j630 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j631 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
lastLocationAccess: - 
value: j620 
stateAfter: - 
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
j620 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v797 lastLocationAccess: - value: j620 stateAfter: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j630 
y: j333 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j630 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
lastLocationAccess: - 
value: j626 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v795 lastLocationAccess: - value: j626 stateAfter: - #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v609 v611 v622 v624 
=== Succesors ===
next: a742 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v609 v611 v622 v624 #next: a742  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a164 
index: i102 
=== Succesors ===
=== Usages ===
a742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a164 index: i102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a742 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
v198 v205 a641 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v765 lastLocationAccess: - #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a742 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
a742 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a742 stateAfter: - #next: v696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j642 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a643 
=== Usages ===
v798 v799 
=== Predecessor ===
v696 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a643  <|@  <|@
f <@~|@floating>@ <|@
tid a641 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a742 
=== Succesors ===
=== Usages ===
a643 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a641 
=== Succesors ===
next: j644 
=== Usages ===
j645 
=== Predecessor ===
j642 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a641 #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j645 
=== Usages ===
j646 j657 
=== Predecessor ===
a643 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a643 
=== Succesors ===
next: v649 
=== Usages ===
j646 v650 
=== Predecessor ===
j644 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a643 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j644 
y: j645 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j644 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j646 
y: j388 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j646 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
j645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v648 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j645 
y: j278 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j645 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v655 #falseSuccessor: v651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v655 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i682 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j644 
y: i366 
=== Succesors ===
=== Usages ===
j679 v801 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: j365 
=== Succesors ===
=== Usages ===
i682 i683 v684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: v661 
=== Usages ===
v689 
=== Predecessor ===
v651 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i402 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i682 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v689 
=== Succesors ===
trueSuccessor: v660 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
i682 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v689 #trueSuccessor: v660 #falseSuccessor: v658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v660 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i683 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
v690 
=== Predecessor ===
v662 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i683 
y: i342 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i683 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
i683 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v665 #falseSuccessor: v663  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j685 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - value: i342 stateAfter: - #next: j685  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j642 
index: - 
=== Succesors ===
=== Usages ===
j685 v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j685 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
v668 j681 v800 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j278 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j685 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j657 
y: j365 
=== Succesors ===
=== Usages ===
v675 v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j657 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v668 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
j685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v668 #trueSuccessor: v670 #falseSuccessor: v669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j679 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j679 #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j686 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j686  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j642 
index: - 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
=== Succesors ===
next: v687 
=== Usages ===
v800 
=== Predecessor ===
v669 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j686 
index: j685 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j686 index: j685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
lastLocationAccess: - 
value: j679 
stateAfter: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v800 lastLocationAccess: - value: j679 stateAfter: - #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j685 
y: j333 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j685 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
value: j681 
stateAfter: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - value: j681 stateAfter: - #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v654 v659 v664 v674 v676 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v654 v659 v664 v674 v676 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a742 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a742  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8776268255188316
stamp: void
=== Inputs ===
condition: v205 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v205 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@*|@fixed>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 175
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v100 v101 
=== Succesors ===
next: j716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v100 v101 #next: j716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j725 
=== Usages ===
j717 
=== Predecessor ===
v33 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
j719 j723 
=== Predecessor ===
j716 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v748 lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j716 
y: j715 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j716 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j717 
y: j725 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j717 y: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
j725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 lastLocationAccess: - value: j719 stateAfter: - #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j725 
y: i722 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j725 y: i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 lastLocationAccess: - value: j723 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd8ce15d8]: UnreachedCode@5[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j715 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a729 
=== Usages ===
j717 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a729  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v755 v756 v758 v759 ?16 ?83 v763 j352 j453 j548 j644 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
=== Succesors ===
next: i730 
=== Usages ===
v761 v757 
=== Predecessor ===
j715 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - #next: i730  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v802 i730 a733 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v4|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-36363|0xffffffffffff71f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v757 
lastLocationAccess: - 
=== Succesors ===
next: a731 
=== Usages ===
v7 
=== Predecessor ===
a729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v757 lastLocationAccess: - #next: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result [v4|DWORD[_] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
a731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a731 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v761 
lastLocationAccess: - 
=== Succesors ===
next: a732 
=== Usages ===
a164 v762 
=== Predecessor ===
i730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v761 lastLocationAccess: - #next: a732  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a732 v160 v185 v198 j412 j602 j507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
=== Succesors ===
next: a733 
=== Usages ===
a136 v152 v760 
=== Predecessor ===
a731 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - #next: a733  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v7|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a732 
=== Succesors ===
=== Usages ===
a733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a733 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-39435|0xffffffffffff65f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v760 
lastLocationAccess: - 
=== Succesors ===
next: a734 
=== Usages ===
a158 v201 v160 
=== Predecessor ===
a732 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v760 lastLocationAccess: - #next: a734  <|@  <|@
f <@~|@floating>@ <|@
tid a116 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 v752 v753 v754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
result [v9|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a734 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: a735 
=== Usages ===
v747 
=== Predecessor ===
a733 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v751 lastLocationAccess: - #next: a735  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
result [v9|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a735 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v752 
lastLocationAccess: - 
=== Succesors ===
next: a736 
=== Usages ===
v748 
=== Predecessor ===
a734 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v752 lastLocationAccess: - #next: a736  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
result [v9|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a736 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v753 
lastLocationAccess: - 
=== Succesors ===
next: a737 
=== Usages ===
v749 
=== Predecessor ===
a735 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v753 lastLocationAccess: - #next: a737  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
result [v9|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
a737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a737 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
v750 
=== Predecessor ===
a736 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v10|DWORD[_] * 8 + 13952] <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a734 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a734  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v11|DWORD[_] * 8 + 13952] <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a735 
=== Succesors ===
=== Usages ===
v70 j725 v727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a735  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
result [v12|DWORD[_] * 8 + 13952] <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a736 
=== Succesors ===
=== Usages ===
v70 v728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a736  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
result [v13|DWORD[_] * 8 + 13952] <|@
d <@d|@=== Debug Properties ===
displacement: 13952
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v747 v748 v749 v750 
=== Succesors ===
next: i738 
=== Usages ===
=== Predecessor ===
a737 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v747 v748 v749 v750 #next: i738  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v7 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v758 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i730 
y: i738 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i730 y: i738  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
i738 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j305 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j306 
=== Usages ===
v766 v768 v769 
=== Predecessor ===
v349 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j306  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v152 j306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v759 
=== Succesors ===
next: i335 
=== Usages ===
v767 
=== Predecessor ===
j305 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v759 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
v343 
=== Predecessor ===
j306 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 v397 v404 v444 v493 v499 v539 v588 v594 v634 v684 v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i342 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i342  <|@  <|@
f <@~|@floating>@ <|@
tid j333 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 j394 j436 j490 j531 j585 j626 j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 v650 v520 v615 v319 v358 v378 v554 v425 v459 v477 v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
i335 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v309 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v14|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
a337 v344 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
a336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v316 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j338 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j338 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
v319 j334 v770 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j338 
y: j278 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j338 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j324 v327 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v321 
falseSuccessor: v320 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v321 #falseSuccessor: v320  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a337 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a337 #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j339 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v769 
lastLocationAccess: - 
=== Succesors ===
next: j324 
=== Usages ===
v770 
=== Predecessor ===
v320 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v769 lastLocationAccess: - #next: j324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j324 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
j339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a337 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v18|QWORD + v16|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j339 
index: j338 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j339 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v770 
lastLocationAccess: - 
value: j324 
stateAfter: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
j324 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v770 lastLocationAccess: - value: j324 stateAfter: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j338 
y: j333 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j338 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v768 lastLocationAccess: - value: j334 stateAfter: - #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v313 v315 v326 v328 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v313 v315 v326 v328 #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
lastLocationAccess: - 
value: a732 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v759 lastLocationAccess: - value: a732 stateAfter: - #next: v410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a351 
=== Usages ===
v771 v772 
=== Predecessor ===
v410 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a351  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a732 
=== Succesors ===
=== Usages ===
?83 a351 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a351 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a136 
=== Succesors ===
next: j352 
=== Usages ===
j353 
=== Predecessor ===
j350 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a136 #next: j352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j352 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j353 
=== Usages ===
j354 j367 
=== Predecessor ===
a351 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j353 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a351 
=== Succesors ===
next: v357 
=== Usages ===
j354 v358 
=== Predecessor ===
j352 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a351 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j352 
y: j353 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j352 y: j353  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 v487 v582 v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
x: j354 
y: j388 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j354 y: j388  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 v498 v593 v689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j367 j466 j561 j657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j390 v774 j488 v783 j583 v792 j679 v801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
j353 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v356 #falseSuccessor: v355  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j353 
y: j278 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j353 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v363 #falseSuccessor: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i395 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i395  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j352 
y: i366 
=== Succesors ===
=== Usages ===
j390 v774 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j352 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v23|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j367 
index: j365 
=== Succesors ===
=== Usages ===
i395 i396 v397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
v403 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i395 
y: i402 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i395 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
i395 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v370 #falseSuccessor: v368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: i396 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
v404 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i342 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i396 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i396 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v375 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v774 lastLocationAccess: - value: i342 stateAfter: - #next: j398  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j398 v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
v378 j394 v773 
=== Predecessor ===
v397 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v771 lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j398 
y: j278 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j398 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j390 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j367 
y: j365 
=== Succesors ===
=== Usages ===
v385 v400 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j367 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v380 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
j398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v380 #falseSuccessor: v379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j390 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j390 #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j399 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j399  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
j399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
v773 
=== Predecessor ===
v379 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v26|QWORD + v24|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j399 
index: j398 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j399 index: j398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
lastLocationAccess: - 
value: j390 
stateAfter: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v773 lastLocationAccess: - value: j390 stateAfter: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid j394 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: i64
=== Inputs ===
x: j398 
y: j333 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j398 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
lastLocationAccess: - 
value: j394 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v771 lastLocationAccess: - value: j394 stateAfter: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v360 v362 v369 v374 v384 v386 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v360 v362 v369 v374 v384 v386 #next: v450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j411 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j411 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v775 v777 v778 
=== Predecessor ===
v450 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i437 
=== Usages ===
v776 
=== Predecessor ===
j411 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
v444 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v775 lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i342 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v415 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a438 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a438  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v28|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a438 <|@
result v29|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
lastLocationAccess: - 
=== Succesors ===
next: v423 
=== Usages ===
a439 v445 
=== Predecessor ===
v414 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v776 lastLocationAccess: - #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
a438 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v422 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j440 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
j440 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
lastLocationAccess: - 
=== Succesors ===
next: v428 
=== Usages ===
v425 j436 v779 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 lastLocationAccess: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j278 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j440 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a439 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a438 
=== Succesors ===
=== Usages ===
j430 v433 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a438  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
j440 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v427 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a439 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a439 #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j441  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j411 
index: - 
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j411 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
lastLocationAccess: - 
=== Succesors ===
next: j430 
=== Usages ===
v779 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 lastLocationAccess: - #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a439 
=== Succesors ===
next: v442 
=== Usages ===
v442 
=== Predecessor ===
j441 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a439 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v32|QWORD + v30|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j441 
index: j440 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
lastLocationAccess: - 
value: j430 
stateAfter: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
j430 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v779 lastLocationAccess: - value: j430 stateAfter: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j440 
y: j333 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j440 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
lastLocationAccess: - 
value: j436 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v777 lastLocationAccess: - value: j436 stateAfter: - #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 v432 v434 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 v432 v434 #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a733 
stateAfter: - 
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a733 stateAfter: - #next: v505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j451 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j451 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a452 
=== Usages ===
v780 v781 
=== Predecessor ===
v505 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a452  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a733 
=== Succesors ===
=== Usages ===
?16 a452 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a452 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a158 
=== Succesors ===
next: j453 
=== Usages ===
j454 
=== Predecessor ===
j451 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a158 #next: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j453 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j454 
=== Usages ===
j455 j466 
=== Predecessor ===
a452 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j454 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a452 
=== Succesors ===
next: v458 
=== Usages ===
j455 v459 
=== Predecessor ===
j453 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a452 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j453 
y: j454 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j453 y: j454  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
x: j455 
y: j388 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j455 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v456 
=== Usages ===
=== Predecessor ===
j454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v457 #falseSuccessor: v456  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j278 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j454 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v464 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i491 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i491  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j453 
y: i366 
=== Succesors ===
=== Usages ===
j488 v783 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j453 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v36|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j466 
index: j365 
=== Succesors ===
=== Usages ===
i491 i492 v493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v498 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i402 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i491 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
i491 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v469 #falseSuccessor: v467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i492 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v499 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i492 
y: i342 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i492 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
i492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v474 #falseSuccessor: v472  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 lastLocationAccess: - value: i342 stateAfter: - #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j451 
index: - 
=== Succesors ===
=== Usages ===
j494 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
lastLocationAccess: - 
=== Succesors ===
next: v480 
=== Usages ===
v477 j490 v782 
=== Predecessor ===
v493 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v780 lastLocationAccess: - #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j278 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j494 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j466 
y: j365 
=== Succesors ===
=== Usages ===
v484 v496 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j466 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v479 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v479 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j488 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j488 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j451 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j451 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
v782 
=== Predecessor ===
v478 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v781 lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v39|QWORD + v37|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: j494 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v782 
lastLocationAccess: - 
value: j488 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v782 lastLocationAccess: - value: j488 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: i64
=== Inputs ===
x: j494 
y: j333 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j494 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
lastLocationAccess: - 
value: j490 
stateAfter: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 lastLocationAccess: - value: j490 stateAfter: - #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v461 v463 v468 v473 v483 v485 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v461 v463 v468 v473 v483 v485 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a733 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a733  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.8737766266527316
stamp: void
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i739 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i739  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a158 a1 - a136 
=== Succesors ===
=== Usages ===
v803 i739 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a158 a1 - a136  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a731 
=== Succesors ===
=== Usages ===
i739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i739 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-42507|0xffffffffffff59f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v762 
lastLocationAccess: - 
=== Succesors ===
next: i740 
=== Usages ===
v31 v73 v174 v242 j230 i231 v239 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v762 lastLocationAccess: - #next: i740  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i740 v172 v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i740 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
v73 i78 v174 v764 
=== Predecessor ===
i739 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i740 
y: i739 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i740 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9816102129714395
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i740 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v75 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i740 
y: i739 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i740 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v257 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v257 #falseSuccessor: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i740 
y: i40 
=== Succesors ===
=== Usages ===
v172 i102 i231 j743 v239 v242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i740 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i78 
stateAfter: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i78 stateAfter: - #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j506 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
v784 v786 v787 
=== Predecessor ===
v545 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i532 
=== Usages ===
v785 
=== Predecessor ===
j506 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
i532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v539 
=== Predecessor ===
j507 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v784 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i532 
y: i342 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i532 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v509 
=== Usages ===
=== Predecessor ===
i532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v510 #falseSuccessor: v509  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v44|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
a534 v540 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
a533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v517 #falseSuccessor: v513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j535 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j535  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j535 v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
v520 j531 v788 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v786 lastLocationAccess: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j278 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j535 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a534 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a533 
=== Succesors ===
=== Usages ===
j525 v528 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a533  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v522 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v522 #falseSuccessor: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a534 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a534 #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j536 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
lastLocationAccess: - 
=== Succesors ===
next: j525 
=== Usages ===
v788 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v787 lastLocationAccess: - #next: j525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a534 
=== Succesors ===
next: v537 
=== Usages ===
v537 
=== Predecessor ===
j536 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [v48|QWORD + v46|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j536 
index: j535 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j536 index: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
lastLocationAccess: - 
value: j525 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
j525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 lastLocationAccess: - value: j525 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j535 
y: j333 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j535 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
lastLocationAccess: - 
value: j531 
stateAfter: - 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 lastLocationAccess: - value: j531 stateAfter: - #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v514 v516 v527 v529 
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v514 v516 v527 v529 #next: a741  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a731 
=== Succesors ===
=== Usages ===
v765 ?83 v764 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a731  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [v50|QWORD[.] + v42|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a164 
index: i740 
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a164 index: i740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
result v51|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
a183 v203 v185 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 lastLocationAccess: - #next: v185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a741 
stateAfter: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a741 stateAfter: - #next: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a547 
=== Usages ===
v789 v790 
=== Predecessor ===
v600 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a547  <|@  <|@
f <@~|@floating>@ <|@
tid a183 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
?83 a547 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a547 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a183 
=== Succesors ===
next: j548 
=== Usages ===
j549 
=== Predecessor ===
j546 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a183 #next: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j549 
=== Usages ===
j550 j561 
=== Predecessor ===
a547 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a547 
=== Succesors ===
next: v553 
=== Usages ===
j550 v554 
=== Predecessor ===
j548 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a547 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j548 
y: j549 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j548 y: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j550 
y: j388 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j550 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
j549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v552 #falseSuccessor: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j278 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j549 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v559 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v559 #falseSuccessor: v555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i586 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j548 
y: i366 
=== Succesors ===
=== Usages ===
j583 v792 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j548 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
result [v54|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j561 
index: j365 
=== Succesors ===
=== Usages ===
i586 i587 v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
=== Succesors ===
next: v565 
=== Usages ===
v593 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i586 
y: i402 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i586 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
i586 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i587 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
v594 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i342 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i587 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
i587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v569 #falseSuccessor: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v792 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j589 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v792 lastLocationAccess: - value: i342 stateAfter: - #next: j589  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
j589 v592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j589 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
v572 j585 v791 
=== Predecessor ===
v588 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v789 lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j589 
y: j278 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j589 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j561 
y: j365 
=== Succesors ===
=== Usages ===
v579 v591 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j561 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v573 
=== Usages ===
=== Predecessor ===
j589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v574 #falseSuccessor: v573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j583 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j583 #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j590 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j590  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
j590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j590 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
lastLocationAccess: - 
=== Succesors ===
next: v591 
=== Usages ===
v791 
=== Predecessor ===
v573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 lastLocationAccess: - #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result [v57|QWORD + v55|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j590 
index: j589 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j590 index: j589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
lastLocationAccess: - 
value: j583 
stateAfter: - 
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
j590 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v791 lastLocationAccess: - value: j583 stateAfter: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j589 
y: j333 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j589 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
lastLocationAccess: - 
value: j585 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 lastLocationAccess: - value: j585 stateAfter: - #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 v563 v568 v578 v580 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 v563 v568 v578 v580 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a741  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8776268255188316
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v87 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i739 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v705 #falseSuccessor: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i739 
y: i78 
=== Succesors ===
=== Usages ===
j234 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i739 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i231 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i231  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
j273 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j234 
y: j743 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j234 y: j743  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j273 
y: j235 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j273 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i739 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i739  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j274 
y: j230 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j274 y: j230  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v713 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i739 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i78 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v703 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v703 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v709 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v709 #next: v262  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a183 a1 a164 a136 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a183 a1 a164 a136  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 189
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0x66445d5f]: GuardMovement@2[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v701 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v701 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i78 i41 
=== Succesors ===
=== Usages ===
v31 i41 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i78 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i102 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i739 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i739  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9816102129714395
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i102 
y: i40 
=== Succesors ===
=== Usages ===
v186 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i102 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 lastLocationAccess: - value: i41 stateAfter: - #next: v640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j601 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j601 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j602 
=== Usages ===
v793 v795 v796 
=== Predecessor ===
v640 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v755 
=== Succesors ===
next: i627 
=== Usages ===
v794 
=== Predecessor ===
j601 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v755 #next: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v793 
lastLocationAccess: - 
=== Succesors ===
next: v606 
=== Usages ===
v634 
=== Predecessor ===
j602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v793 lastLocationAccess: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i627 
y: i342 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i627 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i627 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v605 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: a628 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a628  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
result [v67|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
a628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a628 <|@
result v68|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v794 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
a629 v635 
=== Predecessor ===
v604 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v794 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a628 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a628  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v612 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
a628 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v612 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v612 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j630 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
j630 v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j630 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
lastLocationAccess: - 
=== Succesors ===
next: v618 
=== Usages ===
v615 j626 v797 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v795 lastLocationAccess: - #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j630 
y: j278 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j630 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a628 
=== Succesors ===
=== Usages ===
j620 v623 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a628  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
j630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v617 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a629 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a629 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j631 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j631  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j601 
index: - 
=== Succesors ===
=== Usages ===
j631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j601 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j631 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
lastLocationAccess: - 
=== Succesors ===
next: j620 
=== Usages ===
v797 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 lastLocationAccess: - #next: j620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j620 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a629 
=== Succesors ===
next: v632 
=== Usages ===
v632 
=== Predecessor ===
j631 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a629 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
result [v71|QWORD + v69|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j631 
index: j630 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j631 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
lastLocationAccess: - 
value: j620 
stateAfter: - 
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
j620 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v797 lastLocationAccess: - value: j620 stateAfter: - #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j630 
y: j333 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j630 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v795 
lastLocationAccess: - 
value: j626 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v795 lastLocationAccess: - value: j626 stateAfter: - #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v609 v611 v622 v624 
=== Succesors ===
next: a742 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v609 v611 v622 v624 #next: a742  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v50|QWORD[.] + v65|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a164 
index: i102 
=== Succesors ===
=== Usages ===
a742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a164 index: i102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a742 <|@
result v73|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
lastLocationAccess: - 
=== Succesors ===
next: v198 
=== Usages ===
v198 v205 a641 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v765 lastLocationAccess: - #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: a742 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
a742 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: a742 stateAfter: - #next: v696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j642 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j642 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a643 
=== Usages ===
v798 v799 
=== Predecessor ===
v696 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a643  <|@  <|@
f <@~|@floating>@ <|@
tid a641 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a742 
=== Succesors ===
=== Usages ===
a643 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a643 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a641 
=== Succesors ===
next: j644 
=== Usages ===
j645 
=== Predecessor ===
j642 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a641 #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j645 
=== Usages ===
j646 j657 
=== Predecessor ===
a643 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j645 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a643 
=== Succesors ===
next: v649 
=== Usages ===
j646 v650 
=== Predecessor ===
j644 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a643 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j644 
y: j645 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j644 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
x: j646 
y: j388 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j646 y: j388  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
j645 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v648 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j645 
y: j278 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j645 y: j278  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v651 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v655 #falseSuccessor: v651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v655 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i682 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j644 
y: i366 
=== Succesors ===
=== Usages ===
j679 v801 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
result [v76|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: j365 
=== Succesors ===
=== Usages ===
i682 i683 v684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: v661 
=== Usages ===
v689 
=== Predecessor ===
v651 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i402 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i682 y: i402  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v689 
=== Succesors ===
trueSuccessor: v660 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
i682 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v689 #trueSuccessor: v660 #falseSuccessor: v658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v660 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: i683 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i683  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
v690 
=== Predecessor ===
v662 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i683 
y: i342 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i683 y: i342  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v663 
=== Usages ===
=== Predecessor ===
i683 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v665 #falseSuccessor: v663  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v665 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
value: i342 
stateAfter: - 
=== Succesors ===
next: j685 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - value: i342 stateAfter: - #next: j685  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j642 
index: - 
=== Succesors ===
=== Usages ===
j685 v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j685 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
v668 j681 v800 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j278 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j685 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j657 
y: j365 
=== Succesors ===
=== Usages ===
v675 v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j657 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v668 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
j685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v668 #trueSuccessor: v670 #falseSuccessor: v669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j679 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j679 #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
next: j686 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j686  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j642 
index: - 
=== Succesors ===
=== Usages ===
j686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
=== Succesors ===
next: v687 
=== Usages ===
v800 
=== Predecessor ===
v669 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result [v79|QWORD + v77|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j686 
index: j685 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j686 index: j685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
lastLocationAccess: - 
value: j679 
stateAfter: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v800 lastLocationAccess: - value: j679 stateAfter: - #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: i64
=== Inputs ===
x: j685 
y: j333 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j685 y: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
value: j681 
stateAfter: - 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - value: j681 stateAfter: - #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v654 v659 v664 v674 v676 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v654 v659 v664 v674 v676 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a742 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a742  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8776268255188316
stamp: void
=== Inputs ===
condition: v205 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v205 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v803  <|@  <|@
f <@*|@fixed>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 175
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v100 v101 
=== Succesors ===
next: j716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v100 v101 #next: j716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j716 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j725 
=== Usages ===
j717 
=== Predecessor ===
v33 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j725 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
j719 j723 
=== Predecessor ===
j716 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v748 lastLocationAccess: - #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j716 
y: j715 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j716 y: j715  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j717 
y: j725 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j717 y: j725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
lastLocationAccess: - 
value: j719 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
j725 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 lastLocationAccess: - value: j719 stateAfter: - #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid i722 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j723 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: i64
=== Inputs ===
x: j725 
y: i722 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j725 y: i722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
lastLocationAccess: - 
value: j723 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 lastLocationAccess: - value: j723 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xd8ce15d8]: UnreachedCode@5[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v20|q [0, 1[[8, 14[[632, 638[[652, 654[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[632, 634[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 6[[88, 90[[162, 164[[210, 212[[282, 284[[358, 360[[434, 436[[530, 532[[604, 606[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 316[[320, 348[[352, 618[[656, 663[[664, 679[[680, 687[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister 112 MustHaveRegister 178 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 322 MustHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 384 MustHaveRegister 488 MustHaveRegister 498 MustHaveRegister 540 MustHaveRegister 544 ShouldHaveRegister 554 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|q [14, 643[14 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [16, 20[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [20, 316[[320, 348[[352, 366[20 MustHaveRegister 294 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [22, 98[22 MustHaveRegister 24 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [24, 290[24 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [30, 646[30 MustHaveRegister 38 MustHaveRegister 640 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [32, 650[32 MustHaveRegister 40 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v15|d [66, 74[[86, 88[66 MustHaveRegister 74 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v7|d [98, 652[[664, 679[[680, 687[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v0|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [102, 316[[320, 348[[352, 618[102 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v0|q [112, 116[[128, 134[[138, 144[112 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [142, 154[142 MustHaveRegister 146 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v23|q [144, 152[[160, 162[144 MustHaveRegister 152 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [180, 188[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [186, 198[186 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v29|d [188, 196[[208, 210[188 MustHaveRegister 196 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v8|d [220, 304[[680, 687[220 MustHaveRegister 222 ShouldHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v0|q [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v0|q [232, 236[[248, 254[[258, 264[232 MustHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [262, 274[262 MustHaveRegister 266 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v36|q [264, 272[[280, 282[264 MustHaveRegister 272 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [294, 316[[320, 348[[352, 618[294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 446 MustHaveRegister 454 MustHaveRegister 464 ShouldHaveRegister 470 MustHaveRegister 482 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [296, 316[[320, 348[[352, 368[296 MustHaveRegister 298 ShouldHaveRegister 302 ShouldHaveRegister 306 ShouldHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v42|d [306, 316[[320, 348[[352, 479[306 MustHaveRegister 308 MustHaveRegister 446 ShouldHaveRegister 454 ShouldHaveRegister 458 ShouldHaveRegister 470 ShouldHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [324, 332[324 MustHaveRegister 326 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [330, 342[330 MustHaveRegister 334 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|d [332, 340[[356, 358[332 MustHaveRegister 340 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v6|d [366, 618[[664, 679[366 MustHaveRegister 368 MustHaveRegister 538 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [368, 442[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|d [372, 448[[452, 472[[664, 679[372 MustHaveRegister 374 ShouldHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v0|q [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v0|q [384, 388[[400, 406[[410, 416[384 MustHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [414, 426[414 MustHaveRegister 418 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v54|q [416, 424[[432, 434[416 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d v41|d [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [456, 460[456 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v60|q [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|q [462, 466[462 MustHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d v66|d [480, 538[482 ShouldHaveRegister 486 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v65|d [486, 617[486 MustHaveRegister 488 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [498, 500[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [506, 518[506 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v68|d [508, 516[[528, 530[508 MustHaveRegister 516 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [518, 520[518 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [538, 612[538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v73|d [542, 550[542 MustHaveRegister 544 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v0|q [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v0|q [554, 558[[570, 576[[580, 586[554 MustHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [584, 596[584 MustHaveRegister 588 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v76|q [586, 594[[602, 604[586 MustHaveRegister 594 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [592, 594[592 MustHaveRegister 594 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q v81|q [636, 638[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v82|q [638, 642[638 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [640, 648[640 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v83|q [642, 644[642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q v85|q [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v84|q [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v20|q [0, 1[[8, 14[[632, 638[[652, 654[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[632, 634[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 6[[88, 90[[162, 164[[210, 212[[282, 284[[358, 360[[434, 436[[530, 532[[604, 606[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 316[[320, 348[[352, 618[[656, 663[[664, 679[[680, 687[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister 112 MustHaveRegister 178 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 322 MustHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 384 MustHaveRegister 488 MustHaveRegister 498 MustHaveRegister 540 MustHaveRegister 544 ShouldHaveRegister 554 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q v2|q [14, 643[14 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [16, 20[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 316[[320, 348[[352, 366[20 MustHaveRegister 294 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 98[22 MustHaveRegister 24 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 290[24 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [30, 646[30 MustHaveRegister 38 MustHaveRegister 640 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d -1 [32, 650[32 MustHaveRegister 40 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [66, 74[[86, 88[66 MustHaveRegister 74 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q v7|d [98, 652[[664, 679[[680, 687[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v0|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [102, 316[[320, 348[[352, 618[102 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v0|q [112, 116[[128, 134[[138, 144[112 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [142, 154[142 MustHaveRegister 146 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|q [144, 152[[160, 162[144 MustHaveRegister 152 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d -1 [180, 188[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [186, 198[186 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v29|d [188, 196[[208, 210[188 MustHaveRegister 196 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rbp|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v8|d [220, 304[[680, 687[220 MustHaveRegister 222 ShouldHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v0|q [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v0|q [232, 236[[248, 254[[258, 264[232 MustHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [262, 274[262 MustHaveRegister 266 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v36|q [264, 272[[280, 282[264 MustHaveRegister 272 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r13|q]" v39|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r9|d]" v41|d -1 [294, 316[[320, 348[[352, 618[294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 446 MustHaveRegister 454 MustHaveRegister 464 ShouldHaveRegister 470 MustHaveRegister 482 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [296, 316[[320, 348[[352, 368[296 MustHaveRegister 298 ShouldHaveRegister 302 ShouldHaveRegister 306 ShouldHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rcx|d]" v43|d v42|d [306, 316[[320, 348[[352, 479[306 MustHaveRegister 308 MustHaveRegister 446 ShouldHaveRegister 454 ShouldHaveRegister 458 ShouldHaveRegister 470 ShouldHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [324, 332[324 MustHaveRegister 326 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q -1 [330, 342[330 MustHaveRegister 334 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v45|d [332, 340[[356, 358[332 MustHaveRegister 340 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r14|q]" v48|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v6|d [366, 618[[664, 679[366 MustHaveRegister 368 MustHaveRegister 538 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v51|d DWORD "[rbp|d]" v51|d -1 [368, 442[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q v51|d [372, 420[372 MustHaveRegister 374 ShouldHaveRegister 380 MustHaveRegister  "OneSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v0|q [384, 388[[400, 406[[410, 416[384 MustHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r14|q]" v55|q -1 [414, 426[414 MustHaveRegister 418 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v54|q [416, 424[[432, 434[416 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r13|q]" v57|q -1 [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v41|d [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [456, 460[456 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|q [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [462, 466[462 MustHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v66|d [480, 538[482 ShouldHaveRegister 486 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbp|d]" v66|d v65|d [486, 617[486 MustHaveRegister 488 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [498, 500[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r13|q]" v69|q -1 [506, 518[506 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [508, 516[[528, 530[508 MustHaveRegister 516 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r14|q]" v71|q -1 [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [518, 520[518 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d -1 [538, 612[538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [542, 550[542 MustHaveRegister 544 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r13|q]" v75|q v0|q [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v0|q [554, 558[[570, 576[[580, 586[554 MustHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r13|q]" v77|q -1 [584, 596[584 MustHaveRegister 588 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|q [586, 594[[602, 604[586 MustHaveRegister 594 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r14|q]" v79|q -1 [592, 594[592 MustHaveRegister 594 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r10|q]" v82|q v81|q [636, 638[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|q [638, 642[638 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [640, 648[640 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v83|q [642, 644[642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v85|q [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v84|q [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r13|q]" v52|q v52|q [672, 679[ "OneSpillStore"
  v89|q QWORD "[vstack:0|q]" v52|q v52|q [420, 448[[452, 472[[664, 672[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v20|q [0, 1[[8, 14[[632, 638[[652, 654[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[632, 634[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 6[[88, 90[[162, 164[[210, 212[[282, 284[[358, 360[[434, 436[[530, 532[[604, 606[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 316[[320, 348[[352, 618[[656, 663[[664, 679[[680, 687[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister 112 MustHaveRegister 178 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 322 MustHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 384 MustHaveRegister 488 MustHaveRegister 498 MustHaveRegister 540 MustHaveRegister 544 ShouldHaveRegister 554 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q v2|q [14, 643[14 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [16, 20[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 316[[320, 348[[352, 366[20 MustHaveRegister 294 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 98[22 MustHaveRegister 24 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 290[24 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [30, 646[30 MustHaveRegister 38 MustHaveRegister 640 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d -1 [32, 650[32 MustHaveRegister 40 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [66, 74[[86, 88[66 MustHaveRegister 74 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q v7|d [98, 652[[664, 679[[680, 687[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v0|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [102, 316[[320, 348[[352, 618[102 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v0|q [112, 116[[128, 134[[138, 144[112 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [142, 154[142 MustHaveRegister 146 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|q [144, 152[[160, 162[144 MustHaveRegister 152 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d -1 [180, 188[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [186, 198[186 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v29|d [188, 196[[208, 210[188 MustHaveRegister 196 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rbp|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v8|d [220, 304[[680, 687[220 MustHaveRegister 222 ShouldHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v0|q [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v0|q [232, 236[[248, 254[[258, 264[232 MustHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [262, 274[262 MustHaveRegister 266 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v36|q [264, 272[[280, 282[264 MustHaveRegister 272 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r13|q]" v39|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r9|d]" v41|d -1 [294, 316[[320, 348[[352, 618[294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 446 MustHaveRegister 454 MustHaveRegister 464 ShouldHaveRegister 470 MustHaveRegister 482 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [296, 316[[320, 348[[352, 368[296 MustHaveRegister 298 ShouldHaveRegister 302 ShouldHaveRegister 306 ShouldHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rcx|d]" v43|d v42|d [306, 316[[320, 348[[352, 479[306 MustHaveRegister 308 MustHaveRegister 446 ShouldHaveRegister 454 ShouldHaveRegister 458 ShouldHaveRegister 470 ShouldHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [324, 332[324 MustHaveRegister 326 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q -1 [330, 342[330 MustHaveRegister 334 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v45|d [332, 340[[356, 358[332 MustHaveRegister 340 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r14|q]" v48|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v6|d [366, 618[[664, 679[366 MustHaveRegister 368 MustHaveRegister 538 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v51|d DWORD "[rbp|d]" v51|d -1 [368, 442[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q v51|d [372, 420[372 MustHaveRegister 374 ShouldHaveRegister 380 MustHaveRegister  "OneSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v0|q [384, 388[[400, 406[[410, 416[384 MustHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r14|q]" v55|q -1 [414, 426[414 MustHaveRegister 418 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v54|q [416, 424[[432, 434[416 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r13|q]" v57|q -1 [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v41|d [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [456, 460[456 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|q [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [462, 466[462 MustHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v66|d [480, 538[482 ShouldHaveRegister 486 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbp|d]" v66|d v65|d [486, 617[486 MustHaveRegister 488 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [498, 500[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r13|q]" v69|q -1 [506, 518[506 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [508, 516[[528, 530[508 MustHaveRegister 516 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r14|q]" v71|q -1 [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [518, 520[518 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d -1 [538, 612[538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [542, 550[542 MustHaveRegister 544 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r13|q]" v75|q v0|q [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v0|q [554, 558[[570, 576[[580, 586[554 MustHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r13|q]" v77|q -1 [584, 596[584 MustHaveRegister 588 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|q [586, 594[[602, 604[586 MustHaveRegister 594 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r14|q]" v79|q -1 [592, 594[592 MustHaveRegister 594 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r10|q]" v82|q v81|q [636, 638[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|q [638, 642[638 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [640, 648[640 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v83|q [642, 644[642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v85|q [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v84|q [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r13|q]" v52|q v52|q [672, 679[ "OneSpillStore"
  v89|q QWORD "[vstack:0|q]" v52|q v52|q [420, 448[[452, 472[[664, 672[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[v43|DWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[v66|DWORD] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v20|q [0, 1[[8, 14[[632, 638[[652, 654[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 1[[8, 10[[632, 634[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 6[[88, 90[[162, 164[[210, 212[[282, 284[[358, 360[[434, 436[[530, 532[[604, 606[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 316[[320, 348[[352, 618[[656, 663[[664, 679[[680, 687[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 44 MustHaveRegister 56 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister 112 MustHaveRegister 178 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 232 MustHaveRegister 296 MustHaveRegister 308 MustHaveRegister 322 MustHaveRegister 370 MustHaveRegister 374 ShouldHaveRegister 384 MustHaveRegister 488 MustHaveRegister 498 MustHaveRegister 540 MustHaveRegister 544 ShouldHaveRegister 554 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q v1|q [12, 14[12 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r11|q]" v3|q v2|q [14, 643[14 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [16, 20[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 316[[320, 348[[352, 366[20 MustHaveRegister 294 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d -1 [22, 98[22 MustHaveRegister 24 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 290[24 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [30, 646[30 MustHaveRegister 38 MustHaveRegister 640 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdi|d]" v12|d -1 [32, 650[32 MustHaveRegister 40 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rsi|d]" v13|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdx|q]" v16|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [66, 74[[86, 88[66 MustHaveRegister 74 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rcx|q]" v18|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q v7|d [98, 652[[664, 679[[680, 687[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v0|q [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [102, 316[[320, 348[[352, 618[102 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v0|q [112, 116[[128, 134[[138, 144[112 MustHaveRegister 114 MustHaveRegister 132 MustHaveRegister 140 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [142, 154[142 MustHaveRegister 146 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|q [144, 152[[160, 162[144 MustHaveRegister 152 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d -1 [180, 188[180 MustHaveRegister 182 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [186, 198[186 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q v29|d [188, 196[[208, 210[188 MustHaveRegister 196 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rbp|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v8|d [220, 304[[680, 687[220 MustHaveRegister 222 ShouldHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v0|q [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v0|q [232, 236[[248, 254[[258, 264[232 MustHaveRegister 234 MustHaveRegister 252 MustHaveRegister 260 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [262, 274[262 MustHaveRegister 266 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v36|q [264, 272[[280, 282[264 MustHaveRegister 272 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r13|q]" v39|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r9|d]" v41|d -1 [294, 316[[320, 348[[352, 618[294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 446 MustHaveRegister 454 MustHaveRegister 464 ShouldHaveRegister 470 MustHaveRegister 482 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v42|d DWORD "[rbp|d]" v42|d -1 [296, 316[[320, 348[[352, 368[296 MustHaveRegister 298 ShouldHaveRegister 302 ShouldHaveRegister 306 ShouldHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rcx|d]" v43|d v42|d [306, 316[[320, 348[[352, 479[306 MustHaveRegister 308 MustHaveRegister 446 ShouldHaveRegister 454 ShouldHaveRegister 458 ShouldHaveRegister 470 ShouldHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [324, 332[324 MustHaveRegister 326 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r13|q]" v46|q -1 [330, 342[330 MustHaveRegister 334 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v45|d [332, 340[[356, 358[332 MustHaveRegister 340 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r14|q]" v48|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v6|d [366, 618[[664, 679[366 MustHaveRegister 368 MustHaveRegister 538 MustHaveRegister 617 LiveAtLoopEnd  "NoSpillStore"
  v51|d DWORD "[rbp|d]" v51|d -1 [368, 442[368 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q v51|d [372, 420[372 MustHaveRegister 374 ShouldHaveRegister 380 MustHaveRegister  "OneSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v0|q [374, 376[374 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q v0|q [384, 388[[400, 406[[410, 416[384 MustHaveRegister 386 MustHaveRegister 404 MustHaveRegister 412 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r14|q]" v55|q -1 [414, 426[414 MustHaveRegister 418 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v54|q [416, 424[[432, 434[416 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r13|q]" v57|q -1 [422, 424[422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rsi|d]" v59|d v41|d [454, 456[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [456, 460[456 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rbp|q]" v61|q -1 [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q v60|q [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q v62|q [462, 466[462 MustHaveRegister 466 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q -1 [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v66|d [480, 538[482 ShouldHaveRegister 486 ShouldHaveRegister 538 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rbp|d]" v66|d v65|d [486, 617[486 MustHaveRegister 488 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [498, 500[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r13|q]" v69|q -1 [506, 518[506 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [508, 516[[528, 530[508 MustHaveRegister 516 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r14|q]" v71|q -1 [514, 516[514 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [518, 520[518 MustHaveRegister 520 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d -1 [538, 612[538 MustHaveRegister 540 MustHaveRegister 542 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q v73|d [542, 550[542 MustHaveRegister 544 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r13|q]" v75|q v0|q [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v0|q [554, 558[[570, 576[[580, 586[554 MustHaveRegister 556 MustHaveRegister 574 MustHaveRegister 582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r13|q]" v77|q -1 [584, 596[584 MustHaveRegister 588 MustHaveRegister 594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q v76|q [586, 594[[602, 604[586 MustHaveRegister 594 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r14|q]" v79|q -1 [592, 594[592 MustHaveRegister 594 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rsi|q]" v80|q -1 [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r10|q]" v82|q v81|q [636, 638[636 MustHaveRegister 638 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q v82|q [638, 642[638 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [640, 648[640 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[r10|q]" v85|q v83|q [642, 644[642 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v85|q [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v84|q [648, 650[648 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r13|q]" v52|q v52|q [672, 679[ "OneSpillStore"
  v89|q QWORD "[vstack:0|q]" v52|q v52|q [420, 448[[452, 472[[664, 672[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [v65|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction v1|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction v2|QWORD = SHL v1|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = OR (x: v2|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v4|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v8|DWORD[_] = MOV [v7|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v9|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v9|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v9|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction v13|DWORD[_] = MOV [v9|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v13|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v5|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v14|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v7|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction v21|QWORD[*] = XOR (x: v0|QWORD[.], y: v20|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH v21|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v20|QWORD[.], y: v20|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v23|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [v23|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [v23|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction v24|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction v25|QWORD[*] = ADD (x: v23|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction v26|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: v27|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction v28|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction v29|DWORD[_] = MOV [v28|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: v29|DWORD[_], y: v29|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction v30|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v30|QWORD, y: v30|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction v32|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v32|QWORD + v30|QWORD * 1 - 8], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction v33|QWORD = LEA [v30|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: v33|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v35|QWORD[*] = XOR (x: v0|QWORD[.], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH v35|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|QWORD[.], y: v34|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v36|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [v36|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [v36|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction v37|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction v38|QWORD[*] = ADD (x: v36|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v37|QWORD, y: v37|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction v39|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [v39|QWORD + v37|QWORD * 1 - 8], y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction v40|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: v40|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE v38|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction v41|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v43|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v43|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v44|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction v45|DWORD[_] = MOV [v44|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: v45|DWORD[_], y: v45|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction v46|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: v46|QWORD, y: v46|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v48|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v48|QWORD + v46|QWORD * 1 - 8], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: v49|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction v51|DWORD[_] = MOV [v50|QWORD[.] + v42|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v51|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction v53|QWORD[*] = XOR (x: v0|QWORD[.], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v53|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v52|QWORD[.], y: v52|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [v54|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [v54|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction v55|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction v56|QWORD[*] = ADD (x: v54|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: v55|QWORD, y: v55|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction v57|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [v57|QWORD + v55|QWORD * 1 - 8], y: v56|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction v58|QWORD = LEA [v55|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: v58|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE v56|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: v51|DWORD[_], y: v51|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction v59|DWORD = SUB (x: v41|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction v61|QWORD = MOV v43|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction v62|QWORD = ADD (x: v60|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction v64|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: v64|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v43|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v65|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction v66|DWORD = INC v65|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v66|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v67|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction v73|DWORD[_] = MOV [v50|QWORD[.] + v65|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v73|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction v75|QWORD[*] = XOR (x: v0|QWORD[.], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH v75|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction v76|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [v76|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [v76|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction v77|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction v78|QWORD[*] = ADD (x: v76|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: v77|QWORD, y: v77|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction v79|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [v79|QWORD + v77|QWORD * 1 - 8], y: v78|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction v80|QWORD = LEA [v77|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: v80|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE v78|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: v73|DWORD[_], y: v73|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE v66|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction v81|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction v82|QWORD = SHL v81|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction v83|QWORD = OR (x: v82|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction v84|QWORD = MOV [v11|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction v85|QWORD = SUB (x: v83|QWORD, ~y: v3|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction v86|QWORD = ADD (x: v85|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 13952], y: v86|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction v87|QWORD = INC v84|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [v12|DWORD[_] * 8 + 13952], y: v87|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v52|QWORD[.] 
locals: v0|QWORD[.] v50|QWORD[.] v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v34|QWORD[.] 
locals: v0|QWORD[.] - v20|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  104  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  132  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  180  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  182  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  234  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  252  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  296  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  326  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  372  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  386  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  404  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  464  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  556  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  574  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  582  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  584  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  634  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  638  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  642  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  644  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  660  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  662  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction vstack:0|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [366, 478[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [366, 478[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B13" "B15" "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B31" "B33" "B36" "B35" 
    successors "B38" "B94" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B93" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B93 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B95" 
    xhandlers
    flags 
    probability 4593715696587913064
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B95" 
    xhandlers
    flags 
    probability 4580288670252346948
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576097972119628790
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B91" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B91 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B66" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B64" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B64 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B62 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B62" 
    successors "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B88" 
    successors "B69" "B90" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587848745248050331
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615939444973040148
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B79 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600677240856324111
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B81" "B83" "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B95" 
    xhandlers
    flags 
    probability 4604055192614178856
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B95" 
    xhandlers
    flags 
    probability 4592227618746646245
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B95" 
    xhandlers
    flags 
    probability 4591865817260655992
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B90 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B90" "B89" "B91" "B93" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B96" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   30  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 13952] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 13952] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" "B6" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B19" "B14" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B18" "B17" 
    successors "B26" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B25" "B24" 
    successors "B37" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" "B32" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B30" "B32" "B36" "B35" 
    successors "B38" "B95" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B37" "B68" "B87" "B58" "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD <|@ <|@
      nr  676  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  678  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B95" 
    xhandlers
    flags 
    probability 4606045499725672998
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  292  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B92" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B42" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605900766949300404
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  358  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605128212208898005
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4604432912942535846
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  384  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    probability 4603807143602809903
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B52" "B54" "B57" "B56" 
    successors "B59" "B95" 
    xhandlers
    flags 
    probability 4605900766949300403
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B68" 
    xhandlers
    flags 
    probability 4604955367188865238
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B87" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B87" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617091590139130336
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616551032967956093
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B80" "B82" "B86" "B85" 
    successors "B88" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617692209218212828
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B68" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616957212584600023
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B88 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B88" 
    successors "B69" "B95" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617804731040048626
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  500  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602980172177936354
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  520  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602320534656693809
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815020
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B87" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4601455643182815021
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  590  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586388039647721711
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  600  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  604  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585765317786528983
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  618  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587079952826824742
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571631797043224766
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  452  <|@ instruction rbp|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  454  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  458  <|@ instruction rbp|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B68" "B65" 
    xhandlers
    flags 
    probability 4600451767561494742
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B5" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  178  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction r14|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590844858586384117
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  130  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  248  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590226814794062198
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B50 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4589670575380972471
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  396  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4589169959909191717
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4575549852763118574
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4574659869702175011
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction r14|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573858884947325804
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559547101310365108
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction MOV [r15|QWORD + 1156] y: -48411 size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, r13:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: r13|QWORD[.] 
locals: r10|QWORD[.] rax|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction MOV [r15|QWORD + 1156] y: -44827 size: DWORD <|@ <|@
      nr  652  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: rcx|QWORD[.] 
locals: r10|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85e604000048896c24104c8bd60f318bf248c1e6204c8bde4c0bd8418b721c8b14f5180000008b04f524000000458b4214468b0cc51800000048beaddeaddeaddeadde8b4e7c8b5e708b7e748b7678413b520c0f856f04000041807f40000f85670200004589421849c1e003498bf24933f048ba002099be027f000048f7c60000c0ff0f841a0000004d85c00f8411000000498bf248c1ee09803c16020f85d002000041807f40000f855202000045894a14418bc948c1e103498bf24833f148f7c60000c0ff0f841a0000004885c90f8411000000498bf248c1ee09803c16020f85a10200004585c90f84470000000f31448bd249c1e2204c0bd0488b04dd803600004d2bd34c03d04c8914dd8036000048ffc0488904fd80360000498bc0488b6c24104883c418493ba7500400000f87c6030000c3448b0cc50c000000418b6a10443bcd7ea8443bcd0f86550300008bcdffc141894a1041807f40000f85d201000048c1e0038b6ca81041896a14448bed49c1e503498bf24933f548f7c60000c0ff0f84e10100004d85ed0f8409020000498bf248c1ee09803c16020f85010200004c892c2485ed0f8540ffffff443bc90f8fe9000000e96600000066660f1f840000000000666666908be9ffc541896a1041807f40000f854f0000008b4c881041894a148bf148c1e6034d8bea4c33ee49f7c50000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c16020f854200000085c90f85cefeffff8bcd443bc97fa3e9c2feffff498d72148b3685f674a74d8b6f2848c1e6034d85ed0f84450000004d8b77384b89742ef8498d75f849897728eb83f083042400803c160074b3c60416004d8b6f484803f24d85ed0f841d0000004d8b77584b89742ef8498d75f849897748eb8ce800000000e947ffffffe800000000e978ffffff418bf12bf14863f68be94803f548ffce418be9483bee0f86c1010000443bc90f875dffffffe9b3010000498d72188b3685f60f848bfdffff498b572848c1e6034885d20f84d2000000498b4f3848897411f8488d72f849897728e964fdffff498d72148b3685f60f84a0fdffff498b4f2848c1e6034885c90f84a7000000498b6f384889740df8488d71f849897728e979fdffff498d72148b3685f60f8420feffff4d8b6f2848c1e6034d85ed0f84d00000004d8b77384b89742ef8498d75f849897728e9f9fdffff4c892c24e934fefffff083042400803c16000f8421fdffffe949000000f083042400803c16000f8450fdffffe95f0000004c892c24e903fefffff083042400803c16000f857b0000004c892c24e9ebfdffffe800000000e99efcffffe800000000e9defcffffc6041600498b4f484803f24885c90f8478000000498b6f584889740df8488d71f849897748e9a9fcffffc6041600498b6f484803f24885ed0f84580000004d8b6f584989742df8488d75f849897748e9c2fcffffe800000000e935fdffffc60416004d8b77484803f24d85f60f842e0000004c892c244d8b6f584b897435f8498d76f849897748e94bfdffffe800000000e93dfcffffe800000000e976fcffff4c892c24e800000000e929fdffff4c8b2c2441c78784040000e542ffff49c7879004000098070000e8000000000f1f84000000000041c78784040000e550ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000edf5feff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e90bfbfffff4488d0d26fcffff49898f68040000e9bdfafffff441c78784040000f571ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f565ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f559ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 68 10 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 70 12 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 74 14 r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 80 16 rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 84 18 rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 84 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 91 20 rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 98 22 r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 102 24 r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 102 [rax:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 26 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 110 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 120 28 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 123 30 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 126 32 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 129 34 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 132 36 BLACKHOLE [rcx|DWORD[_] * 8 + 13952]  <||@
  Comment 132 38 BLACKHOLE [rbx|DWORD[_] * 8 + 13952]  <||@
  Comment 132 40 BLACKHOLE [rdi|DWORD[_] * 8 + 13952]  <||@
  Comment 132 42 BLACKHOLE [rsi|DWORD[_] * 8 + 13952]  <||@
  Comment 132 44 CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD  <||@
  Comment 142 block B1 null  <||@
  Comment 142 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 48 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null  <||@
  Comment 153 block B8 null  <||@
  Comment 153 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 94 MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 157 96 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 161 98 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 167 100 rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 177 102 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD  <||@
  Comment 190 block B10 null  <||@
  Comment 190 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 110 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 199 block B12 null  <||@
  Comment 199 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 118 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 206 120 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null  <||@
  Comment 216 block B19 null  <||@
  Comment 216 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 168 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null  <||@
  Comment 227 block B26 null  <||@
  Comment 227 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 214 MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 231 216 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 238 218 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 244 220 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD  <||@
  Comment 257 block B28 null  <||@
  Comment 257 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 228 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD  <||@
  Comment 266 block B30 null  <||@
  Comment 266 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 266 236 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 273 238 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null  <||@
  Comment 283 block B37 null  <||@
  Comment 283 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 286 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD  <||@
  Comment 292 block B95 null  <||@
  Comment 292 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 666 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 294 668 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 297 670 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 301 672 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 304 674 rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD  <||@
  Comment 312 676 r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 315 678 r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 318 680 MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD  <||@
  Comment 326 682 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 329 684 MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD  <||@
  Comment 337 686 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 340 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 349 POLL_RETURN_FAR  <||@
  Comment 363 block B38 null  <||@
  Comment 363 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 290 r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 363 [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 371 292 rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 375 294 CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD  <||@
  Comment 380 block B39 null  <||@
  Comment 380 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 298 CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD  <||@
  Comment 389 block B40 null  <||@
  Comment 389 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 389 302 rcx|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 393 304 MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 397 306 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 408 block B47 null  <||@
  Comment 408 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 352 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 412 354 rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 416 356 MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD  <||@
  Comment 420 358 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 427 360 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 433 362 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD  <||@
  Comment 446 block B49 null  <||@
  Comment 446 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 446 372 TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 455 block B51 null  <||@
  Comment 455 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 455 382 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 462 384 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null  <||@
  Comment 472 block B52 null  <||@
  Comment 472 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 388 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 476 390 JUMP ~[] destination: B52 -> B58  <||@
  Comment 476 block B58 null  <||@
  Comment 476 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 440 TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD  <||@
  Comment 484 block B59 null  <||@
  Comment 484 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 484 444 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD  <||@
  Comment 498 block B69 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 498 502 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 504 rbp|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 516 506 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 520 508 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 531 block B76 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 531 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 554 rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 535 556 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 539 558 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 545 560 r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 551 562 TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD  <||@
  Comment 564 block B78 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 564 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 564 570 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD  <||@
  Comment 573 block B80 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 573 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 578 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 580 580 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null  <||@
  Comment 590 block B87 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 590 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 628 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD  <||@
  Comment 598 block B88 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 598 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 632 rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 600 634 JUMP ~[] destination: B88 -> B68  <||@
  Comment 600 block B68 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 600 498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 600 500 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD  <||@
  Comment 610 block B71 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 610 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 516 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 614 518 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 616 520 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 620 block B73 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 620 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 528 r13|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 624 530 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 628 532 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 637 block B75 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 637 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 542 r14|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 641 544 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 646 546 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 650 548 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 654 550 JUMP ~[] destination: B75 -> B76  <||@
  Comment 656 block B82 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 656 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 656 588 MEMBAR barriers: 4  <||@
  Comment 661 590 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null  <||@
  Comment 667 block B84 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 667 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 598 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 671 600 r13|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 675 602 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 678 604 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD  <||@
  Comment 687 block B86 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 687 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 616 r14|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 691 618 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 696 620 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 700 622 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 704 624 JUMP ~[] destination: B86 -> B87  <||@
  Comment 706 block B74 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 706 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 706 536 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 706 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 711 538 JUMP ~[] destination: B74 -> B76  <||@
  Comment 716 block B85 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 716 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 716 608 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 716 610 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 716 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 721 612 JUMP ~[] destination: B85 -> B87  <||@
  Comment 726 block B60 null  <||@
  Comment 726 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 448 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 731 450 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 734 452 rbp|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 736 454 rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 739 456 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 742 458 rbp|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 745 460 CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD  <||@
  Comment 754 block B61 null  <||@
  Comment 754 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 754 464 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 768 block B3 null  <||@
  Comment 768 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 768 56 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 772 58 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 774 60 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 782 block B5 null  <||@
  Comment 782 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 782 68 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 786 70 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 790 72 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 799 block B7 null  <||@
  Comment 799 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 82 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 803 84 MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 808 86 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 812 88 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 816 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 821 block B21 null  <||@
  Comment 821 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 176 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 825 178 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 827 180 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 835 block B23 null  <||@
  Comment 835 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 835 188 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 839 190 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 843 192 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 852 block B25 null  <||@
  Comment 852 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 202 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 856 204 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 861 206 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 865 208 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 869 210 JUMP ~[] destination: B25 -> B26  <||@
  Comment 874 block B42 null  <||@
  Comment 874 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 874 314 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 878 316 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 880 318 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 888 block B44 null  <||@
  Comment 888 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 326 r13|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 892 328 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 896 330 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 905 block B46 null  <||@
  Comment 905 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 905 340 r14|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 909 342 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 914 344 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 918 346 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 922 348 JUMP ~[] destination: B46 -> B47  <||@
  Comment 927 block B48 null  <||@
  Comment 927 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 366 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 931 368 JUMP ~[] destination: B48 -> B58  <||@
  Comment 936 block B14 null  <||@
  Comment 936 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 936 128 MEMBAR barriers: 4  <||@
  Comment 941 130 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null  <||@
  Comment 956 block B32 null  <||@
  Comment 956 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 246 MEMBAR barriers: 4  <||@
  Comment 961 248 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null  <||@
  Comment 976 block B50 null  <||@
  Comment 976 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 376 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 980 378 JUMP ~[] destination: B50 -> B58  <||@
  Comment 985 block B53 null  <||@
  Comment 985 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 394 MEMBAR barriers: 4  <||@
  Comment 990 396 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1000 block B54 null  <||@
  Comment 1000 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 400 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 402 JUMP ~[] destination: B54 -> B58  <||@
  Comment 1009 block B6 null  <||@
  Comment 1009 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 76 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1009 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1014 78 JUMP ~[] destination: B6 -> B8  <||@
  Comment 1019 block B24 null  <||@
  Comment 1019 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1019 196 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1019 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1024 198 JUMP ~[] destination: B24 -> B26  <||@
  Comment 1029 block B16 null  <||@
  Comment 1029 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1029 138 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1033 140 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1037 142 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1040 144 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 1049 block B18 null  <||@
  Comment 1049 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1049 156 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1053 158 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1058 160 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1062 162 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1066 164 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1071 block B34 null  <||@
  Comment 1071 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 256 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1075 258 rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1079 260 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1082 262 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 1091 block B36 null  <||@
  Comment 1091 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1091 274 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1095 276 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1100 278 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 1104 280 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1108 282 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1113 block B45 null  <||@
  Comment 1113 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1113 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1113 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1118 336 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1123 block B55 null  <||@
  Comment 1123 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1123 406 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1127 408 r14|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1131 410 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1134 412 TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1143 block B57 null  <||@
  Comment 1143 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 426 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 428 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1151 430 MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1156 432 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 1160 434 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1164 436 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1169 block B17 null  <||@
  Comment 1169 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1169 148 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1169 150 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1169 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1174 152 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1179 block B35 null  <||@
  Comment 1179 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 266 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1179 268 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1179 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1184 270 JUMP ~[] destination: B35 -> B37  <||@
  Comment 1189 block B56 null  <||@
  Comment 1189 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1189 416 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 418 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1193 420 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1193 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1198 422 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1203 block B65 null  <||@
  Comment 1203 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 478 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 484 MOV [r15|QWORD + 1156] y: -48411 size: DWORD  <||@
  Comment 1218 486 MOV [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1229 488 DEOPT info [bci:95]  <||@
  Comment 1229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1234 [rax:0, r8:0, r10:0, r13:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |r8|QWORD[.] 
     stack:   |r13|QWORD[.]  |              |              <||@
  Comment 1242 block B92 null  <||@
  Comment 1242 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1242 650 MOV [r15|QWORD + 1156] y: -44827 size: DWORD  <||@
  Comment 1253 652 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1264 654 DEOPT info [bci:53]  <||@
  Comment 1264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1269 [rcx:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1277 block B96 null  <||@
  Comment 1277 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1277 692 MOV [r15|QWORD + 1156] y: -68115 size: DWORD  <||@
  Comment 1288 694 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1299 696 DEOPT info [bci:0]  <||@
  Comment 1299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1304 [r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1317 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1342 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1370 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1375 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1405 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1410 [rax:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1440 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1445 [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1453 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1453 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1459 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1742[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1742[java.util.HashMap$HashIterator.nextNode()]"
  date 1714038082764
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02ab669220 448b560849bc0000003f027f00004d03d44d33e4493bc20f8543be51ff66669089842400c0feff4883ec189041817f20030000000f85e604000048896c24104c8bd60f318bf248c1e6204c8bde4c0bd8418b721c8b14f5180000008b04f524000000458b4214468b0cc51800000048bed88c5e2e060000008b4e7c8b5e708b7e748b7678413b520c0f856f04000041807f40000f85670200004589421849c1e003498bf24933f048ba002099be027f000048f7c60000c0ff0f841a0000004d85c00f8411000000498bf248c1ee09803c16020f85d002000041807f40000f855202000045894a14418bc948c1e103498bf24833f148f7c60000c0ff0f841a0000004885c90f8411000000498bf248c1ee09803c16020f85a10200004585c90f84470000000f31448bd249c1e2204c0bd0488b04dd803600004d2bd34c03d04c8914dd8036000048ffc0488904fd80360000498bc0488b6c24104883c418493ba7500400000f87c6030000c3448b0cc50c000000418b6a10443bcd7ea8443bcd0f86550300008bcdffc141894a1041807f40000f85d201000048c1e0038b6ca81041896a14448bed49c1e503498bf24933f548f7c60000c0ff0f84e10100004d85ed0f8409020000498bf248c1ee09803c16020f85010200004c892c2485ed0f8540ffffff443bc90f8fe9000000e96600000066660f1f840000000000666666908be9ffc541896a1041807f40000f854f0000008b4c881041894a148bf148c1e6034d8bea4c33ee49f7c50000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c16020f854200000085c90f85cefeffff8bcd443bc97fa3e9c2feffff498d72148b3685f674a74d8b6f2848c1e6034d85ed0f84450000004d8b77384b89742ef8498d75f849897728eb83f083042400803c160074b3c60416004d8b6f484803f24d85ed0f841d0000004d8b77584b89742ef8498d75f849897748eb8ce819e565ffe947ffffffe80f1066ffe978ffffff418bf12bf14863f68be94803f548ffce418be9483bee0f86c1010000443bc90f875dffffffe9b3010000498d72188b3685f60f848bfdffff498b572848c1e6034885d20f84d2000000498b4f3848897411f8488d72f849897728e964fdffff498d72148b3685f60f84a0fdffff498b4f2848c1e6034885c90f84a7000000498b6f384889740df8488d71f849897728e979fdffff498d72148b3685f60f8420feffff4d8b6f2848c1e6034d85ed0f84d00000004d8b77384b89742ef8498d75f849897728e9f9fdffff4c892c24e934fefffff083042400803c16000f8421fdffffe949000000f083042400803c16000f8450fdffffe95f0000004c892c24e903fefffff083042400803c16000f857b0000004c892c24e9ebfdffffe8eae365ffe99efcffffe8e0e365ffe9defcffffc6041600498b4f484803f24885c90f8478000000498b6f584889740df8488d71f849897748e9a9fcffffc6041600498b6f484803f24885ed0f84580000004d8b6f584989742df8488d75f849897748e9c2fcffffe882e365ffe935fdffffc60416004d8b77484803f24d85f60f842e0000004c892c244d8b6f584b897435f8498d76f849897748e94bfdffffe84a0e66ffe93dfcffffe8400e66ffe976fcffff4c892c24e8320e66ffe929fdffff4c8b2c2441c78784040000e542ffff49c7879004000098070000e8881a52ff0f1f84000000000041c78784040000e550ffff49c7879004000000000000e8651a52ff0f1f84000000000041c78784040000edf5feff49c7879004000014000000e8421a52ff0f1f84000000000048896c2410e8d61a50ffe90bfbfffff4488d0d26fcffff49898f68040000e99d2852fff441c78784040000f571ffff49c7879004000000000000e8fb1952ff0f1f84000000000041c78784040000f565ffff49c7879004000000000000e8d81952ff0f1f84000000000041c78784040000f559ffff49c7879004000000000000e8b51952ff0f1f840000000000e82edf65fff4e8481752fff4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@76036a75 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 68 10 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 70 12 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 74 14 r11|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 80 16 rsi|DWORD[_] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 84 18 rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 84 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 91 20 rax|DWORD[_] = MOV [rsi|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 98 22 r8|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 102 24 r9|DWORD[_] = MOV [r8|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 102 [rax:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 102 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 26 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 110 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 120 28 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 123 30 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 126 32 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 129 34 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 132 36 BLACKHOLE [rcx|DWORD[_] * 8 + 13952]  <||@
  Comment 132 38 BLACKHOLE [rbx|DWORD[_] * 8 + 13952]  <||@
  Comment 132 40 BLACKHOLE [rdi|DWORD[_] * 8 + 13952]  <||@
  Comment 132 42 BLACKHOLE [rsi|DWORD[_] * 8 + 13952]  <||@
  Comment 132 44 CMPBRANCH (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B96 size: DWORD  <||@
  Comment 142 block B1 null  <||@
  Comment 142 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 48 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B1 -> B8 falseDestination: B1 -> B3 y: 0 size: BYTE inlinedY: null  <||@
  Comment 153 block B8 null  <||@
  Comment 153 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 94 MOV (x: [r10|QWORD[.] + 24], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 157 96 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 161 98 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 167 100 rdx|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 177 102 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B19 falseDestination: B8 -> B10 y: -4194304 size: QWORD  <||@
  Comment 190 block B10 null  <||@
  Comment 190 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 110 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B19 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 199 block B12 null  <||@
  Comment 199 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 118 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 206 120 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B12 -> B19 falseDestination: B12 -> B14 y: 2 size: BYTE inlinedY: null  <||@
  Comment 216 block B19 null  <||@
  Comment 216 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 168 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B26 falseDestination: B19 -> B21 y: 0 size: BYTE inlinedY: null  <||@
  Comment 227 block B26 null  <||@
  Comment 227 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 227 214 MOV (x: [r10|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 231 216 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 238 218 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 244 220 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 y: -4194304 size: QWORD  <||@
  Comment 257 block B28 null  <||@
  Comment 257 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 228 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 size: QWORD  <||@
  Comment 266 block B30 null  <||@
  Comment 266 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 266 236 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 273 238 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B37 falseDestination: B30 -> B32 y: 2 size: BYTE inlinedY: null  <||@
  Comment 283 block B37 null  <||@
  Comment 283 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 286 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8737766266527316 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B95 size: DWORD  <||@
  Comment 292 block B95 null  <||@
  Comment 292 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 666 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 294 668 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 297 670 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 301 672 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 304 674 rax|QWORD = MOV [rbx|DWORD[_] * 8 + 13952] size: QWORD  <||@
  Comment 312 676 r10|QWORD = SUB (x: r10|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 315 678 r10|QWORD = ADD (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 318 680 MOV (x: [rbx|DWORD[_] * 8 + 13952], y: r10|QWORD) size: QWORD  <||@
  Comment 326 682 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 329 684 MOV (x: [rdi|DWORD[_] * 8 + 13952], y: rax|QWORD) size: QWORD  <||@
  Comment 337 686 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 340 688 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 349 POLL_RETURN_FAR  <||@
  Comment 363 block B38 null  <||@
  Comment 363 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 290 r9|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 363 [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 371 292 rbp|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 375 294 CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B95 size: DWORD  <||@
  Comment 380 block B39 null  <||@
  Comment 380 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 298 CMPBRANCH (x: r9|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B92 size: DWORD  <||@
  Comment 389 block B40 null  <||@
  Comment 389 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 389 302 rcx|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 393 304 MOV (x: [r10|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 397 306 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B47 falseDestination: B40 -> B42 y: 0 size: BYTE inlinedY: null  <||@
  Comment 408 block B47 null  <||@
  Comment 408 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 408 352 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 412 354 rbp|DWORD[_] = MOV [rax|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 416 356 MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[_]) size: DWORD  <||@
  Comment 420 358 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 427 360 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 433 362 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: -4194304 size: QWORD  <||@
  Comment 446 block B49 null  <||@
  Comment 446 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 446 372 TESTBRANCH (x: r13|QWORD[.], y: r13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 size: QWORD  <||@
  Comment 455 block B51 null  <||@
  Comment 455 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 455 382 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 462 384 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: BYTE inlinedY: null  <||@
  Comment 472 block B52 null  <||@
  Comment 472 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 388 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 476 390 JUMP ~[] destination: B52 -> B58  <||@
  Comment 476 block B58 null  <||@
  Comment 476 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 476 440 TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B95 size: DWORD  <||@
  Comment 484 block B59 null  <||@
  Comment 484 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 484 444 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B68 size: DWORD  <||@
  Comment 498 block B69 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 498 502 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 512 504 rbp|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 516 506 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 520 508 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 531 block B76 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 531 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 531 554 rcx|DWORD[_] = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 535 556 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 539 558 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 545 560 r13|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 551 562 TESTCONSTBRANCH r13|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B76 -> B87 falseDestination: B76 -> B78 y: -4194304 size: QWORD  <||@
  Comment 564 block B78 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 564 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 564 570 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B87 falseDestination: B78 -> B80 size: QWORD  <||@
  Comment 573 block B80 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 573 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 573 578 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 580 580 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B80 -> B87 falseDestination: B80 -> B82 y: 2 size: BYTE inlinedY: null  <||@
  Comment 590 block B87 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 590 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 628 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.8776268255188316 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B95 size: DWORD  <||@
  Comment 598 block B88 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 598 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 632 rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 600 634 JUMP ~[] destination: B88 -> B68  <||@
  Comment 600 block B68 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 600 498 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 600 500 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9816102129714395 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B95 size: DWORD  <||@
  Comment 610 block B71 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 610 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 610 516 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 614 518 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 616 520 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 620 block B73 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 620 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 528 r13|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 624 530 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 628 532 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 637 block B75 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 637 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 542 r14|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 641 544 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 646 546 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 650 548 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 654 550 JUMP ~[] destination: B75 -> B76  <||@
  Comment 656 block B82 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 656 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 656 588 MEMBAR barriers: 4  <||@
  Comment 661 590 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B82 -> B87 falseDestination: B82 -> B84 y: 0 size: BYTE inlinedY: null  <||@
  Comment 667 block B84 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 667 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 667 598 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 671 600 r13|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 675 602 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 678 604 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 size: QWORD  <||@
  Comment 687 block B86 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 687 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 616 r14|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 691 618 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 696 620 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 700 622 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 704 624 JUMP ~[] destination: B86 -> B87  <||@
  Comment 706 block B74 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 706 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 706 536 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 706 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 711 538 JUMP ~[] destination: B74 -> B76  <||@
  Comment 716 block B85 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 716 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 716 608 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 716 610 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 716 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 721 612 JUMP ~[] destination: B85 -> B87  <||@
  Comment 726 block B60 null  <||@
  Comment 726 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 448 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 731 450 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 734 452 rbp|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 736 454 rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 739 456 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 742 458 rbp|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 745 460 CMPBRANCH (x: rbp|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B65 size: QWORD  <||@
  Comment 754 block B61 null  <||@
  Comment 754 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 754 464 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B68 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 768 block B3 null  <||@
  Comment 768 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 768 56 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 772 58 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 774 60 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B3 -> B8 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 782 block B5 null  <||@
  Comment 782 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 782 68 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 786 70 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 790 72 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 799 block B7 null  <||@
  Comment 799 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 82 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 803 84 MOV (x: [rcx|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 808 86 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 812 88 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 816 90 JUMP ~[] destination: B7 -> B8  <||@
  Comment 821 block B21 null  <||@
  Comment 821 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 176 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 825 178 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 827 180 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 835 block B23 null  <||@
  Comment 835 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 835 188 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 839 190 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 843 192 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 852 block B25 null  <||@
  Comment 852 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 852 202 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 856 204 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 861 206 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 865 208 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 869 210 JUMP ~[] destination: B25 -> B26  <||@
  Comment 874 block B42 null  <||@
  Comment 874 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 874 314 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 878 316 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 880 318 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 888 block B44 null  <||@
  Comment 888 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 326 r13|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 892 328 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2578dc07 encoding: base: 0 shift: 3  <||@
  Comment 896 330 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 905 block B46 null  <||@
  Comment 905 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 905 340 r14|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 909 342 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 914 344 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 918 346 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 922 348 JUMP ~[] destination: B46 -> B47  <||@
  Comment 927 block B48 null  <||@
  Comment 927 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 927 366 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 931 368 JUMP ~[] destination: B48 -> B58  <||@
  Comment 936 block B14 null  <||@
  Comment 936 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 936 128 MEMBAR barriers: 4  <||@
  Comment 941 130 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B14 -> B19 falseDestination: B14 -> B16 y: 0 size: BYTE inlinedY: null  <||@
  Comment 956 block B32 null  <||@
  Comment 956 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 246 MEMBAR barriers: 4  <||@
  Comment 961 248 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 0 size: BYTE inlinedY: null  <||@
  Comment 976 block B50 null  <||@
  Comment 976 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 376 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 980 378 JUMP ~[] destination: B50 -> B58  <||@
  Comment 985 block B53 null  <||@
  Comment 985 392 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 394 MEMBAR barriers: 4  <||@
  Comment 990 396 CMPCONSTBRANCH [rsi|QWORD[*] + rdx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1000 block B54 null  <||@
  Comment 1000 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 400 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 402 JUMP ~[] destination: B54 -> B58  <||@
  Comment 1009 block B6 null  <||@
  Comment 1009 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1009 76 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1009 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1014 78 JUMP ~[] destination: B6 -> B8  <||@
  Comment 1019 block B24 null  <||@
  Comment 1019 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1019 196 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1019 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1024 198 JUMP ~[] destination: B24 -> B26  <||@
  Comment 1029 block B16 null  <||@
  Comment 1029 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1029 138 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1033 140 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1037 142 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1040 144 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 1049 block B18 null  <||@
  Comment 1049 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1049 156 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1053 158 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1058 160 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 1062 162 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1066 164 JUMP ~[] destination: B18 -> B19  <||@
  Comment 1071 block B34 null  <||@
  Comment 1071 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 256 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1075 258 rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1079 260 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1082 262 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 1091 block B36 null  <||@
  Comment 1091 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1091 274 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1095 276 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1100 278 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 1104 280 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1108 282 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1113 block B45 null  <||@
  Comment 1113 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1113 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1113 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1118 336 JUMP ~[] destination: B45 -> B47  <||@
  Comment 1123 block B55 null  <||@
  Comment 1123 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1123 406 MOVB [rsi|QWORD[*] + rdx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1127 408 r14|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1131 410 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdx|QWORD) size: QWORD  <||@
  Comment 1134 412 TESTBRANCH (x: r14|QWORD, y: r14|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1143 block B57 null  <||@
  Comment 1143 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 426 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 428 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1151 430 MOV (x: [r13|QWORD + r14|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1156 432 rsi|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 1160 434 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1164 436 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1169 block B17 null  <||@
  Comment 1169 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1169 148 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1169 150 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1169 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1174 152 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1179 block B35 null  <||@
  Comment 1179 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 266 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1179 268 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1179 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1184 270 JUMP ~[] destination: B35 -> B37  <||@
  Comment 1189 block B56 null  <||@
  Comment 1189 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1189 416 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1193 418 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1193 420 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1193 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1198 422 JUMP ~[] destination: B56 -> B58  <||@
  Comment 1203 block B65 null  <||@
  Comment 1203 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 478 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 484 MOV [r15|QWORD + 1156] y: -48411 size: DWORD  <||@
  Comment 1218 486 MOV [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1229 488 DEOPT info [bci:95]  <||@
  Comment 1229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1234 [rax:0, r8:0, r10:0, r13:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |r8|QWORD[.] 
     stack:   |r13|QWORD[.]  |              |              <||@
  Comment 1242 block B92 null  <||@
  Comment 1242 648 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1242 650 MOV [r15|QWORD + 1156] y: -44827 size: DWORD  <||@
  Comment 1253 652 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1264 654 DEOPT info [bci:53]  <||@
  Comment 1264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1269 [rcx:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1277 block B96 null  <||@
  Comment 1277 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1277 692 MOV [r15|QWORD + 1156] y: -68115 size: DWORD  <||@
  Comment 1288 694 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1299 696 DEOPT info [bci:0]  <||@
  Comment 1299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1304 [r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1317 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1342 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1370 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1375 [rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1405 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1410 [rax:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r10|QWORD[.]  |-  |-   <||@
  Comment 1440 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1445 [rax:0, rcx:0, rbx:0, rdi:0, r8:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r8|QWORD[.] 
     stack:   |rcx|QWORD[.]  |   |              <||@
  Comment 1453 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1453 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1459 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
