begin_compilation
  name " HotSpotCompilation-4872[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-4872[java.util.regex.Matcher.search(int)]"
  date 1714038139458
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a793  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v860 v861 v862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: a794 
=== Usages ===
v858 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - #next: a794  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a794 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: a795 
=== Usages ===
v857 
=== Predecessor ===
a793 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v863 v886 v864 ?9 v865 v332 v866 ?507 ?193 ?186 ?201 ?27 v888 v867 ?176 v877 ?200 v321 v871 ?508 v873 ?61 v874 v876 ?156 ?125 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a795 a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: a796 
=== Usages ===
a247 v868 v869 
=== Predecessor ===
a794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: a796  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a796 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: a797 
=== Usages ===
v855 
=== Predecessor ===
a795 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - #next: a797  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a797 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: i798 
=== Usages ===
v856 
=== Predecessor ===
a796 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i798 v243 v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
=== Succesors ===
next: a799 
=== Usages ===
v15 i817 
=== Predecessor ===
a797 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - #next: a799  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: a800 
=== Usages ===
v875 
=== Predecessor ===
i798 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: a800  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a800 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
=== Succesors ===
next: i801 
=== Usages ===
v872 
=== Predecessor ===
a799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - #next: i801  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i801 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v877 
lastLocationAccess: - 
=== Succesors ===
next: a802 
=== Usages ===
i114 
=== Predecessor ===
a800 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v877 lastLocationAccess: - #next: a802  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a802 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
=== Succesors ===
next: j789 
=== Usages ===
a299 
=== Predecessor ===
i801 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - #next: j789  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
v103 j789 v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
j783 j787 
=== Predecessor ===
a802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j789 
y: i782 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j789 y: i782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
value: j783 
stateAfter: - 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
j789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - value: j783 stateAfter: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a794 
=== Succesors ===
=== Usages ===
v103 v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a794  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j789 
y: i786 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j789 y: i786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
value: j787 
stateAfter: - 
=== Succesors ===
next: i803 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - value: j787 stateAfter: - #next: i803  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v115 ?9 v10 v239 ?186 i817 ?507 ?27 i191 ?176 v321 ?61 i202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i803 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-63755|0xffffffffffff06f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
i552 v441 v255 j432 i449 i727 v531 v551 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v868 lastLocationAccess: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a796 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a796  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a797 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v855 v856 v857 v858 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
i803 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v855 v856 v857 v858 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v233 v307 v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i368 stateAfter: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - value: i368 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 i159 v10 v15 v187 v87 v285 v68 i159 v135 ?186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xb8036baa]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v239 v335 v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i2 stateAfter: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i4 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i798 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i817 
stateAfter: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i817 stateAfter: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i4 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i803 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i177 i141 i191 i159 i535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 i552 v441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 v367 v263 i449 v522 v542 v565 v587 v594 v612 v619 v626 v632 v656 v663 v670 v676 v684 v690 v696 v702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762770410879347
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
v263 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i803 
y: i42 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i803 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j439 
y: j432 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j439 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v776 #falseSuccessor: v779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i259 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i803 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v777 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v774 v775 
=== Succesors ===
next: v263 
=== Usages ===
v446 v545 v525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v774 v775 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v165 
address: v869 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v869 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i92 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i803 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v551 
trueValue: i803 
falseValue: i259 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v551 trueValue: i803 falseValue: i259  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a795 
=== Succesors ===
=== Usages ===
v905 v904 v903 v870 v889 v890 v891 v892 v893 v894 v895 v896 v897 v898 v899 v900 v901 v902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a795  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 v870 i517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i177 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i552 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i177 y: i552  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
v446 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v39 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v39  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i177 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v446 
address: v870 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v446 address: v870 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i177 
y: i45 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i177 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i803 
y: i726 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i803 y: i726  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v510 
values: i177 i723 
=== Succesors ===
=== Usages ===
v511 j827 v889 i537 i723 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v510 values: i177 i723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v526 
=== Succesors ===
next: v514 
=== Usages ===
v512 v516 i517 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v526 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i727 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i727  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19984729813292823
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
v525 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v513 
=== Succesors ===
=== Usages ===
v702 v522 v676 v565 v696 v587 v656 v594 v690 v612 v670 v619 v684 v626 v663 v632 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v513  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i517 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v889 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v889 lastLocationAccess: - value: i42 stateAfter: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v891 v892 v893 v894 v895 v896 v897 v898 v899 v900 v901 v902 v903 v904 v905 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v891 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v891 lastLocationAccess: - value: i42 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v892 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v892 lastLocationAccess: - value: i42 stateAfter: - #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v893 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v893 lastLocationAccess: - value: i42 stateAfter: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v894 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v894 lastLocationAccess: - value: i42 stateAfter: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v895 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v895 lastLocationAccess: - value: i42 stateAfter: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v896 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v896 lastLocationAccess: - value: i42 stateAfter: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v897 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v897 lastLocationAccess: - value: i42 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v898 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v898 lastLocationAccess: - value: i42 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v899 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v899 lastLocationAccess: - value: i42 stateAfter: - #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v900 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v900 lastLocationAccess: - value: i42 stateAfter: - #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v901 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v901 lastLocationAccess: - value: i42 stateAfter: - #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v902 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v902 lastLocationAccess: - value: i42 stateAfter: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v903 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v903 lastLocationAccess: - value: i42 stateAfter: - #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v904 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v904 lastLocationAccess: - value: i42 stateAfter: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v905 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v905 lastLocationAccess: - value: i42 stateAfter: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i517 
y: i708 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i517 y: i708  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v510 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v510 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v510 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v530 
values: i517 i535 
=== Succesors ===
=== Usages ===
v531 i535 v890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v530 values: i517 i535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v546 
=== Succesors ===
next: v534 
=== Usages ===
v532 v536 i537 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v546 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i537 
y: i803 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i537 y: i803  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
v545 
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v533 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v533  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i537 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v545 
address: v890 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v545 address: v890 lastLocationAccess: - value: i42 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i537 
y: i45 
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i537 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v530 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v530 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v530 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v174 
=== Succesors ===
next: a804 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v174 #next: a804  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v734 a804 v805 i806 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a799 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-74507|0xfffffffffffedcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v875 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
a295 v878 v879 v906 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v875 lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76811|0xfffffffffffed3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v906 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v772 
=== Predecessor ===
a804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v906 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v805 
y: v771 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v805 y: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v772 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v772 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: i806 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i806  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a800 
=== Succesors ===
=== Usages ===
i806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-71435|0xfffffffffffee8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v872 
lastLocationAccess: - 
=== Succesors ===
next: v504 
=== Usages ===
v87 
=== Predecessor ===
v467 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v872 lastLocationAccess: - #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i806 
y: i4 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i806 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
i806 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v502 #falseSuccessor: v503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: i807 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - value: i4 stateAfter: - #next: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Start.minLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 6]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
i114 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 9]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i801 
y: i807 
=== Succesors ===
=== Usages ===
v115 ?125 v126 ?508 ?507 v429 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i801 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i2 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i814 i815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 3.1774881320556503E-6
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i807 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 13]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i373 
stateAfter: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i373 stateAfter: - #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3785) [bci: 20]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a808 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a808  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
a808 a810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a808 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
=== Succesors ===
next: v809 
=== Usages ===
a310 v907 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - #next: v809  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 108
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a808 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-79883|0xfffffffffffec7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v907 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v765 
=== Predecessor ===
a808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v907 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v809 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v765 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
lastLocationAccess: - 
=== Succesors ===
next: j320 
=== Usages ===
v881 v321 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v880 lastLocationAccess: - #next: j320  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v317 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v317 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j320 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
=== Succesors ===
next: i185 
=== Usages ===
v321 
=== Predecessor ===
v317 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - #next: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a808 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a808  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a802 
=== Succesors ===
=== Usages ===
?508 ?125 v332 v321 ?186 ?507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a802  <|@  <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j320 
metaspaceMethod: v317 
arguments: a310 a1 i2 a299 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j320 metaspaceMethod: v317 arguments: a310 a1 i2 a299  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?186 ?507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a295 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
?125 ?507 ?508 ?186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
values: a295 a1 i2 a299 i114 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a295 a1 i2 a299 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v321 
stateDuring: ?507 
=== Succesors ===
next: v190 
=== Usages ===
v187 
=== Predecessor ===
j320 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v321 stateDuring: ?507 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i4 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i185 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 0.05578417512358964
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
i185 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v189 #falseSuccessor: v188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 ?186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i428 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v481 #falseSuccessor: v479  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
tid ?186 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
values: i4 a295 a1 i2 a299 i428 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193 values: i4 a295 a1 i2 a299 i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 430
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
reason: LoopLimitCheck
speculation: {0x0000000000003214[index: 400, len: 20, hash: 0x1bd96851]: LoopOverflowDeopt@7[HotSpotMethod<Matcher.search(int)>, 31]}
stamp: void
=== Inputs ===
stateBefore: ?186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
v123 
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i2 
y: i45 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i191 i141 
=== Succesors ===
=== Usages ===
?125 v126 v332 i202 ?508 i141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v123 values: i191 i141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 24
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: v479 
interIterationAliasingGuard: - 
ends: v122 
=== Succesors ===
next: v130 
=== Usages ===
i210 v128 v136 v142 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: v479 interIterationAliasingGuard: - ends: v122 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i210 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i210  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 37]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a810 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
=== Succesors ===
next: v811 
=== Usages ===
a323 v908 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - #next: v811  <|@  <|@
tid ?156 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?508 ?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3786
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a295 a1 i210 a299 i114 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a295 a1 i210 a299 i114  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a810 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-83211|0xfffffffffffebaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?125 
guard: - 
address: v908 
lastLocationAccess: - 
=== Succesors ===
next: v329 
=== Usages ===
v768 
=== Predecessor ===
a810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?125 guard: - address: v908 lastLocationAccess: - #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v811 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v768 
index: - 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
lastLocationAccess: - 
=== Succesors ===
next: j331 
=== Usages ===
v883 v332 
=== Predecessor ===
v811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 lastLocationAccess: - #next: j331  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v329 
index: - 
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j331 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v883 
lastLocationAccess: - 
=== Succesors ===
next: i133 
=== Usages ===
v332 
=== Predecessor ===
v329 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v883 lastLocationAccess: - #next: i133  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a810 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a810  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j331 
metaspaceMethod: v329 
arguments: a323 a1 i210 a299 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j331 metaspaceMethod: v329 arguments: a323 a1 i210 a299  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a295 a1 i210 a299 i114 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a295 a1 i210 a299 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?508 
=== Succesors ===
next: v140 
=== Usages ===
v135 
=== Predecessor ===
j331 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?508 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i4 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i133 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 0.05578417512358964
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
i133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v139 #falseSuccessor: v136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i210 
y: i45 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i210 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v123 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v123 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v123 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 83]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v123 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v123 #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 85]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i373 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i373 stateAfter: - #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v195 
values: i210 i2 
=== Succesors ===
=== Usages ===
?201 v335 v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v195 values: i210 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: a812 
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 56]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: i813 
=== Usages ===
v887 v884 v885 
=== Predecessor ===
v195 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: i813  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?200 
values: - a1 i202 
=== Succesors ===
=== Usages ===
v909 i813 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - a1 i202  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-86795|0xfffffffffffeacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?201 
guard: - 
address: v884 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
v426 
=== Predecessor ===
a812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?201 guard: - address: v884 lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i259 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i813 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v493 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 374
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?201 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
v347 v359 
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 52]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i202 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i202 stateAfter: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v491 
address: v885 
lastLocationAccess: - 
value: i202 
stateAfter: - 
=== Succesors ===
next: i814 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v491 address: v885 lastLocationAccess: - value: i202 stateAfter: - #next: i814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 71]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: v359 
=== Usages ===
v359 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v491 
address: v887 
lastLocationAccess: - 
value: i814 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
i814 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v491 address: v887 lastLocationAccess: - value: i814 stateAfter: - #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v157 
values: i4 i45 i4 
=== Succesors ===
=== Usages ===
v85 v68 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v157 values: i4 i45 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v160 v161 
=== Succesors ===
next: v71 
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v160 v161 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i159 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 2.4456478584700125E-4
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i815 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
v362 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i815 
stateAfter: - 
=== Succesors ===
next: i816 
=== Usages ===
=== Predecessor ===
i815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i815 stateAfter: - #next: i816  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i816 v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
i82 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i816 
y: i45 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i816 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i816 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i159 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: -128275
stableDimension: 0
stamp: i32 [-128275]
stampKind: i32
value: int[-128275|0xfffffffffffe0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i740 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: -77107
stableDimension: 0
stamp: i32 [-77107]
stampKind: i32
value: int[-77107|0xfffffffffffed2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: i32 [-128275 - -77107] bits:1...10xx0xx01011x01101
valueDescription: i32
=== Inputs ===
merge: v728 
values: i740 i743 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v728 values: i740 i743  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v728 
values: j741 j744 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v728 values: j741 j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v739 v742 
=== Succesors ===
next: v734 
=== Usages ===
i732 j733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v739 v742 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
stateBefore: ?176 
actionAndReason: i732 
speculation: j733 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?176 actionAndReason: i732 speculation: j733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000003498[index: 420, len: 24, hash: 0x5b66eaa0]: GuardMovement@2[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a793  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v859 v860 v861 v862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v2|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: a794 
=== Usages ===
v858 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - #next: a794  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v2|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a794 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: a795 
=== Usages ===
v857 
=== Predecessor ===
a793 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v863 v886 v864 ?9 v865 v332 v866 ?507 ?193 ?186 ?201 ?27 v888 v867 ?176 v877 ?200 v321 v871 ?508 v873 ?61 v874 v876 ?156 ?125 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a795 a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: a796 
=== Usages ===
a247 v868 v869 
=== Predecessor ===
a794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: a796  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v2|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a796 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: a797 
=== Usages ===
v855 
=== Predecessor ===
a795 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - #next: a797  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v2|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a797 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: i798 
=== Usages ===
v856 
=== Predecessor ===
a796 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i798 v243 v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
=== Succesors ===
next: a799 
=== Usages ===
v15 i817 
=== Predecessor ===
a797 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - #next: a799  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: a800 
=== Usages ===
v875 
=== Predecessor ===
i798 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: a800  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a800 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
=== Succesors ===
next: i801 
=== Usages ===
v872 
=== Predecessor ===
a799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - #next: i801  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i801 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 2]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v877 
lastLocationAccess: - 
=== Succesors ===
next: a802 
=== Usages ===
i114 
=== Predecessor ===
a800 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v877 lastLocationAccess: - #next: a802  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a802 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
=== Succesors ===
next: j789 
=== Usages ===
a299 
=== Predecessor ===
i801 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - #next: j789  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v3|DWORD[_] * 8 + 38992] <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a793 
=== Succesors ===
=== Usages ===
v103 j789 v791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
j783 j787 
=== Predecessor ===
a802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid i782 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 63
stableDimension: 0
stamp: i32
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
j783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j789 
y: i782 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j789 y: i782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
value: j783 
stateAfter: - 
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
j789 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - value: j783 stateAfter: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v4|DWORD[_] * 8 + 38992] <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a794 
=== Succesors ===
=== Usages ===
v103 v792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a794  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j787 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j789 
y: i786 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j789 y: i786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
value: j787 
stateAfter: - 
=== Succesors ===
next: i803 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - value: j787 stateAfter: - #next: i803  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v115 ?9 v10 v239 ?186 i817 ?507 ?27 i191 ?176 v321 ?61 i202 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i803 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-63755|0xffffffffffff06f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
i552 v441 v255 j432 i449 i727 v531 v551 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v868 lastLocationAccess: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v6|DWORD[_] * 8 + 38992] <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a796 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a796  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v7|DWORD[_] * 8 + 38992] <|@
d <@d|@=== Debug Properties ===
displacement: 38992
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a797 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v855 v856 v857 v858 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
i803 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v855 v856 v857 v858 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v233 v307 v360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i368 stateAfter: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v0|QWORD[.] + 49] <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
value: i368 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - value: i368 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 i159 v10 v15 v187 v87 v285 v68 i159 v135 ?186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xb8036baa]: UnreachedCode@5[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v239 v335 v367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i2 stateAfter: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i4 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i798 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i817 
stateAfter: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i817 stateAfter: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i4 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i803 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i177 i141 i191 i159 i535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 i552 v441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 v367 v263 i449 v522 v542 v565 v587 v594 v612 v619 v626 v632 v656 v663 v670 v676 v684 v690 v696 v702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762770410879347
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
v263 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i803 
y: i42 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i803 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j439 
y: j432 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j439 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v776 #falseSuccessor: v779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i259 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i803 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v777 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v774 v775 
=== Succesors ===
next: v263 
=== Usages ===
v446 v545 v525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v774 v775 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v165 
address: v869 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v165 address: v869 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i803 
y: i92 
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i803 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v551 
trueValue: i803 
falseValue: i259 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v551 trueValue: i803 falseValue: i259  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a795 
=== Succesors ===
=== Usages ===
v905 v904 v903 v870 v889 v890 v891 v892 v893 v894 v895 v896 v897 v898 v899 v900 v901 v902 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a795  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i177 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 v870 i517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i177 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i552 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i177 y: i552  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
v446 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v39 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v39  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v22|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i177 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v446 
address: v870 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v446 address: v870 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i177 
y: i45 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i177 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i803 
y: i726 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i803 y: i726  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v510 
values: i177 i723 
=== Succesors ===
=== Usages ===
v511 j827 v889 i537 i723 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v510 values: i177 i723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v526 
=== Succesors ===
next: v514 
=== Usages ===
v512 v516 i517 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v526 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i727 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i727  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19984729813292823
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
v525 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v513 
=== Succesors ===
=== Usages ===
v702 v522 v676 v565 v696 v587 v656 v594 v690 v612 v670 v619 v684 v626 v663 v632 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v513  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result [v22|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i517 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v889 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v889 lastLocationAccess: - value: i42 stateAfter: - #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v891 v892 v893 v894 v895 v896 v897 v898 v899 v900 v901 v902 v903 v904 v905 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v891 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v891 lastLocationAccess: - value: i42 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v892 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v892 lastLocationAccess: - value: i42 stateAfter: - #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v893 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v893 lastLocationAccess: - value: i42 stateAfter: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v894 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v894 lastLocationAccess: - value: i42 stateAfter: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v895 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v895 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v895 lastLocationAccess: - value: i42 stateAfter: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v896 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v896 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v896 lastLocationAccess: - value: i42 stateAfter: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v897 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v897 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v897 lastLocationAccess: - value: i42 stateAfter: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v898 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v898 lastLocationAccess: - value: i42 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v899 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v899 lastLocationAccess: - value: i42 stateAfter: - #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v900 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v900 lastLocationAccess: - value: i42 stateAfter: - #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v901 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v901 lastLocationAccess: - value: i42 stateAfter: - #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v902 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v902 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v902 lastLocationAccess: - value: i42 stateAfter: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v903 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v903 lastLocationAccess: - value: i42 stateAfter: - #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v904 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v904 lastLocationAccess: - value: i42 stateAfter: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result [v22|QWORD[.] + v27|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: j827 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v905 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v905 lastLocationAccess: - value: i42 stateAfter: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i517 
y: i708 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i517 y: i708  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v510 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v510 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v510 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i537 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v530 
values: i517 i535 
=== Succesors ===
=== Usages ===
v531 i535 v890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v530 values: i517 i535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.996183181867274
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v546 
=== Succesors ===
next: v534 
=== Usages ===
v532 v536 i537 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v546 #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i537 
y: i803 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i537 y: i803  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v533 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
v545 
=== Predecessor ===
v534 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v773 v533 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v773 v533  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
result [v22|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a247 
index: i537 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a247 index: i537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v545 
address: v890 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v545 address: v890 lastLocationAccess: - value: i42 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i537 
y: i45 
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i537 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v530 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v530 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v530 #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v174 
=== Succesors ===
next: a804 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v174 #next: a804  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v734 a804 v805 i806 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v9|DWORD[_] * 8 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a799 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
result v31|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-74507|0xfffffffffffedcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v875 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
a295 v878 v879 v906 
=== Predecessor ===
v172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v875 lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result [v31|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-76811|0xfffffffffffed3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v906 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v772 
=== Predecessor ===
a804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v906 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v805 
y: v771 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v805 y: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v772 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v772 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: i806 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i806  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v10|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a800 
=== Succesors ===
=== Usages ===
i806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-71435|0xfffffffffffee8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?176 
guard: - 
address: v872 
lastLocationAccess: - 
=== Succesors ===
next: v504 
=== Usages ===
v87 
=== Predecessor ===
v467 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?176 guard: - address: v872 lastLocationAccess: - #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i806 
y: i4 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i806 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
i806 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v502 #falseSuccessor: v503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: i807 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - value: i4 stateAfter: - #next: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v31|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Start.minLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 6]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
i114 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v878 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 9]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i801 
y: i807 
=== Succesors ===
=== Usages ===
v115 ?125 v126 ?508 ?507 v429 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i801 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i2 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i814 i815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3781) [bci: 10]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 3.1774881320556503E-6
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i807 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 13]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3782) [bci: 15]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i373 
stateAfter: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i373 stateAfter: - #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3785) [bci: 20]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a808 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a808  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result [v31|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
a808 a810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a808 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
=== Succesors ===
next: v809 
=== Usages ===
a310 v907 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - #next: v809  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 108
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result [v33|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a808 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-79883|0xfffffffffffec7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?61 
guard: - 
address: v907 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v765 
=== Predecessor ===
a808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?61 guard: - address: v907 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v809 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result [v35|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v765 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v765 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
lastLocationAccess: - 
=== Succesors ===
next: j320 
=== Usages ===
v881 v321 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v880 lastLocationAccess: - #next: j320  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result [v37|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v317 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v317 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j320 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
=== Succesors ===
next: i185 
=== Usages ===
v321 
=== Predecessor ===
v317 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - #next: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a808 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a808  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a802 
=== Succesors ===
=== Usages ===
?508 ?125 v332 v321 ?186 ?507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a802  <|@  <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j320 
metaspaceMethod: v317 
arguments: a310 a1 i2 a299 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j320 metaspaceMethod: v317 arguments: a310 a1 i2 a299  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?186 ?507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a295 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
?125 ?507 ?508 ?186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
values: a295 a1 i2 a299 i114 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a295 a1 i2 a299 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i185 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v321 
stateDuring: ?507 
=== Succesors ===
next: v190 
=== Usages ===
v187 
=== Predecessor ===
j320 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v321 stateDuring: ?507 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i4 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i185 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 0.05578417512358964
stamp: void
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
i185 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v189 #falseSuccessor: v188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 ?186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i428 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i114 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v481 #falseSuccessor: v479  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
tid ?186 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?193 
values: i4 a295 a1 i2 a299 i428 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?193 values: i4 a295 a1 i2 a299 i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 430
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
reason: LoopLimitCheck
speculation: {0x0000000000003214[index: 400, len: 20, hash: 0x1bd96851]: LoopOverflowDeopt@7[HotSpotMethod<Matcher.search(int)>, 31]}
stamp: void
=== Inputs ===
stateBefore: ?186 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
v123 
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i2 
y: i45 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v479 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i210 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i191 i141 
=== Succesors ===
=== Usages ===
?125 v126 v332 i202 ?508 i141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v123 values: i191 i141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 24
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: v479 
interIterationAliasingGuard: - 
ends: v122 
=== Succesors ===
next: v130 
=== Usages ===
i210 v128 v136 v142 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: v479 interIterationAliasingGuard: - ends: v122 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i210 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i210  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 34]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 37]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: a810 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a810 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
=== Succesors ===
next: v811 
=== Usages ===
a323 v908 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - #next: v811  <|@  <|@
tid ?156 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?508 ?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3786
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a295 a1 i210 a299 i114 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a295 a1 i210 a299 i114  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result [v45|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a810 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v811 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-83211|0xfffffffffffebaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?125 
guard: - 
address: v908 
lastLocationAccess: - 
=== Succesors ===
next: v329 
=== Usages ===
v768 
=== Predecessor ===
a810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?125 guard: - address: v908 lastLocationAccess: - #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v811 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result [v47|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v768 
index: - 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v768 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
lastLocationAccess: - 
=== Succesors ===
next: j331 
=== Usages ===
v883 v332 
=== Predecessor ===
v811 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 lastLocationAccess: - #next: j331  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result [v49|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v329 
index: - 
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v329 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j331 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v883 
lastLocationAccess: - 
=== Succesors ===
next: i133 
=== Usages ===
v332 
=== Predecessor ===
v329 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v883 lastLocationAccess: - #next: i133  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 38]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a810 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a810  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j331 
metaspaceMethod: v329 
arguments: a323 a1 i210 a299 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j331 metaspaceMethod: v329 arguments: a323 a1 i210 a299  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3787
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?156 
values: a295 a1 i210 a299 i114 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?156 values: a295 a1 i210 a299 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i133 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?508 
=== Succesors ===
next: v140 
=== Usages ===
v135 
=== Predecessor ===
j331 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?508 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i4 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i133 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: PROFILED designatedSuccessorProbability: 0.05578417512358964
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
i133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v139 #falseSuccessor: v136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 77]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
=== Inputs ===
x: i210 
y: i45 
=== Succesors ===
=== Usages ===
i210 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i210 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v123 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v123 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v123 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 83]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v123 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v123 #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3794) [bci: 85]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: i373 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: i373 stateAfter: - #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i202 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v195 
values: i210 i2 
=== Succesors ===
=== Usages ===
?201 v335 v347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v195 values: i210 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: a812 
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
result v55|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 56]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
=== Succesors ===
next: i813 
=== Usages ===
v887 v884 v885 
=== Predecessor ===
v195 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - #next: i813  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$Start.match(Matcher, int, CharSequence)>
localsSize: 5
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?200 
values: - a1 i202 
=== Succesors ===
=== Usages ===
v909 i813 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - a1 i202  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result [v55|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-86795|0xfffffffffffeacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?201 
guard: - 
address: v884 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
v426 
=== Predecessor ===
a812 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?201 guard: - address: v884 lastLocationAccess: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i259 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i813 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v493 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 374
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?201 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
v347 v359 
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 52]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i202 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i202 stateAfter: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result [v55|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3789) [bci: 64]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v491 
address: v885 
lastLocationAccess: - 
value: i202 
stateAfter: - 
=== Succesors ===
next: i814 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v491 address: v885 lastLocationAccess: - value: i202 stateAfter: - #next: i814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i814 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 71]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: v359 
=== Usages ===
v359 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v55|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$Start.match(Pattern.java:3790) [bci: 74]
at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v491 
address: v887 
lastLocationAccess: - 
value: i814 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
i814 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v491 address: v887 lastLocationAccess: - value: i814 stateAfter: - #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i159 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v157 
values: i4 i45 i4 
=== Succesors ===
=== Usages ===
v85 v68 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v157 values: i4 i45 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v160 v161 
=== Succesors ===
next: v71 
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v160 v161 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i159 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i159 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 2.4456478584700125E-4
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i815 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i815 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
v362 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i815 
stateAfter: - 
=== Succesors ===
next: i816 
=== Usages ===
=== Predecessor ===
i815 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i815 stateAfter: - #next: i816  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i816 v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
i82 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i816 
y: i45 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i816 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i816 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i159 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i743 <|@
result int[-128275|0xfffffffffffe0aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: -128275
stableDimension: 0
stamp: i32 [-128275]
stampKind: i32
value: int[-128275|0xfffffffffffe0aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j741 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i740 <|@
result int[-77107|0xfffffffffffed2cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
rawvalue: -77107
stableDimension: 0
stamp: i32 [-77107]
stampKind: i32
value: int[-77107|0xfffffffffffed2cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: i32 [-128275 - -77107] bits:1...10xx0xx01011x01101
valueDescription: i32
=== Inputs ===
merge: v728 
values: i740 i743 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v728 values: i740 i743  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v728 
values: j741 j744 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v728 values: j741 j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v739 v742 
=== Succesors ===
next: v734 
=== Usages ===
i732 j733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v739 v742 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: void
=== Inputs ===
stateBefore: ?176 
actionAndReason: i732 
speculation: j733 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?176 actionAndReason: i732 speculation: j733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000003498[index: 420, len: 24, hash: 0x5b66eaa0]: GuardMovement@2[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  362  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  362  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v38|q [0, 1[[234, 238[[280, 282[[324, 328[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[228, 237[[318, 327[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[226, 237[[316, 327[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v37|q [0, 1[[232, 237[[322, 327[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[236, 237[[326, 327[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v39|q [0, 6[[224, 237[[314, 327[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v40|q [0, 1[[230, 237[[320, 327[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 278[[284, 375[[376, 383[[384, 391[[392, 403[[404, 411[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister 198 MustHaveRegister 226 ShouldHaveRegister 248 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 316 ShouldHaveRegister 337 LiveAtLoopEnd 340 MustHaveRegister 354 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 245[[284, 290[[344, 348[[364, 375[[384, 391[[392, 403[[404, 411[8 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister 202 MustHaveRegister 228 ShouldHaveRegister 244 ShouldHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 20[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 50[12 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 48[14 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [16, 100[16 MustHaveRegister 42 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [20, 46[20 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [22, 64[22 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [24, 188[[344, 348[24 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [26, 194[[344, 348[26 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [28, 200[[344, 348[28 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [30, 220[[344, 348[30 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v13|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [42, 182[42 MustHaveRegister 68 MustHaveRegister 72 ShouldHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister 96 ShouldHaveRegister 98 MustHaveRegister 118 MustHaveRegister 172 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v8|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v16|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [98, 116[98 MustHaveRegister 106 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v5|d [100, 182[100 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 128 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 165 LiveAtLoopEnd 176 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v24|d [104, 112[[116, 121[106 ShouldHaveRegister 110 MustHaveRegister 112 ShouldHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [118, 166[118 MustHaveRegister 124 MustHaveRegister 165 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v23|d [122, 162[[166, 169[124 ShouldHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister 162 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [130, 160[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v26|d [170, 178[172 ShouldHaveRegister 176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v29|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [188, 242[[284, 338[188 MustHaveRegister 190 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 222 MustHaveRegister 300 MustHaveRegister 337 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v11|d [200, 242[[284, 338[200 MustHaveRegister 202 ShouldHaveRegister 286 ShouldHaveRegister 296 ShouldHaveRegister 337 LiveAtLoopEnd  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [206, 218[206 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [208, 212[208 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|d [212, 214[212 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [210, 213[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [214, 232[214 MustHaveRegister 216 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [216, 234[216 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v33|d [218, 224[218 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v12|d [220, 242[[284, 338[[384, 391[220 MustHaveRegister 230 ShouldHaveRegister 320 ShouldHaveRegister 337 LiveAtLoopEnd  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v31|d [222, 242[[284, 338[[384, 391[222 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d rax|d [238, 240[238 MustHaveRegister 240 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v1|d [290, 293[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d v43|d [294, 334[[348, 351[296 MustHaveRegister 318 ShouldHaveRegister 334 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [300, 312[300 MustHaveRegister 302 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [302, 306[302 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|d [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [304, 307[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [308, 322[308 MustHaveRegister 310 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [310, 324[310 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v45|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d rax|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v44|d [334, 337[334 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v1|d [246, 256[[376, 383[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [248, 260[248 MustHaveRegister 250 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d -1 [264, 280[[352, 358[266 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [396, 398[398 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [396, 400[400 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v38|q [0, 1[[234, 238[[280, 282[[324, 328[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[228, 237[[318, 327[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[226, 237[[316, 327[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v37|q [0, 1[[232, 237[[322, 327[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[236, 237[[326, 327[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v39|q [0, 6[[224, 237[[314, 327[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v40|q [0, 1[[230, 237[[320, 327[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 204[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister 198 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 204[8 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 20[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 50[12 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [14, 48[14 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [16, 100[16 MustHaveRegister 42 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [20, 46[20 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [22, 64[22 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [24, 188[[344, 348[24 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 194[[344, 348[26 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [28, 200[[344, 348[28 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [30, 33[30 MustHaveRegister  "OneSpillStore"
  v13|q QWORD "[r14|q]" v13|q -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r13|q]" v14|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r14|q]" v15|q v13|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [42, 182[42 MustHaveRegister 68 MustHaveRegister 72 ShouldHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister 96 ShouldHaveRegister 98 MustHaveRegister 118 MustHaveRegister 172 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v8|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v16|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [98, 116[98 MustHaveRegister 106 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v5|d [100, 182[100 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 128 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 165 LiveAtLoopEnd 176 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v24|d [104, 112[[116, 121[106 ShouldHaveRegister 110 MustHaveRegister 112 ShouldHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [118, 166[118 MustHaveRegister 124 MustHaveRegister 165 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v23|d [122, 162[[166, 169[124 ShouldHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister 162 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q -1 [130, 160[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v26|d [170, 178[172 ShouldHaveRegister 176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [188, 235[188 MustHaveRegister 190 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 222 MustHaveRegister  "SpillInDominator"
  v32|d DWORD "[rbp|d]" v32|d v11|d [200, 204[200 MustHaveRegister 202 ShouldHaveRegister  "SpillInDominator"
  v33|d DWORD "[rcx|d]" v33|d -1 [206, 218[206 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [208, 212[208 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r8|q]" v35|q v34|d [212, 214[212 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbx|q]" v36|q -1 [210, 213[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [214, 232[214 MustHaveRegister 216 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [216, 234[216 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q v33|d [218, 224[218 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q v12|d [220, 235[220 MustHaveRegister 230 ShouldHaveRegister  "SpillInDominator"
  v41|q QWORD "[r11|q]" v41|q v31|d [222, 235[222 MustHaveRegister  "OneSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [238, 240[238 MustHaveRegister 240 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v1|d [290, 293[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d v43|d [294, 298[296 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [300, 312[300 MustHaveRegister 302 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [302, 306[302 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v46|d [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [304, 307[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [308, 322[308 MustHaveRegister 310 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q -1 [310, 324[310 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v45|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d v44|d [334, 337[334 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v1|d [246, 256[[376, 383[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d -1 [248, 260[248 MustHaveRegister 250 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d -1 [264, 280[[352, 358[266 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [396, 398[398 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [396, 400[400 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v0|q v0|q [204, 223[ "SpillInDominator"
  v62|d DWORD "[rdx|d]" v1|d v1|d [204, 225[ "OneSpillStore"
  v63|d DWORD "[r13|d]" v12|d v12|d [204, 220[[344, 348[220 MustHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:0|d]" v12|d v12|d [33, 204[ "OneSpillStore"
  v65|d DWORD "[vstack:4|d]" v31|d v31|d [235, 242[[284, 294[ "SpillInDominator"
  v66|d DWORD "[vstack:3|d]" v32|d v32|d [204, 235[ "SpillInDominator"
  v67|q QWORD "[r9|q]" v0|q v0|q [223, 235[226 ShouldHaveRegister  "SpillInDominator"
  v68|d DWORD "[rdi|d]" v1|d v1|d [225, 235[228 ShouldHaveRegister  "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v32|d v32|d [235, 242[[284, 294[286 ShouldHaveRegister  "SpillInDominator"
  v70|q QWORD "[vstack:5|q]" v40|q v40|q [235, 242[[284, 294[ "SpillInDominator"
  v71|q QWORD "[vstack:6|q]" v41|q v41|q [235, 242[[284, 338[ "OneSpillStore"
  v72|q QWORD "[vstack:2|q]" v0|q v0|q [235, 246[ "SpillInDominator"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [235, 245[[284, 290[[344, 348[[364, 375[[384, 391[[392, 403[244 ShouldHaveRegister 290 ShouldHaveRegister  "OneSpillStore"
  v74|d DWORD "[rdx|d]" v1|d v1|d [404, 411[ "OneSpillStore"
  v75|q QWORD "[rsi|q]" v0|q v0|q [246, 278[[284, 294[248 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister  "SpillInDominator"
  v76|d DWORD "[rbp|d]" v32|d v32|d [294, 298[296 ShouldHaveRegister  "SpillInDominator"
  v77|d DWORD "[r10|d]" v31|d v31|d [294, 325[300 MustHaveRegister  "SpillInDominator"
  v78|q QWORD "[r13|q]" v40|q v40|q [294, 325[320 ShouldHaveRegister  "SpillInDominator"
  v79|q QWORD "[r11|q]" v41|q v41|q [384, 391[ "OneSpillStore"
  v80|q QWORD "[rsi|q]" v0|q v0|q [294, 298[ "SpillInDominator"
  v81|d DWORD "[vstack:3|d]" v32|d v32|d [298, 325[ "SpillInDominator"
  v82|d DWORD "[rdx|d]" v44|d v44|d [298, 315[ "OneSpillStore"
  v83|d DWORD "[vstack:4|d]" v31|d v31|d [325, 338[337 LiveAtLoopEnd  "SpillInDominator"
  v84|q QWORD "[rsi|q]" v0|q v0|q [298, 313[ "SpillInDominator"
  v85|q QWORD "[vstack:5|q]" v40|q v40|q [325, 338[337 LiveAtLoopEnd  "SpillInDominator"
  v86|q QWORD "[r11|q]" v0|q v0|q [313, 325[316 ShouldHaveRegister  "SpillInDominator"
  v87|d DWORD "[r9|d]" v44|d v44|d [315, 325[318 ShouldHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v32|d v32|d [325, 338[337 LiveAtLoopEnd  "SpillInDominator"
  v89|q QWORD "[vstack:2|q]" v0|q v0|q [325, 338[337 LiveAtLoopEnd  "SpillInDominator"
  v90|d DWORD "[vstack:8|d]" v44|d v44|d [325, 334[334 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[rdx|d]" v44|d v44|d [348, 351[350 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[rsi|q]" v0|q v0|q [338, 375[[376, 383[[384, 391[[392, 403[[404, 411[340 MustHaveRegister 354 MustHaveRegister 360 MustHaveRegister  "SpillInDominator"
  v93|q QWORD "[r13|q]" v40|q v40|q [384, 391[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE v31|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE v82|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOVE v77|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = STACKMOVE (input: v81|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  362  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v38|q [0, 1[[234, 238[[280, 282[[324, 328[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[228, 237[[318, 327[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[226, 237[[316, 327[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v37|q [0, 1[[232, 237[[322, 327[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[236, 237[[326, 327[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v39|q [0, 6[[224, 237[[314, 327[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v40|q [0, 1[[230, 237[[320, 327[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 204[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister 198 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 204[8 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 20[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 50[12 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [14, 48[14 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [16, 100[16 MustHaveRegister 42 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [20, 46[20 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [22, 64[22 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [24, 188[[344, 348[24 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 194[[344, 348[26 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [28, 200[[344, 348[28 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [30, 33[30 MustHaveRegister  "OneSpillStore"
  v13|q QWORD "[r14|q]" v13|q -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r13|q]" v14|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r14|q]" v15|q v13|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [42, 182[42 MustHaveRegister 68 MustHaveRegister 72 ShouldHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister 96 ShouldHaveRegister 98 MustHaveRegister 118 MustHaveRegister 172 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v8|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v16|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [98, 116[98 MustHaveRegister 106 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v5|d [100, 182[100 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 128 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 165 LiveAtLoopEnd 176 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v24|d [104, 112[[116, 121[106 ShouldHaveRegister 110 MustHaveRegister 112 ShouldHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [118, 166[118 MustHaveRegister 124 MustHaveRegister 165 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v23|d [122, 162[[166, 169[124 ShouldHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister 162 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q -1 [130, 160[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v26|d [170, 178[172 ShouldHaveRegister 176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [188, 235[188 MustHaveRegister 190 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[rbp|d]" v32|d v11|d [200, 204[200 MustHaveRegister 202 ShouldHaveRegister  "StoreAtDefinition"
  v33|d DWORD "[rcx|d]" v33|d -1 [206, 218[206 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [208, 212[208 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r8|q]" v35|q v34|d [212, 214[212 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbx|q]" v36|q -1 [210, 213[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [214, 232[214 MustHaveRegister 216 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [216, 234[216 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q v33|d [218, 224[218 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q v12|d [220, 235[220 MustHaveRegister 230 ShouldHaveRegister  "StoreAtDefinition"
  v41|q QWORD "[r11|q]" v41|q v31|d [222, 235[222 MustHaveRegister  "OneSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [238, 240[238 MustHaveRegister 240 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v1|d [290, 293[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d v43|d [294, 298[296 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [300, 312[300 MustHaveRegister 302 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [302, 306[302 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v46|d [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [304, 307[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [308, 322[308 MustHaveRegister 310 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q -1 [310, 324[310 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v45|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d v44|d [334, 337[334 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v1|d [246, 256[[376, 383[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d -1 [248, 260[248 MustHaveRegister 250 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d -1 [264, 280[[352, 358[266 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [396, 398[398 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [396, 400[400 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v0|q v0|q [204, 223[ "StoreAtDefinition"
  v62|d DWORD "[rdx|d]" v1|d v1|d [204, 225[ "OneSpillStore"
  v63|d DWORD "[r13|d]" v12|d v12|d [204, 220[[344, 348[220 MustHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:0|d]" v12|d v12|d [33, 204[ "OneSpillStore"
  v65|d DWORD "[vstack:4|d]" v31|d v31|d [235, 242[[284, 294[ "StoreAtDefinition"
  v66|d DWORD "[vstack:3|d]" v32|d v32|d [204, 235[ "StoreAtDefinition"
  v67|q QWORD "[r9|q]" v0|q v0|q [223, 235[226 ShouldHaveRegister  "StoreAtDefinition"
  v68|d DWORD "[rdi|d]" v1|d v1|d [225, 235[228 ShouldHaveRegister  "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v32|d v32|d [235, 242[[284, 294[286 ShouldHaveRegister  "StoreAtDefinition"
  v70|q QWORD "[vstack:5|q]" v40|q v40|q [235, 242[[284, 294[ "StoreAtDefinition"
  v71|q QWORD "[vstack:6|q]" v41|q v41|q [235, 242[[284, 338[ "OneSpillStore"
  v72|q QWORD "[vstack:2|q]" v0|q v0|q [235, 246[ "StoreAtDefinition"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [235, 245[[284, 290[[344, 348[[364, 375[[384, 391[[392, 403[244 ShouldHaveRegister 290 ShouldHaveRegister  "OneSpillStore"
  v74|d DWORD "[rdx|d]" v1|d v1|d [404, 411[ "OneSpillStore"
  v75|q QWORD "[rsi|q]" v0|q v0|q [246, 278[[284, 294[248 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister  "StoreAtDefinition"
  v76|d DWORD "[rbp|d]" v32|d v32|d [294, 298[296 ShouldHaveRegister  "StoreAtDefinition"
  v77|d DWORD "[r10|d]" v31|d v31|d [294, 325[300 MustHaveRegister  "StoreAtDefinition"
  v78|q QWORD "[r13|q]" v40|q v40|q [294, 325[320 ShouldHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[r11|q]" v41|q v41|q [384, 391[ "OneSpillStore"
  v80|q QWORD "[rsi|q]" v0|q v0|q [294, 298[ "StoreAtDefinition"
  v81|d DWORD "[vstack:3|d]" v32|d v32|d [298, 325[ "StoreAtDefinition"
  v82|d DWORD "[rdx|d]" v44|d v44|d [298, 315[ "OneSpillStore"
  v83|d DWORD "[vstack:4|d]" v31|d v31|d [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v84|q QWORD "[rsi|q]" v0|q v0|q [298, 313[ "StoreAtDefinition"
  v85|q QWORD "[vstack:5|q]" v40|q v40|q [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v86|q QWORD "[r11|q]" v0|q v0|q [313, 325[316 ShouldHaveRegister  "StoreAtDefinition"
  v87|d DWORD "[r9|d]" v44|d v44|d [315, 325[318 ShouldHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v32|d v32|d [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v89|q QWORD "[vstack:2|q]" v0|q v0|q [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v90|d DWORD "[vstack:8|d]" v44|d v44|d [325, 334[334 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[rdx|d]" v44|d v44|d [348, 351[350 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[rsi|q]" v0|q v0|q [338, 375[[376, 383[[384, 391[[392, 403[[404, 411[340 MustHaveRegister 354 MustHaveRegister 360 MustHaveRegister  "StoreAtDefinition"
  v93|q QWORD "[r13|q]" v40|q v40|q [384, 391[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[v24|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[v28|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[v26|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[v30|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE v31|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[v1|DWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[v43|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE v82|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOVE v77|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = STACKMOVE (input: v81|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[v53|DWORD] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|DWORD] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  362  <|@ instruction JUMP ~[int[0|0x0]] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[int[-77107|0xfffffffffffed2cd], long[1300|0x514]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-128275|0xfffffffffffe0aed], long[660|0x294]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v38|q [0, 1[[234, 238[[280, 282[[324, 328[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[228, 237[[318, 327[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 8[[226, 237[[316, 327[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v37|q [0, 1[[232, 237[[322, 327[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[236, 237[[326, 327[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v39|q [0, 6[[224, 237[[314, 327[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v40|q [0, 1[[230, 237[[320, 327[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[236, 237[[326, 327[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 204[6 MustHaveRegister 16 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister 198 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 204[8 MustHaveRegister 56 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 20[10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 50[12 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [14, 48[14 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [16, 100[16 MustHaveRegister 42 MustHaveRegister 94 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [18, 44[18 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [20, 46[20 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d -1 [22, 64[22 MustHaveRegister 62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [24, 188[[344, 348[24 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdi|d]" v10|d -1 [26, 194[[344, 348[26 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d -1 [28, 200[[344, 348[28 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [30, 33[30 MustHaveRegister  "OneSpillStore"
  v13|q QWORD "[r14|q]" v13|q -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r13|q]" v14|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r14|q]" v15|q v13|q [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r13|d]" v16|d -1 [42, 182[42 MustHaveRegister 68 MustHaveRegister 72 ShouldHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister 96 ShouldHaveRegister 98 MustHaveRegister 118 MustHaveRegister 172 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v8|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v16|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [74, 78[74 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r8|q]" v20|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [98, 116[98 MustHaveRegister 106 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v5|d [100, 182[100 MustHaveRegister 110 MustHaveRegister 115 LiveAtLoopEnd 128 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 165 LiveAtLoopEnd 176 MustHaveRegister 181 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v24|d [104, 112[[116, 121[106 ShouldHaveRegister 110 MustHaveRegister 112 ShouldHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [118, 166[118 MustHaveRegister 124 MustHaveRegister 165 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v23|d [122, 162[[166, 169[124 ShouldHaveRegister 128 MustHaveRegister 130 ShouldHaveRegister 162 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q -1 [130, 160[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r8|d]" v29|d v26|d [170, 178[172 ShouldHaveRegister 176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v29|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [188, 235[188 MustHaveRegister 190 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[rbp|d]" v32|d v11|d [200, 204[200 MustHaveRegister 202 ShouldHaveRegister  "StoreAtDefinition"
  v33|d DWORD "[rcx|d]" v33|d -1 [206, 218[206 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [208, 212[208 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r8|q]" v35|q v34|d [212, 214[212 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbx|q]" v36|q -1 [210, 213[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q -1 [214, 232[214 MustHaveRegister 216 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q -1 [216, 234[216 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q v33|d [218, 224[218 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[r13|q]" v40|q v12|d [220, 235[220 MustHaveRegister 230 ShouldHaveRegister  "StoreAtDefinition"
  v41|q QWORD "[r11|q]" v41|q v31|d [222, 235[222 MustHaveRegister  "OneSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|d [238, 240[238 MustHaveRegister 240 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d v1|d [290, 293[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d v43|d [294, 298[296 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [300, 312[300 MustHaveRegister 302 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r8|d]" v46|d -1 [302, 306[302 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r8|q]" v47|q v46|d [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q -1 [304, 307[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [308, 322[308 MustHaveRegister 310 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q -1 [310, 324[310 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v45|d [312, 314[312 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d v44|d [334, 337[334 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdx|d]" v54|d v1|d [246, 256[[376, 383[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d -1 [248, 260[248 MustHaveRegister 250 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [258, 260[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d -1 [264, 280[[352, 358[266 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [396, 398[398 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [396, 400[400 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v0|q v0|q [204, 223[ "StoreAtDefinition"
  v62|d DWORD "[rdx|d]" v1|d v1|d [204, 225[ "OneSpillStore"
  v63|d DWORD "[r13|d]" v12|d v12|d [204, 220[[344, 348[220 MustHaveRegister  "OneSpillStore"
  v64|d DWORD "[vstack:0|d]" v12|d v12|d [33, 204[ "OneSpillStore"
  v65|d DWORD "[vstack:4|d]" v31|d v31|d [235, 242[[284, 294[ "StoreAtDefinition"
  v66|d DWORD "[vstack:3|d]" v32|d v32|d [204, 235[ "StoreAtDefinition"
  v67|q QWORD "[r9|q]" v0|q v0|q [223, 235[226 ShouldHaveRegister  "StoreAtDefinition"
  v68|d DWORD "[rdi|d]" v1|d v1|d [225, 235[228 ShouldHaveRegister  "OneSpillStore"
  v69|d DWORD "[vstack:3|d]" v32|d v32|d [235, 242[[284, 294[286 ShouldHaveRegister  "StoreAtDefinition"
  v70|q QWORD "[vstack:5|q]" v40|q v40|q [235, 242[[284, 294[ "StoreAtDefinition"
  v71|q QWORD "[vstack:6|q]" v41|q v41|q [235, 242[[284, 338[ "OneSpillStore"
  v72|q QWORD "[vstack:2|q]" v0|q v0|q [235, 246[ "StoreAtDefinition"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [235, 245[[284, 290[[344, 348[[364, 375[[384, 391[[392, 403[244 ShouldHaveRegister 290 ShouldHaveRegister  "OneSpillStore"
  v74|d DWORD "[rdx|d]" v1|d v1|d [404, 411[ "OneSpillStore"
  v75|q QWORD "[rsi|q]" v0|q v0|q [246, 278[[284, 294[248 MustHaveRegister 254 MustHaveRegister 258 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister  "StoreAtDefinition"
  v76|d DWORD "[rbp|d]" v32|d v32|d [294, 298[296 ShouldHaveRegister  "StoreAtDefinition"
  v77|d DWORD "[r10|d]" v31|d v31|d [294, 325[300 MustHaveRegister  "StoreAtDefinition"
  v78|q QWORD "[r13|q]" v40|q v40|q [294, 325[320 ShouldHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[r11|q]" v41|q v41|q [384, 391[ "OneSpillStore"
  v80|q QWORD "[rsi|q]" v0|q v0|q [294, 298[ "StoreAtDefinition"
  v81|d DWORD "[vstack:3|d]" v32|d v32|d [298, 325[ "StoreAtDefinition"
  v82|d DWORD "[rdx|d]" v44|d v44|d [298, 315[ "OneSpillStore"
  v83|d DWORD "[vstack:4|d]" v31|d v31|d [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v84|q QWORD "[rsi|q]" v0|q v0|q [298, 313[ "StoreAtDefinition"
  v85|q QWORD "[vstack:5|q]" v40|q v40|q [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v86|q QWORD "[r11|q]" v0|q v0|q [313, 325[316 ShouldHaveRegister  "StoreAtDefinition"
  v87|d DWORD "[r9|d]" v44|d v44|d [315, 325[318 ShouldHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v32|d v32|d [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v89|q QWORD "[vstack:2|q]" v0|q v0|q [325, 338[337 LiveAtLoopEnd  "StoreAtDefinition"
  v90|d DWORD "[vstack:8|d]" v44|d v44|d [325, 334[334 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[rdx|d]" v44|d v44|d [348, 351[350 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[rsi|q]" v0|q v0|q [338, 375[[376, 383[[384, 391[[392, 403[[404, 411[340 MustHaveRegister 354 MustHaveRegister 360 MustHaveRegister  "StoreAtDefinition"
  v93|q QWORD "[r13|q]" v40|q v40|q [384, 391[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [v29|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE v64|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOVE v31|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [v54|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [v57|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOVE v65|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE v76|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE v82|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOVE v77|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = STACKMOVE (input: v81|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOVE v83|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE v90|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v2|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v2|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v2|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction v12|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction v13|QWORD = MOV [v3|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[_] = MOVE v12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction v14|QWORD = LEA [v13|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38992], y: v14|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction v15|QWORD = INC v13|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [v4|DWORD[_] * 8 + 38992], y: v15|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v16|DWORD = MOV [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [v4|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v17|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v17|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v18|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction v20|QWORD = MOV v16|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH v16|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [v5|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP v16|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v16|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v23|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [v22|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction v24|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v25|DWORD = LEA [v16|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v25|DWORD, y: v26|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [v22|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [v22|QWORD[.] + v27|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction v28|DWORD = LEA [v26|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v29|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [v22|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction v30|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v31|DWORD[_] = MOV [v9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v31|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v10|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction v32|DWORD = SUB (x: v11|DWORD, ~y: [v31|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v32|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOVE v64|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction v33|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction v36|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction v37|QWORD = MOV [v35|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction v38|QWORD = MOV [v37|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  222  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE v62|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  238  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction v55|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [v55|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 16], y: v54|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction v56|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [v55|DWORD[_] * 8 + 20], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: v57|DWORD, y: v57|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction v58|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v58|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH v32|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v43|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOVE v65|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v32|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  300  <|@ instruction v45|DWORD[_] = MOV [v31|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction v48|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction v49|QWORD = MOV [v47|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction v50|QWORD = MOV [v49|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE v82|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rbx|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: v41|QWORD[.] v0|QWORD[.] v44|DWORD v40|QWORD[.] v32|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  328  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: v52|DWORD, y: v52|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v53|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOVE v83|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE v90|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [v0|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - v0|QWORD[.] v54|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: v41|QWORD[.] v0|QWORD[.] v1|DWORD v40|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  222  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH vstack:3|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:6|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = INC vstack:8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] vstack:1|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   14  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   32  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  172  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  178  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  190  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rbp|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  202  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  210  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  212  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  222  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  240  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  280  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH vstack:3|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rdx|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  296  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:6|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  304  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  306  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  308  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  310  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  312  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  330  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rdx|DWORD = INC vstack:8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] vstack:1|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:0|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction vstack:4|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction vstack:3|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE vstack:0|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction vstack:5|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction vstack:6|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction vstack:1|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH vstack:3|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: vstack:6|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: vstack:6|QWORD[.] vstack:2|QWORD[.] vstack:8|DWORD vstack:5|QWORD[.] vstack:3|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC vstack:8|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE vstack:4|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  450  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] vstack:1|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  440  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [32, 232[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [268, 470[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [6, 376[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [218, 355[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [204, 355[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [250, 355[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [266, 355[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [336, 358[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:52|d]" vstack:0|d -1 [32, 232[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:32|d]" vstack:1|d -1 [268, 470[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:48|q]" vstack:2|q -1 [6, 376[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [218, 355[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:56|d]" vstack:4|d -1 [204, 355[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:64|q]" vstack:5|q -1 [250, 355[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:72|q]" vstack:6|q -1 [266, 355[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:36|d]" vstack:8|d -1 [336, 358[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  440  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  440  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607180215956260591
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024696571054416
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   30  <|@ instruction r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD <|@ <|@
      nr   32  <|@ instruction stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r13|QWORD = LEA [r14|QWORD + 63] size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction r14|QWORD = INC r14|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38992] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   48  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 38992] <|@ <|@
      nr   50  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38992] <|@ <|@
      nr   52  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   54  <|@ instruction MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   56  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B18" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B42" 
    xhandlers
    flags 
    probability 4602249826951693163
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B2" 
    successors "B19" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rsi:0, rdi:0, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  204  <|@ instruction stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:28, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B31" 
    xhandlers
    flags 
    probability 4607182390179748673
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108] <|@ <|@
      nr  238  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  240  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:32|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606679932595707218
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4606684679527765922
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" "B34" "B30" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction INC [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753426579063659
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699129358451254
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B16" "B18" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840075134960500
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597738041960284459
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  170  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  176  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608039175398259163
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4588200142380457702
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rdx|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4558287260722382942
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31]
locals: stack:72|QWORD[.] rsi|QWORD[.] rdx|DWORD r13|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121] <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  316  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  318  <|@ instruction rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44]
locals: stack:72|QWORD[.] stack:48|QWORD[.] stack:36|DWORD stack:64|QWORD[.] stack:28|DWORD 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121] <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4539719689125271326
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = INC stack:36|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B27" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4588204629552687372
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B35" 
    xhandlers
    flags 
    probability 4588124191467518443
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4558000081699684076
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4553147047658162176
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524613057979875328
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE <|@ <|@
      nr  226  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV [r15|QWORD + 1156] y: -126995 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  450  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 1156] y: -110228 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV [r15|QWORD + 1168] y: 12820 size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rsi:0, r11:0, r13:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47]
stack: int[0|0x0] 
locals: r11|QWORD[.] rsi|QWORD[.] stack:32|DWORD r13|QWORD[.] int[2147483647|0x7fffffff] 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:47, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction MOV [r15|QWORD + 1156] y: -68123 size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV [r15|QWORD + 1168] y: 13464 size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] stack:32|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOV [r15|QWORD + 1156] y: -95771 size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50]
locals: - rsi|QWORD[.] rdx|DWORD - - 
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:50, 121] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd] <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f85a404000048896c2440488974242048b9addeaddeaddeadde448b41788b59748b4638448b517c8b4970448b5e24448b4e348b7e448b6e10448b6e3c4e8b34c55098000044896c241c4d8d6e3f4e892cc55098000049ffc64c8934dd50980000448b2cc50c000000c6463000c646310085d20f8c5903000089561c4585db440f4cda44895e244585ed0f8473000000418bcdffc94863c9458bc54c3bc10f870a0000004183fd020f83a0030000c704c510000000ffffffff4183fd03b902000000410f42cd48c1e00341b801000000e9230000006666660f1f840000000000666666900f1f84000000000042c7448010ffffffff41ffc0413bc80f8e17010000ebe9468b14cd34000000448954241842813cd508000000addeadde0f8576030000833cfd0c000000000f85c5020000c7461800000000422b2cd510000000896c24343bd50f8f78020000448b6c241c428b0cd50c000000448b04cd0800000048bb0000003f027f00004e8d0403498b98f0010000488b434048c1e10349c1e5034c896c2410458bda49c1e3034c8bce488bf18bfa498bd18bcf4d8bc54c895c2408897c2430ffd00f1f84000000000085c00f842a0100008b542430488b7424208b4638833cc50c000000020f82a302000089561c8914c5100000008b56208914c51400000041ba010000004585d20f84c20100008b4620894624ff462c418bc2488b6c24404883c448493ba7500400000f87a3020000c3418d4df0e9b30000006666660f1f84000000000042c7448010ffffffff41ffc00f1f4000453be80f8ebefeffffebe50f1f44000042c7448010ffffffff4963d8c7449814ffffffffc7449818ffffffffc744981cffffffffc7449820ffffffffc7449824ffffffffc7449828ffffffffc744982cffffffffc7449830ffffffffc7449834ffffffffc7449838ffffffffc744983cffffffffc7449840ffffffffc7449844ffffffffc7449848ffffffffc744984cffffffff458d4010413bc80f8e5fffffffe96affffff488b742420817c2434ffffff7f0f842c0100008b542430ffc24c8b6c24108b6c2434448b542418e98d0000006666660f1f840000000000666666906666660f1f84000000000066666690428b0cd50c000000448b04cd0800000048bb0000003f027f00004e8d0403498b98f0010000488b434048c1e1034c8bde488bf1448bca498bd3418bc94d8bc544894c242cffd00f1f84000000000085c00f852c0000008b54242cffc24c8b6c24108b6c2434448b542418488b7424203bd57e8dc646300141ba00000000e93efeffff8b54242ce905feffffc7461cffffffffe932feffffc646300141ba00000000e91afeffff41c78784040000ed0ffeff49c7879004000014000000e8000000000f1f84000000000049c7c39402000041baed0afeff89542430458997840400004d899f90040000e8000000000f1f8400000000004c8b5c24084c8b6c241041c787840400006c51feff49c7879004000014320000e8000000000f1f8400000000008954243041c78784040000e5f5feff49c7879004000098340000e8000000000f1f84000000000041c78784040000e589feff49c7879004000000000000e8000000000f1f84000000000049c7c31405000041bacdd2feffe958ffffff48896c2440e800000000e94dfbfffff4488d0d49fdffff49898f68040000e9fffafffff441c78784040000f506ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5dcfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5e8feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c7feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5acfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5bafeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD  <||@
  Comment 63 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 68 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 78 10 r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD  <||@
  Comment 82 12 rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD  <||@
  Comment 85 14 rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 88 16 r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD  <||@
  Comment 92 18 rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 95 20 r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 99 22 r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 103 24 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 106 26 rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 109 28 r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 113 30 r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD  <||@
  Comment 121 32 stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD  <||@
  Comment 126 34 r13|QWORD = LEA [r14|QWORD + 63] size: QWORD  <||@
  Comment 130 36 MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD  <||@
  Comment 138 38 r14|QWORD = INC r14|QWORD size: QWORD  <||@
  Comment 141 40 MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD  <||@
  Comment 149 42 r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 149 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 157 44 BLACKHOLE [r10|DWORD[_] * 8 + 38992]  <||@
  Comment 157 46 BLACKHOLE [rcx|DWORD[_] * 8 + 38992]  <||@
  Comment 157 48 BLACKHOLE [rbx|DWORD[_] * 8 + 38992]  <||@
  Comment 157 50 BLACKHOLE [r8|DWORD[_] * 8 + 38992]  <||@
  Comment 157 52 MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 161 54 MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 165 56 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 173 block B2 null  <||@
  Comment 173 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 68 MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 176 70 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 179 72 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: <  <||@
  Comment 183 74 MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 187 76 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 196 block B4 null  <||@
  Comment 196 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 84 rcx|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 201 86 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 204 88 r8|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 207 90 CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 216 block B6 null  <||@
  Comment 216 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 98 CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null  <||@
  Comment 226 block B8 null  <||@
  Comment 226 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 106 MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 237 108 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 241 110 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<|  <||@
  Comment 250 112 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 254 114 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 116 JUMP ~[] destination: B8 -> B9  <||@
  Comment 265 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 265 122 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 124 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 297 126 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 300 128 JUMP ~[] destination: B10 -> B9  <||@
  Comment 300 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 300 118 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 300 120 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 311 block B18 null  <||@
  Comment 311 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 202 r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 311 [rsi:0, rdi:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 319 204 stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD  <||@
  Comment 324 206 CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68]  <||@
  Comment 324 [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 324 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 324 {meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}}  <||@
  Comment 342 block B19 null  <||@
  Comment 342 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 210 CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68]  <||@
  Comment 342 [rsi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 342 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 356 block B20 null  <||@
  Comment 356 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 356 214 MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 363 216 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD  <||@
  Comment 371 218 stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 375 220 CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 383 block B22 null  <||@
  Comment 383 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 383 232 r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD  <||@
  Comment 388 234 rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 396 236 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108]  <||@
  Comment 396 [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 396 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 404 238 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 414 240 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0  <||@
  Comment 418 242 rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD  <||@
  Comment 425 244 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 429 246 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 433 248 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 437 250 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 442 252 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 449 254 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 452 256 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 455 258 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 457 260 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 460 262 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 462 264 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 465 266 stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 470 268 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 474 270 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121]  <||@
  Comment 474 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 474 INLINE_INVOKE  <||@
  Comment 476 [stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 484 272 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD  <||@
  Comment 492 block B31 null  <||@
  Comment 492 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 374 rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 496 378 JUMP ~[] destination: B31 -> B32  <||@
  Comment 496 block B32 null  <||@
  Comment 496 380 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 496 360 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 501 382 rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 504 384 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121]  <||@
  Comment 504 [rax:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 504 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 block B34 null  <||@
  Comment 518 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 396 MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 521 398 MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 528 400 rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 531 402 MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD  <||@
  Comment 538 404 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 544 406 JUMP ~[] destination: B34 -> B35  <||@
  Comment 544 block B35 null  <||@
  Comment 544 408 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 544 410 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD  <||@
  Comment 553 block B38 null  <||@
  Comment 553 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 424 rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 556 426 MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD  <||@
  Comment 559 428 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 562 430 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 565 432 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 574 POLL_RETURN_FAR  <||@
  Comment 588 block B11 null  <||@
  Comment 588 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 588 132 rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD  <||@
  Comment 592 134 JUMP ~[] destination: B11 -> B12  <||@
  Comment 597 block B16 loop 2 depth 1 header:530|LoopBegin  <||@
  Comment 597 188 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 190 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 617 192 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 620 194 JUMP ~[] destination: B16 -> B15  <||@
  Comment 620 block B15 loop 2 depth 1 header:530|LoopBegin  <||@
  Comment 620 184 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 624 186 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD  <||@
  Comment 635 block B13 loop 1 depth 1 header:510|LoopBegin  <||@
  Comment 635 140 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 142 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 649 144 rbx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 652 146 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 660 148 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 668 150 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 676 152 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 684 154 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 692 156 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 700 158 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 708 160 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 716 162 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 724 164 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 732 166 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 740 168 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 748 170 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 756 172 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 764 174 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 772 176 r8|DWORD = LEA [r8|DWORD + 16] size: DWORD  <||@
  Comment 776 178 JUMP ~[] destination: B13 -> B12  <||@
  Comment 776 block B12 loop 1 depth 1 header:510|LoopBegin  <||@
  Comment 776 136 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 776 138 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD  <||@
  Comment 790 block B23 null  <||@
  Comment 790 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 790 276 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 795 278 CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null  <||@
  Comment 809 block B25 null  <||@
  Comment 809 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 294 rdx|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 815 296 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 820 298 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 824 300 r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD  <||@
  Comment 829 302 JUMP ~[] destination: B25 -> B26  <||@
  Comment 834 block B27 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 834 308 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 310 rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 872 312 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121]  <||@
  Comment 872 [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:72|QWORD[.]  |rsi|QWORD[.]  |rdx|DWORD  |r13|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 872 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 880 314 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 890 316 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0  <||@
  Comment 894 318 rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD  <||@
  Comment 901 320 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 905 322 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 909 324 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 912 326 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 915 328 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 918 330 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 921 332 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 924 334 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 927 336 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 932 338 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121]  <||@
  Comment 932 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 932 INLINE_INVOKE  <||@
  Comment 934 [stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:48|QWORD[.]  |stack:36|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 942 340 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 950 block B28 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 950 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 344 rdx|DWORD = INC stack:36|DWORD size: DWORD  <||@
  Comment 956 346 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 961 348 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 965 350 r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD  <||@
  Comment 970 352 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 975 354 JUMP ~[] destination: B28 -> B26  <||@
  Comment 975 block B26 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 975 304 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 975 306 CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD  <||@
  Comment 979 block B30 null  <||@
  Comment 979 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 979 366 MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 983 368 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 989 370 JUMP ~[] destination: B30 -> B35  <||@
  Comment 994 block B29 null  <||@
  Comment 994 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 994 358 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 998 362 JUMP ~[] destination: B29 -> B32  <||@
  Comment 1003 block B36 null  <||@
  Comment 1003 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1003 414 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 1010 416 JUMP ~[] destination: B36 -> B38  <||@
  Comment 1015 block B21 null  <||@
  Comment 1015 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1015 224 MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 1019 226 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1025 228 JUMP ~[] destination: B21 -> B35  <||@
  Comment 1030 block B1 null  <||@
  Comment 1030 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 60 MOV [r15|QWORD + 1156] y: -126995 size: DWORD  <||@
  Comment 1041 62 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1052 64 DEOPT info [bci:10]  <||@
  Comment 1052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1057 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1065 block B39 null  <||@
  Comment 1065 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1065 436 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1072 438 r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed]  <||@
  Comment 1078 442 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1078 block B41 null  <||@
  Comment 1078 454 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1078 450 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1082 456 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1089 458 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1096 460 DEOPT info [bci:68]  <||@
  Comment 1096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1101 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1               |2 
     locals:  |rsi|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 1109 block B24 null  <||@
  Comment 1109 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1109 282 r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 284 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 286 MOV [r15|QWORD + 1156] y: -110228 size: DWORD  <||@
  Comment 1130 288 MOV [r15|QWORD + 1168] y: 12820 size: QWORD  <||@
  Comment 1141 290 DEOPT info [bci:47, 121]  <||@
  Comment 1141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1146 [rsi:0, r11:0, r13:0]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2               |3             |4                          
     locals:  |r11|QWORD[.]  |rsi|QWORD[.]  |stack:32|DWORD  |r13|QWORD[.]  |int[2147483647|0x7fffffff] 
     stack:   |int[0|0x0]    |              |                |              |                           
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1154 block B42 null  <||@
  Comment 1154 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1154 464 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1158 466 MOV [r15|QWORD + 1156] y: -68123 size: DWORD  <||@
  Comment 1169 468 MOV [r15|QWORD + 1168] y: 13464 size: QWORD  <||@
  Comment 1180 470 DEOPT info [bci:44]  <||@
  Comment 1180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1185 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1               |2 
     locals:  |rsi|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 1193 block B33 null  <||@
  Comment 1193 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1193 388 MOV [r15|QWORD + 1156] y: -95771 size: DWORD  <||@
  Comment 1204 390 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1215 392 DEOPT info [bci:50, 121]  <||@
  Comment 1215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1220 [rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1228 block B40 null  <||@
  Comment 1228 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1228 446 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1235 448 r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd]  <||@
  Comment 1241 452 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1251 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1276 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1304 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1309 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1344 [rsi:0, rdi:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1374 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1379 [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1414 [rsi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1449 [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1484 [rax:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1519 [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:72|QWORD[.]  |rsi|QWORD[.]  |rdx|DWORD  |r13|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1527 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1527 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1533 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1533 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4872[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-4872[java.util.regex.Matcher.search(int)]"
  date 1714038142720
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02abd6a020 448b560849bc0000003f027f00004d03d44d33e4493bc20f8543b0e1fe66669089842400c0feff4883ec489041817f20000000000f85a404000048896c2440488974242048b9d88c5e2e06000000448b41788b59748b4638448b517c8b4970448b5e24448b4e348b7e448b6e10448b6e3c4e8b34c55098000044896c241c4d8d6e3f4e892cc55098000049ffc64c8934dd50980000448b2cc50c000000c6463000c646310085d20f8c5903000089561c4585db440f4cda44895e244585ed0f8473000000418bcdffc94863c9458bc54c3bc10f870a0000004183fd020f83a0030000c704c510000000ffffffff4183fd03b902000000410f42cd48c1e00341b801000000e9230000006666660f1f840000000000666666900f1f84000000000042c7448010ffffffff41ffc0413bc80f8e17010000ebe9468b14cd34000000448954241842813cd508000000f07135000f8576030000833cfd0c000000000f85c5020000c7461800000000422b2cd510000000896c24343bd50f8f78020000448b6c241c428b0cd50c000000448b04cd0800000048bb0000003f027f00004e8d0403498b98f0010000488b434048c1e10349c1e5034c896c2410458bda49c1e3034c8bce488bf18bfa498bd18bcf4d8bc54c895c2408897c2430ffd00f1f84000000000085c00f842a0100008b542430488b7424208b4638833cc50c000000020f82a302000089561c8914c5100000008b56208914c51400000041ba010000004585d20f84c20100008b4620894624ff462c418bc2488b6c24404883c448493ba7500400000f87a3020000c3418d4df0e9b30000006666660f1f84000000000042c7448010ffffffff41ffc00f1f4000453be80f8ebefeffffebe50f1f44000042c7448010ffffffff4963d8c7449814ffffffffc7449818ffffffffc744981cffffffffc7449820ffffffffc7449824ffffffffc7449828ffffffffc744982cffffffffc7449830ffffffffc7449834ffffffffc7449838ffffffffc744983cffffffffc7449840ffffffffc7449844ffffffffc7449848ffffffffc744984cffffffff458d4010413bc80f8e5fffffffe96affffff488b742420817c2434ffffff7f0f842c0100008b542430ffc24c8b6c24108b6c2434448b542418e98d0000006666660f1f840000000000666666906666660f1f84000000000066666690428b0cd50c000000448b04cd0800000048bb0000003f027f00004e8d0403498b98f0010000488b434048c1e1034c8bde488bf1448bca498bd3418bc94d8bc544894c242cffd00f1f84000000000085c00f852c0000008b54242cffc24c8b6c24108b6c2434448b542418488b7424203bd57e8dc646300141ba00000000e93efeffff8b54242ce905feffffc7461cffffffffe932feffffc646300141ba00000000e91afeffff41c78784040000ed0ffeff49c7879004000014000000e8390de2fe0f1f84000000000049c7c39402000041baed0afeff89542430458997840400004d899f90040000e80d0de2fe0f1f8400000000004c8b5c24084c8b6c241041c787840400006c51feff49c7879004000014320000e8e00ce2fe0f1f8400000000008954243041c78784040000e5f5feff49c7879004000098340000e8b90ce2fe0f1f84000000000041c78784040000e589feff49c7879004000000000000e8960ce2fe0f1f84000000000049c7c31405000041bacdd2feffe958ffffff48896c2440e8180de0fee94dfbfffff4488d0d49fdffff49898f68040000e9df1ae2fef441c78784040000f506ffff49c7879004000000000000e83d0ce2fe0f1f84000000000041c78784040000f5dcfeff49c7879004000000000000e81a0ce2fe0f1f84000000000041c78784040000f5d3feff49c7879004000000000000e8f70be2fe0f1f84000000000041c78784040000f5e8feff49c7879004000000000000e8d40be2fe0f1f84000000000041c78784040000f5c7feff49c7879004000000000000e8b10be2fe0f1f84000000000041c78784040000f5acfeff49c7879004000000000000e88e0be2fe0f1f84000000000041c78784040000f5bafeff49c7879004000000000000e86b0be2fe0f1f840000000000e8e4d0f5fef4e8fe08e2fef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1bf19392 slotKind: QWORD  <||@
  Comment 63 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 68 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 78 10 r8|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD  <||@
  Comment 82 12 rbx|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD  <||@
  Comment 85 14 rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 88 16 r10|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD  <||@
  Comment 92 18 rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 95 20 r11|DWORD = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 99 22 r9|DWORD[_] = MOV [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 103 24 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 106 26 rbp|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 109 28 r13|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 113 30 r14|QWORD = MOV [r8|DWORD[_] * 8 + 38992] size: QWORD  <||@
  Comment 121 32 stack:52|DWORD[_] = MOVE r13|DWORD[_] moveKind: DWORD  <||@
  Comment 126 34 r13|QWORD = LEA [r14|QWORD + 63] size: QWORD  <||@
  Comment 130 36 MOV (x: [r8|DWORD[_] * 8 + 38992], y: r13|QWORD) size: QWORD  <||@
  Comment 138 38 r14|QWORD = INC r14|QWORD size: QWORD  <||@
  Comment 141 40 MOV (x: [rbx|DWORD[_] * 8 + 38992], y: r14|QWORD) size: QWORD  <||@
  Comment 149 42 r13|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 149 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 157 44 BLACKHOLE [r10|DWORD[_] * 8 + 38992]  <||@
  Comment 157 46 BLACKHOLE [rcx|DWORD[_] * 8 + 38992]  <||@
  Comment 157 48 BLACKHOLE [rbx|DWORD[_] * 8 + 38992]  <||@
  Comment 157 50 BLACKHOLE [r8|DWORD[_] * 8 + 38992]  <||@
  Comment 157 52 MOVB [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 161 54 MOVB [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 165 56 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 173 block B2 null  <||@
  Comment 173 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 68 MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 176 70 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 179 72 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rdx|DWORD) condition: <  <||@
  Comment 183 74 MOV (x: [rsi|QWORD[.] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 187 76 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.04762770410879347 condition: = trueDestination: B2 -> B18 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 196 block B4 null  <||@
  Comment 196 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 84 rcx|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 201 86 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 204 88 r8|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 207 90 CMPBRANCH (x: r8|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 216 block B6 null  <||@
  Comment 216 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 98 CMPCONSTBRANCH r13|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B42 y: 2 size: DWORD inlinedY: null  <||@
  Comment 226 block B8 null  <||@
  Comment 226 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 106 MOV [rax|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 237 108 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 241 110 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<|  <||@
  Comment 250 112 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 254 114 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 260 116 JUMP ~[] destination: B8 -> B9  <||@
  Comment 265 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 265 122 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 124 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 297 126 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 300 128 JUMP ~[] destination: B10 -> B9  <||@
  Comment 300 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 300 118 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 300 120 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 311 block B18 null  <||@
  Comment 311 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 311 202 r10|DWORD[_] = MOV [r9|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 311 [rsi:0, rdi:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 319 204 stack:56|DWORD[_] = MOVE r10|DWORD[_] moveKind: DWORD  <||@
  Comment 324 206 CMPCONSTBRANCH [r10|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B40 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed} state [bci:68]  <||@
  Comment 324 [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 324 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 324 {meta{HotSpotType<Ljava/util/regex/Pattern$Start;, resolved>;compressed}}  <||@
  Comment 342 block B19 null  <||@
  Comment 342 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 342 210 CMPCONSTBRANCH [rdi|DWORD[_] * 8 + 12] trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B39 y: 0 size: DWORD inlinedY: null state [bci:68]  <||@
  Comment 342 [rsi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 342 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 356 block B20 null  <||@
  Comment 356 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 356 214 MOV [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 363 216 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|DWORD[_] * 8 + 16]) size: DWORD  <||@
  Comment 371 218 stack:28|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 375 220 CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.1774881320556503E-6 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 383 block B22 null  <||@
  Comment 383 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 383 232 r13|DWORD[_] = MOVE stack:52|DWORD[_] moveKind: DWORD  <||@
  Comment 388 234 rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 396 236 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:108]  <||@
  Comment 396 [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 396 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 404 238 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 414 240 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0  <||@
  Comment 418 242 rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD  <||@
  Comment 425 244 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 429 246 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 433 248 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 437 250 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 442 252 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 449 254 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 452 256 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 455 258 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 457 260 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 460 262 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 462 264 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 465 266 stack:72|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 470 268 stack:32|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 474 270 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121]  <||@
  Comment 474 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 474 INLINE_INVOKE  <||@
  Comment 476 [stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 484 272 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B31 size: DWORD  <||@
  Comment 492 block B31 null  <||@
  Comment 492 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 374 rdx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 496 378 JUMP ~[] destination: B31 -> B32  <||@
  Comment 496 block B32 null  <||@
  Comment 496 380 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 496 360 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 501 382 rax|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 504 384 CMPCONSTBRANCH [rax|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: DWORD inlinedY: null state [bci:50, 121]  <||@
  Comment 504 [rax:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 504 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 block B34 null  <||@
  Comment 518 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 518 396 MOV (x: [rsi|QWORD[.] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 521 398 MOV (x: [rax|DWORD[_] * 8 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 528 400 rdx|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 531 402 MOV (x: [rax|DWORD[_] * 8 + 20], y: rdx|DWORD) size: DWORD  <||@
  Comment 538 404 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 544 406 JUMP ~[] destination: B34 -> B35  <||@
  Comment 544 block B35 null  <||@
  Comment 544 408 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 544 410 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 2.4456478584700125E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B38 size: DWORD  <||@
  Comment 553 block B38 null  <||@
  Comment 553 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 424 rax|DWORD = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 556 426 MOV (x: [rsi|QWORD[.] + 36], y: rax|DWORD) size: DWORD  <||@
  Comment 559 428 INC [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 562 430 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 565 432 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 574 POLL_RETURN_FAR  <||@
  Comment 588 block B11 null  <||@
  Comment 588 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 588 132 rcx|DWORD = LEA [r13|DWORD - 16] size: DWORD  <||@
  Comment 592 134 JUMP ~[] destination: B11 -> B12  <||@
  Comment 597 block B16 loop 2 depth 1 header:530|LoopBegin  <||@
  Comment 597 188 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 190 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 617 192 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 620 194 JUMP ~[] destination: B16 -> B15  <||@
  Comment 620 block B15 loop 2 depth 1 header:530|LoopBegin  <||@
  Comment 620 184 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 624 186 CMPBRANCH (x: r13|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B18 size: DWORD  <||@
  Comment 635 block B13 loop 1 depth 1 header:510|LoopBegin  <||@
  Comment 635 140 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 640 142 MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 649 144 rbx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 652 146 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 660 148 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 668 150 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 676 152 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 684 154 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 692 156 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 700 158 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 708 160 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 716 162 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 724 164 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 732 166 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 740 168 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 748 170 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 756 172 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 764 174 MOV [rax|QWORD[.] + rbx|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 772 176 r8|DWORD = LEA [r8|DWORD + 16] size: DWORD  <||@
  Comment 776 178 JUMP ~[] destination: B13 -> B12  <||@
  Comment 776 block B12 loop 1 depth 1 header:510|LoopBegin  <||@
  Comment 776 136 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 776 138 CMPBRANCH (x: rcx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.19984729813292823 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: DWORD  <||@
  Comment 790 block B23 null  <||@
  Comment 790 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 790 276 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 795 278 CMPCONSTBRANCH stack:28|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 2147483647 size: DWORD inlinedY: null  <||@
  Comment 809 block B25 null  <||@
  Comment 809 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 294 rdx|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 815 296 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 820 298 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 824 300 r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD  <||@
  Comment 829 302 JUMP ~[] destination: B25 -> B26  <||@
  Comment 834 block B27 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 834 308 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 310 rcx|DWORD[_] = MOV [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 872 312 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:31, 121]  <||@
  Comment 872 [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:72|QWORD[.]  |rsi|QWORD[.]  |rdx|DWORD  |r13|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 872 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 880 314 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 890 316 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 139647623626752 shift: 0  <||@
  Comment 894 318 rbx|QWORD = MOV [r8|QWORD + 496] size: QWORD  <||@
  Comment 901 320 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 905 322 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4105339d encoding: base: 0 shift: 3  <||@
  Comment 909 324 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 912 326 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 915 328 r9|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 918 330 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 921 332 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 924 334 r8|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 927 336 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 932 338 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:44, 121]  <||@
  Comment 932 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 932 INLINE_INVOKE  <||@
  Comment 934 [stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 44, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:48|QWORD[.]  |stack:36|DWORD  |stack:64|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 942 340 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.05578417512358964 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 950 block B28 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 950 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 344 rdx|DWORD = INC stack:36|DWORD size: DWORD  <||@
  Comment 956 346 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 961 348 rbp|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 965 350 r10|DWORD[_] = MOVE stack:56|DWORD[_] moveKind: DWORD  <||@
  Comment 970 352 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 975 354 JUMP ~[] destination: B28 -> B26  <||@
  Comment 975 block B26 loop 3 depth 1 header:123|LoopBegin  <||@
  Comment 975 304 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 975 306 CMPBRANCH (x: rdx|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.99 condition: > trueDestination: B26 -> B30 falseDestination: B26 -> B27 size: DWORD  <||@
  Comment 979 block B30 null  <||@
  Comment 979 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 979 366 MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 983 368 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 989 370 JUMP ~[] destination: B30 -> B35  <||@
  Comment 994 block B29 null  <||@
  Comment 994 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 994 358 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 998 362 JUMP ~[] destination: B29 -> B32  <||@
  Comment 1003 block B36 null  <||@
  Comment 1003 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1003 414 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 1010 416 JUMP ~[] destination: B36 -> B38  <||@
  Comment 1015 block B21 null  <||@
  Comment 1015 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1015 224 MOVB [rsi|QWORD[.] + 48] y: 1 size: BYTE  <||@
  Comment 1019 226 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1025 228 JUMP ~[] destination: B21 -> B35  <||@
  Comment 1030 block B1 null  <||@
  Comment 1030 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 60 MOV [r15|QWORD + 1156] y: -126995 size: DWORD  <||@
  Comment 1041 62 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1052 64 DEOPT info [bci:10]  <||@
  Comment 1052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1057 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1065 block B39 null  <||@
  Comment 1065 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1065 436 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1072 438 r10|DWORD = MOVE input: int[-128275|0xfffffffffffe0aed]  <||@
  Comment 1078 442 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1078 block B41 null  <||@
  Comment 1078 454 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1078 450 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1082 456 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1089 458 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1096 460 DEOPT info [bci:68]  <||@
  Comment 1096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1101 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1               |2 
     locals:  |rsi|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 1109 block B24 null  <||@
  Comment 1109 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1109 282 r11|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 284 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 286 MOV [r15|QWORD + 1156] y: -110228 size: DWORD  <||@
  Comment 1130 288 MOV [r15|QWORD + 1168] y: 12820 size: QWORD  <||@
  Comment 1141 290 DEOPT info [bci:47, 121]  <||@
  Comment 1141 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1146 [rsi:0, r11:0, r13:0]at java.util.regex.Pattern$Start.match(Pattern.java:3787) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2               |3             |4                          
     locals:  |r11|QWORD[.]  |rsi|QWORD[.]  |stack:32|DWORD  |r13|QWORD[.]  |int[2147483647|0x7fffffff] 
     stack:   |int[0|0x0]    |              |                |              |                           
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1154 block B42 null  <||@
  Comment 1154 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1154 464 stack:32|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1158 466 MOV [r15|QWORD + 1156] y: -68123 size: DWORD  <||@
  Comment 1169 468 MOV [r15|QWORD + 1168] y: 13464 size: QWORD  <||@
  Comment 1180 470 DEOPT info [bci:44]  <||@
  Comment 1180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1185 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1               |2 
     locals:  |rsi|QWORD[.]  |stack:32|DWORD  |-   <||@
  Comment 1193 block B33 null  <||@
  Comment 1193 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1193 388 MOV [r15|QWORD + 1156] y: -95771 size: DWORD  <||@
  Comment 1204 390 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1215 392 DEOPT info [bci:50, 121]  <||@
  Comment 1215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1220 [rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1228 block B40 null  <||@
  Comment 1228 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1228 446 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1235 448 r10|DWORD = MOVE input: int[-77107|0xfffffffffffed2cd]  <||@
  Comment 1241 452 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1251 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1276 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1304 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1309 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1344 [rsi:0, rdi:0, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1374 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1379 [rsi:0, rdi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1414 [rsi:0, r10:0, stack:24, stack:28, stack:32]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1444 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1449 [rcx:0, rsi:0, r10:0, r13:0, stack:24, stack:32]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 108, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 1479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1484 [rax:0, rsi:0]at java.util.regex.Pattern$Start.match(Pattern.java:3788) [bci: 50, duringCall: false, rethrow: false]
              |0  |1             |2          |3  |4 
     locals:  |-  |rsi|QWORD[.]  |rdx|DWORD  |-  |- 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1519 [rcx:0, rsi:0, r13:0, stack:8, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Start.match(Pattern.java:3786) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:72|QWORD[.]  |rsi|QWORD[.]  |rdx|DWORD  |r13|QWORD[.]  |stack:28|DWORD 
  at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1527 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1527 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1533 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1533 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
