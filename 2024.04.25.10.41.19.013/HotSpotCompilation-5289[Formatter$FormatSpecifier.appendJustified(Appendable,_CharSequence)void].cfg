begin_compilation
  name " HotSpotCompilation-5289[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  method "HotSpotCompilation-5289[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  date 1714038132091
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1164 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1191 
=== Usages ===
j1166 j1175 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid a379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 v1245 v1246 v1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1191 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: a1192 
=== Usages ===
v1240 
=== Predecessor ===
j1164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: a1192  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1192 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: a1193 
=== Usages ===
v1241 
=== Predecessor ===
a1191 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: a1193  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1193 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: a1194 
=== Usages ===
v1242 
=== Predecessor ===
a1192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: a1194  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
v1243 
=== Predecessor ===
a1193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1191 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1192 
=== Succesors ===
=== Usages ===
v78 j1183 v1187 j1185 v1189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1192  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1193 
=== Succesors ===
=== Usages ===
v78 v1190 v1188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1193  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1194 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1240 v1241 v1242 v1243 
=== Succesors ===
next: i1195 
=== Usages ===
=== Predecessor ===
a1194 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1240 v1241 v1242 v1243 #next: i1195  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1248 v1263 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1195 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.width
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 ?24 i25 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1195 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1195 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?262 ?357 ?280 ?24 ?117 ?120 ?35 v1266 v573 ?372 v1262 v1251 v1257 v576 ?197 ?337 ?141 v548 ?223 v1249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1217 i1225 i1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 v1162 v1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v511 v447 v304 v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i18 v19 v179 v244 j314 i322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1204 i1208 i1214 i1223 i1232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1202 a1209 a1219 a1230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1199 v1216 v1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.Appendable
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1265 ?786 ?24 ?795 ?120 ?35 v573 j1087 ?369 ?372 ?330 ?141 ?328 ?790 v1252 ?197 v475 v1253 ?327 ?280 ?791 ?223 v1261 ?788 ?788 v476 v1254 v542 ?789 ?790 ?262 j965 v550 ?337 ?785 ?785 ?341 ?117 ?792 v576 ?357 ?794 v569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1196 v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3194
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v802 v1196 v1228 i1198 v1199 i1231 i1203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9429707096929666
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i1195 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-102155|0xfffffffffffe70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v138 
=== Usages ===
v889 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1265 lastLocationAccess: - #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1196 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@cfc875
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.9857993615313292, 0.014200638468670852, 0.0]
stamp: void
=== Inputs ===
value: v889 
=== Succesors ===
successors: v126 v131 v134 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v889 #successors: v126 v131 v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1197 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1197 a1211 v481 v547 j918 j1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1197 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: i1198 
=== Usages ===
a487 v1258 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1197 
=== Succesors ===
=== Usages ===
i1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1198 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-165131|0xfffffffffffd7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v1199 
=== Usages ===
i177 
=== Predecessor ===
a1197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1258 lastLocationAccess: - #next: v1199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-182035|0xfffffffffffd38ed]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: i1200 
=== Usages ===
v1239 
=== Predecessor ===
i1198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1266 lastLocationAccess: - #next: i1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1200 i1207 i1213 i1205 i1218 i1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1200 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1201 
=== Usages ===
i494 
=== Predecessor ===
v1199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1201 i1206 i1215 v474 v532 i1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1201 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
i227 i160 
=== Predecessor ===
i1200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1200 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1200  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1198 
y: i494 
=== Succesors ===
=== Usages ===
i178 i243 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1198 y: i494  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1199 
y: v1238 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1199 y: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid a487 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1197 
=== Succesors ===
=== Usages ===
?790 ?788 v545 a375 v479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 v1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j980 j1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1003 v1277 j1122 v1288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1002 v1121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j1007 j1069 j1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 v1058 v971 v991 v865 v931 j845 j845 j845 j845 v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v1010 v1017 v1077 v1127 v1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
values: a2 a3 
=== Succesors ===
=== Usages ===
?330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334 values: a2 a3  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?141 
values: a2 
=== Succesors ===
=== Usages ===
?222 ?329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?141 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.7064104255746584
stamp: void
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
i1201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1202 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1202 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1203 
=== Usages ===
v1250 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1202 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-103435|0xfffffffffffe6bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1250 
lastLocationAccess: - 
=== Succesors ===
next: i1204 
=== Usages ===
i237 
=== Predecessor ===
a1202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1250 lastLocationAccess: - #next: i1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
i411 
=== Predecessor ===
i1203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1203 
y: i411 
=== Succesors ===
=== Usages ===
i227 i230 ?327 ?262 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1203 y: i411  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i237 
y: i1201 
=== Succesors ===
=== Usages ===
i243 v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i237 y: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i227 
y: i177 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i227 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i16 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i16  <|@  <|@
tid ?329 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
=== Succesors ===
=== Usages ===
?223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?329 
values: a2 a3 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?329 values: a2 a3  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?223 
values: a2 
=== Succesors ===
=== Usages ===
?327 ?262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?223 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9218183045857158
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v246 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i249 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i249  <|@  <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i227 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i227  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 587
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a2 a3 i237 
=== Succesors ===
=== Usages ===
?790 ?791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a2 a3 i237  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a2 a487 a2 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a2 a487 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v476 
stateDuring: ?790 
=== Succesors ===
next: i1205 
=== Usages ===
i252 
=== Predecessor ===
v245 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v476 stateDuring: ?790 #next: i1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1205 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a254 
=== Usages ===
i478 
=== Predecessor ===
i249 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a254  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1205 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1205  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i249 
y: i478 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i249 y: i478  <|@  <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a487 i252 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a487 i252  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a2 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v479 
stateDuring: ?791 
=== Succesors ===
next: v961 
=== Usages ===
a964 a480 
=== Predecessor ===
i1205 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v479 stateDuring: ?791 #next: v961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j917 
=== Usages ===
=== Predecessor ===
a254 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j917 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j918 
=== Usages ===
v1269 v1271 v1272 
=== Predecessor ===
v961 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1253 
=== Succesors ===
next: i947 
=== Usages ===
v1270 
=== Predecessor ===
j917 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1253 #next: i947  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v922 
=== Usages ===
v955 
=== Predecessor ===
j918 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i954 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i947 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
i947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v921 #falseSuccessor: v920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a948  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j918 
index: - 
=== Succesors ===
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: v929 
=== Usages ===
a949 v956 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a948  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v924 
=== Usages ===
=== Predecessor ===
a948 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v928 #falseSuccessor: v924  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j950 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
j950 v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
v931 j946 v1273 
=== Predecessor ===
v924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j950 
y: j799 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j950 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
j936 v939 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a948  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
j950 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v933 #falseSuccessor: v932  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a949 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a949 #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j951 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
=== Succesors ===
next: j936 
=== Usages ===
v1273 
=== Predecessor ===
v932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - #next: j936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a949 
=== Succesors ===
next: v952 
=== Usages ===
v952 
=== Predecessor ===
j951 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a949 #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: j950 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
value: j936 
stateAfter: - 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
j936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - value: j936 stateAfter: - #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j950 
y: j945 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j950 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
value: j946 
stateAfter: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - value: j946 stateAfter: - #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v925 v927 v938 v940 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v925 v927 v938 v940 #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
value: a480 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - value: a480 stateAfter: - #next: v1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j963 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a964 
=== Usages ===
v1274 v1275 
=== Predecessor ===
v1023 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a254 
=== Succesors ===
next: j965 
=== Usages ===
j966 
=== Predecessor ===
j963 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a254 #next: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j966 
=== Usages ===
j967 j980 
=== Predecessor ===
a964 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a964 
=== Succesors ===
next: v970 
=== Usages ===
j967 v971 
=== Predecessor ===
j965 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a964 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j965 
y: j966 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j965 y: j966  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j967 
y: j1001 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j967 y: j1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1002 
=== Succesors ===
trueSuccessor: v969 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1002 #trueSuccessor: v969 #falseSuccessor: v968  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j966 
y: j799 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j966 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v976 #falseSuccessor: v972  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1008 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j965 
y: i979 
=== Succesors ===
=== Usages ===
j1003 v1277 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j965 y: i979  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j980 
index: j978 
=== Succesors ===
=== Usages ===
i1008 i1009 v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j980 index: j978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
v1016 
=== Predecessor ===
v972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1008 
y: i1015 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1008 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1016 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
i1008 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1016 #trueSuccessor: v983 #falseSuccessor: v981  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1009 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: v989 
=== Usages ===
v1017 
=== Predecessor ===
v985 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i954 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1009 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1009 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v988 #falseSuccessor: v986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
value: i954 
stateAfter: - 
=== Succesors ===
next: j1011 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - value: i954 stateAfter: - #next: j1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
j1011 v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v994 
=== Usages ===
v991 j1007 v1276 
=== Predecessor ===
v1010 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j799 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1011 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j980 
y: j978 
=== Succesors ===
=== Usages ===
v998 v1013 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j980 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v991 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
j1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v991 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1003 
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1003 #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1012 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
j1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1012 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: v1013 
=== Usages ===
v1276 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1012 
index: j1011 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1012 index: j1011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
value: j1003 
stateAfter: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
j1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - value: j1003 stateAfter: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1011 
y: j945 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1011 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
value: j1007 
stateAfter: - 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - value: j1007 stateAfter: - #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v1014 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 v1150 v1151 v1152 v1153 v1154 
=== Succesors ===
next: i1206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 v1150 v1151 v1152 v1153 v1154 #next: i1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1206 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: i1207 
=== Usages ===
?280 i288 j1237 v304 i309 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 7]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1208 
=== Usages ===
v577 
=== Predecessor ===
i1206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 11]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v577 
=== Predecessor ===
i1207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1207 
y: i1208 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1207 y: i1208  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a2 - i237 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a2 - i237  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
values: a2 i1206 a3 
=== Succesors ===
=== Usages ===
?793 ?276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327 values: a2 i1206 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9837491833349263
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v268 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?793 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v475 
stateDuring: ?793 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v475 stateDuring: ?793 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v273 v275 
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v273 v275 #next: a1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1210 
=== Usages ===
a437 v1255 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1210  <|@  <|@
tid ?276 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v865 i1210 i1212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1209 
=== Succesors ===
=== Usages ===
i1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1210 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-113419|0xfffffffffffe44f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: a1211 
=== Usages ===
i455 j911 v316 i309 
=== Predecessor ===
a1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v1255 lastLocationAccess: - #next: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: i1212 
=== Usages ===
a431 v1256 
=== Predecessor ===
i1210 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-165387|0xfffffffffffd79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: i1213 
=== Usages ===
i322 i455 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v1256 lastLocationAccess: - #next: i1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1214 
=== Usages ===
i433 v579 
=== Predecessor ===
i1212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
v579 
=== Predecessor ===
i1213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1213 
y: i1214 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1213 y: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid a431 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
j915 j906 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid a437 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1209 
=== Succesors ===
=== Usages ===
j902 j913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9849394295955807
stamp: void
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v285 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1213 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1206 
y: i433 
=== Succesors ===
=== Usages ===
v1268 v447 v456 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1206 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i20 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v729 #falseSuccessor: v730  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -186393
stableDimension: 0
stamp: i32 [-186393]
stampKind: i32
value: int[-186393|0xfffffffffffd27e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1212 
y: i1210 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1212 y: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i455 
y: i288 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i455 y: i288  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -188441
stableDimension: 0
stamp: i32 [-188441]
stampKind: i32
value: int[-188441|0xfffffffffffd1fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a437 
=== Succesors ===
next: j906 
=== Usages ===
v1267 
=== Predecessor ===
v738 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a437 #next: j906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a431 
=== Succesors ===
next: v912 
=== Usages ===
v1268 
=== Predecessor ===
j902 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a431 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: i288 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1210 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1267 v1268 j911 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1267 v1268 j911 #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1206 
y: i20 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1206 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -189465
stableDimension: 0
stamp: i32 [-189465]
stampKind: i32
value: int[-189465|0xfffffffffffd1be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1212 
y: i16 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1212 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1206 
y: i1210 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1206 y: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i309 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i322 y: i309  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v745 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -190489
stableDimension: 0
stamp: i32 [-190489]
stampKind: i32
value: int[-190489|0xfffffffffffd17e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-190489 - -186393] bits:1...10100xxxx1111100111
valueDescription: i32
=== Inputs ===
merge: v860 
values: i869 i871 i875 i877 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v860 values: i869 i871 i875 i877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v868 v870 v874 v876 
=== Succesors ===
next: v865 
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v868 v870 v874 v876 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?276 
actionAndReason: i863 
speculation: j799 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?276 actionAndReason: i863 speculation: j799  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a437 
=== Succesors ===
next: j915 
=== Usages ===
j914 
=== Predecessor ===
v746 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a437 #next: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a431 
=== Succesors ===
next: v316 
=== Usages ===
j916 
=== Predecessor ===
j913 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a431 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j323 j914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j913 
y: j69 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j913 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j1237 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1206 
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j1237 
y: i16 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j1237 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j314 
y: j69 
=== Succesors ===
=== Usages ===
j916 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j314 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j323 
y: j915 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j323 y: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j914 
dst: j916 
len: i1210 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
j915 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j914 dst: j916 len: i1210 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
i230 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i237 
y: i1215 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i237 y: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: i230 
stateAfter: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: i230 stateAfter: - #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1216 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v670 
=== Usages ===
v1156 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1216 
y: v1155 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1216 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1156 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1156 #trueSuccessor: v667 #falseSuccessor: v669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1217 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
i160 i165 ?197 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v182  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?222 
values: a2 a3 i1217 
=== Succesors ===
=== Usages ===
?196 ?788 ?789 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?222 values: a2 a3 i1217  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1201 
y: i1217 
=== Succesors ===
=== Usages ===
i178 v542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1201 y: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i160 
y: i177 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i160 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i16 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9218183045857158
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i184 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i184  <|@  <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i160 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i160  <|@  <|@
tid ?788 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
values: a2 a487 a2 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a2 a487 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v542 
stateDuring: ?788 
=== Succesors ===
next: i1218 
=== Usages ===
i187 
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v542 stateDuring: ?788 #next: i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a189 
=== Usages ===
i544 
=== Predecessor ===
i184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1218 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1218  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i184 
y: i544 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i184 y: i544  <|@  <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a487 i187 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a487 i187  <|@  <|@
tid ?789 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
values: a2 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v545 
stateDuring: ?789 
=== Succesors ===
next: v1083 
=== Usages ===
a375 a546 a375 a375 a1086 a375 a375 a375 
=== Predecessor ===
i1218 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v545 stateDuring: ?789 #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1044 
=== Usages ===
=== Predecessor ===
a189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1044 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1045 
=== Usages ===
v1280 v1282 v1283 
=== Predecessor ===
v1083 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1253 
=== Succesors ===
next: i1070 
=== Usages ===
v1281 
=== Predecessor ===
j1044 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1253 #next: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: v1049 
=== Usages ===
v1077 
=== Predecessor ===
j1045 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1070 
y: i954 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1070 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1077 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1047 
=== Usages ===
=== Predecessor ===
i1070 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1077 #trueSuccessor: v1048 #falseSuccessor: v1047  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1052 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1052  <|@  <|@
f <@*|@fixed>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
a1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v1056 
=== Usages ===
a1072 v1078 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1051 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1055 #falseSuccessor: v1051  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1073 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
j1073 v1076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1073 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v1061 
=== Usages ===
v1058 j1069 v1284 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1073 
y: j799 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1073 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid a1072 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
j1063 v1066 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1059 
=== Usages ===
=== Predecessor ===
j1073 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1060 #falseSuccessor: v1059  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1072 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1072 #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1074 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
j1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1074 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: j1063 
=== Usages ===
v1284 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: j1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1063 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1072 
=== Succesors ===
next: v1075 
=== Usages ===
v1075 
=== Predecessor ===
j1074 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1072 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1073 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
value: j1063 
stateAfter: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
j1063 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - value: j1063 stateAfter: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1073 
y: j945 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1073 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: j1069 
stateAfter: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: j1069 stateAfter: - #next: v1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1076 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1052 v1054 v1065 v1067 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1052 v1054 v1065 v1067 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
value: a546 
stateAfter: - 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - value: a546 stateAfter: - #next: v1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1085 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1085 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1086 
=== Usages ===
v1285 v1286 
=== Predecessor ===
v1139 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a189 
=== Succesors ===
next: j1087 
=== Usages ===
j1088 
=== Predecessor ===
j1085 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a189 #next: j1087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j1088 
=== Usages ===
j1089 j1100 
=== Predecessor ===
a1086 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1086 
=== Succesors ===
next: v1092 
=== Usages ===
j1089 v1093 
=== Predecessor ===
j1087 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1086 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1087 
y: j1088 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1087 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j1089 
y: j1001 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1089 y: j1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1121 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1090 
=== Usages ===
=== Predecessor ===
j1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1121 #trueSuccessor: v1091 #falseSuccessor: v1090  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1088 
y: j799 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1088 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1093 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1094 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1093 #trueSuccessor: v1098 #falseSuccessor: v1094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1125 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1125  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1087 
y: i979 
=== Succesors ===
=== Usages ===
j1122 v1288 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1087 y: i979  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1100 
index: j978 
=== Succesors ===
=== Usages ===
i1125 i1126 v1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1100 index: j978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v1104 
=== Usages ===
v1132 
=== Predecessor ===
v1094 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1125 
y: i1015 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1125 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1132 
=== Succesors ===
trueSuccessor: v1103 
falseSuccessor: v1101 
=== Usages ===
=== Predecessor ===
i1125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1132 #trueSuccessor: v1103 #falseSuccessor: v1101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1126 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
v1133 
=== Predecessor ===
v1105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i954 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1126 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1133 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1106 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1133 #trueSuccessor: v1108 #falseSuccessor: v1106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
value: i954 
stateAfter: - 
=== Succesors ===
next: j1128 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - value: i954 stateAfter: - #next: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1085 
index: - 
=== Succesors ===
=== Usages ===
j1128 v1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1128 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v1114 
=== Usages ===
v1111 j1124 v1287 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1128 
y: j799 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1128 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1100 
y: j978 
=== Succesors ===
=== Usages ===
v1118 v1130 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1100 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
j1128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v1113 #falseSuccessor: v1112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1122 
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1122 #next: v1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1129 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1085 
index: - 
=== Succesors ===
=== Usages ===
j1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: v1130 
=== Usages ===
v1287 
=== Predecessor ===
v1112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1129 
index: j1128 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1129 index: j1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
value: j1122 
stateAfter: - 
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
j1129 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - value: j1122 stateAfter: - #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid j1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1128 
y: j945 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1128 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j1124 
stateAfter: - 
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j1124 stateAfter: - #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v194 
values: a487 a189 a189 a189 a189 a189 a189 
=== Succesors ===
=== Usages ===
v1260 j1037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v194 values: a487 a189 a189 a189 a189 a189 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 v1157 v1158 v1159 v1160 v1161 
=== Succesors ===
next: a1219 
=== Usages ===
a375 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 v1157 v1158 v1159 v1160 v1161 #next: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1219 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1220 
=== Usages ===
a503 v1259 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1220  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
=== Succesors ===
=== Usages ===
v846 i1220 i1221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1219 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1220 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-129291|0xfffffffffffe06f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?196 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: i1221 
=== Usages ===
v586 
=== Predecessor ===
a1219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?196 guard: - address: v1259 lastLocationAccess: - #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a375 
index: - 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-129547|0xfffffffffffe05f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?196 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: i1222 
=== Usages ===
i517 
=== Predecessor ===
i1220 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?196 guard: - address: v1260 lastLocationAccess: - #next: i1222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1222 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1223 
=== Usages ===
i496 v582 
=== Predecessor ===
i1221 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1223 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
v582 
=== Predecessor ===
i1222 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1222 
y: i1223 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1222 y: i1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i1223 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1224 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1224 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v767 
=== Usages ===
i206 i165 
=== Predecessor ===
v761 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1222 
=== Succesors ===
=== Usages ===
i208 i206 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1224 
y: i496 
=== Succesors ===
=== Usages ===
v1279 v509 v518 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1224 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i20 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
i1224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -195609
stableDimension: 0
stamp: i32 [-195609]
stampKind: i32
value: int[-195609|0xfffffffffffd03e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
i208 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1225 
y: i496 
=== Succesors ===
=== Usages ===
j1042 v511 v586 i517 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1225 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i20 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i208 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid i855 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -196633
stableDimension: 0
stamp: i32 [-196633]
stampKind: i32
value: int[-196633|0xfffffffffffcffe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1220 
y: i208 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1220 y: i208  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v773 #falseSuccessor: v774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -197657
stableDimension: 0
stamp: i32 [-197657]
stampKind: i32
value: int[-197657|0xfffffffffffcfbe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1221 
y: i208 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1221 y: i208  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i206 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v777 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -198681
stableDimension: 0
stamp: i32 [-198681]
stampKind: i32
value: int[-198681|0xfffffffffffcf7e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1035  <|@  <|@
f <@~|@floating>@ <|@
tid a503 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1219 
=== Succesors ===
=== Usages ===
j1035 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a503 
=== Succesors ===
next: j1037 
=== Usages ===
v1278 
=== Predecessor ===
v778 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a503 #next: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a375 
=== Succesors ===
next: v1043 
=== Usages ===
v1279 
=== Predecessor ===
j1035 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a375 #next: v1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1037 
index: i206 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1037 index: i206  <|@  <|@
f <@~|@floating>@ <|@
tid j1042 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i208 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1278 v1279 j1042 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
j1037 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1278 v1279 j1042 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1217 
y: i1224 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1217 y: i1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: i165 stateAfter: - #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1226 v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: i1227 
=== Usages ===
i536 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1227 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
i539 
=== Predecessor ===
i1226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1226 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1227 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i536 
y: i539 
=== Succesors ===
=== Usages ===
i540 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i536 y: i539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
value: i540 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
i1227 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - value: i540 stateAfter: - #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -194579
stableDimension: 0
stamp: i32 [-194579]
stampKind: i32
value: int[-194579|0xfffffffffffd07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-198681 - -194579] bits:1...10xxxxxxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v841 
values: i850 i852 i855 i857 i859 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v841 values: i850 i852 i855 i857 i859  <|@  <|@
f <@~|@floating>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v841 
values: j799 j853 j799 j799 j799 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v841 values: j799 j853 j799 j799 j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v851 v854 v856 v858 
=== Succesors ===
next: v846 
=== Usages ===
i844 j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v851 v854 v856 v858 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?196 
actionAndReason: i844 
speculation: j845 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?196 actionAndReason: i844 speculation: j845  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -123443
stableDimension: 0
stamp: i32 [-123443]
stampKind: i32
value: int[-123443|0xfffffffffffe1dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v669 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a3 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?347 
values: a2 a3 
=== Succesors ===
=== Usages ===
?785 ?341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?347 values: a2 a3  <|@  <|@
tid ?785 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a2 a2 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a2 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v548 
stateDuring: ?785 
=== Succesors ===
next: a340 
=== Usages ===
v549 
=== Predecessor ===
v131 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v548 stateDuring: ?785 #next: a340  <|@  <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a336 
=== Succesors ===
=== Usages ===
a340 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a336  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a2 
=== Succesors ===
=== Usages ===
?786 ?787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a2  <|@  <|@
tid ?786 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?341 
values: a2 
=== Succesors ===
=== Usages ===
a340 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?341 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a340 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v549 
stateDuring: ?786 
=== Succesors ===
next: v344 
=== Usages ===
v550 
=== Predecessor ===
a336 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v549 stateDuring: ?786 #next: v344  <|@  <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a2 a340 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a340  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?341 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v550 
stateDuring: ?787 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a340 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v550 stateDuring: ?787 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v132 v348 
=== Succesors ===
next: j1165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v132 v348 #next: j1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1183 
=== Usages ===
j1166 
=== Predecessor ===
v121 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1183 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
j1168 j1172 
=== Predecessor ===
j1165 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1165 
y: j1164 
=== Succesors ===
=== Usages ===
j1168 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1165 y: j1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1166 
y: j1183 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1166 y: j1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
value: j1168 
stateAfter: - 
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
j1183 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - value: j1168 stateAfter: - #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1183 
y: i1171 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1183 y: i1171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j1172 
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j1172 stateAfter: - #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -34099
stableDimension: 0
stamp: i32 [-34099]
stampKind: i32
value: int[-34099|0xffffffffffff7acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-141579|0xfffffffffffdd6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
v1142 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1266 lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1228 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@616678ee
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.8808902364154574, 0.11910976358454262, 0.0]
stamp: void
=== Inputs ===
value: v1142 
=== Succesors ===
successors: v84 v89 v92 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v1142 #successors: v84 v89 v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i1229 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1229 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
i80 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
i1229 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1230 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1230 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1231 
=== Usages ===
v1264 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1230 
=== Succesors ===
=== Usages ===
i1231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1231 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-143371|0xfffffffffffdcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: i1232 
=== Usages ===
i104 
=== Predecessor ===
a1230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1264 lastLocationAccess: - #next: i1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1232 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
i566 
=== Predecessor ===
i1231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1232 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1232  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1231 
y: i566 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1231 y: i566  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
i1232 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v79 
values: i1229 i104 
=== Succesors ===
=== Usages ===
?24 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v79 values: i1229 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v90 
=== Succesors ===
next: i1233 
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v90 #next: i1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1233 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
v19 i18 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i1233 
y: i16 
=== Succesors ===
=== Usages ===
?24 ?120 ?35 ?372 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1233 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: void
=== Inputs ===
x: i1233 
y: i16 
=== Succesors ===
=== Usages ===
v28 v55 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1233 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stamp: i32
=== Inputs ===
x: i1195 
y: i80 
=== Succesors ===
=== Usages ===
?120 ?35 ?372 v41 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1195 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3200) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.8636164067805913
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
i1233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: isub
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
sourceFile: Formatter.java
sourceLine: 3199
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1195 i80 - a2 a3 i18 
=== Succesors ===
=== Usages ===
v1289 v1234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1195 i80 - a2 a3 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-146955|0xfffffffffffdc1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v694 
=== Usages ===
v1162 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v1265 lastLocationAccess: - #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1234 
y: v1155 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1234 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1162 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1162 #trueSuccessor: v691 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a116 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a116  <|@  <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 45
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3201
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
?117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a2 a3 
=== Succesors ===
=== Usages ===
?792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a2 a3  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?117 
values: a2 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?117 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a116 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v576 
stateDuring: ?792 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v576 stateDuring: ?792 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 #next: v1235  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 51
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3203
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
v1290 v1235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-145163|0xfffffffffffdc8f5]
deoptSpeculation: long[9624|0x2598]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
v1163 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1265 lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1235 
y: v1155 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1235 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 62]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
?369 v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(char)>
=== Inputs ===
arguments: a2 i47 
=== Succesors ===
=== Usages ===
a368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i20 i51 
=== Succesors ===
=== Usages ===
i51 v41 ?372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i20 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v37 
=== Succesors ===
next: v46 
=== Usages ===
i39 v43 v52 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v37 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i25 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
profileData: PROFILED designatedSuccessorProbability: 0.6795581021385948
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v45 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: a368 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a368  <|@  <|@
tid ?372 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3204
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 i39 
=== Succesors ===
=== Usages ===
?369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25 i39  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?372 
values: a2 i47 
=== Succesors ===
=== Usages ===
?794 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?372 values: a2 i47  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?369 
values: a2 
=== Succesors ===
=== Usages ===
a368 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?369 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a368 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?794 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?794 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 70]
stamp: i32
=== Inputs ===
x: i39 
y: i16 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a368 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v38 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v38 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 77]
profileData: PROFILED designatedSuccessorProbability: 0.8636164067805912
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: a356 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a356  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a356 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 82
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3207
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?360 
values: a2 a3 
=== Succesors ===
=== Usages ===
?795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?360 values: a2 a3  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?357 
values: a2 
=== Succesors ===
=== Usages ===
a356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?357 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a356 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?795 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?795 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
a356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1185 
=== Usages ===
j1175 
=== Predecessor ===
v60 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1185 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v1189 
=== Usages ===
j1177 j1181 
=== Predecessor ===
j1174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1174 
y: j1164 
=== Succesors ===
=== Usages ===
j1177 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1174 y: j1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1175 
y: j1185 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1175 y: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
value: j1177 
stateAfter: - 
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
j1185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - value: j1177 stateAfter: - #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1185 
y: i1180 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1185 y: i1180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j1181 
stateAfter: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j1181 stateAfter: - #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 568
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002898[index: 324, len: 24, hash: 0x395026b3]: GuardMovement@2[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 54, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 575
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x1485aedc]: FallbackDeopt@8[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 45, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -23347
stableDimension: 0
stamp: i32 [-23347]
stampKind: i32
value: int[-23347|0xffffffffffffa4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-123443 - -23347] bits:1...1xxxxxxxxx11001101
valueDescription: i32
=== Inputs ===
merge: v796 
values: i808 i816 i820 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v796 values: i808 i816 i820  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [20 - 3220] bits:0...0xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v796 
values: j809 j396 j821 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v796 values: j809 j396 j821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v807 v815 v819 
=== Succesors ===
next: v802 
=== Usages ===
i800 j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v807 v815 v819 #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i800 
speculation: j801 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i800 speculation: j801  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j1164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1164 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1191 
=== Usages ===
j1166 j1175 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid a379 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 v1245 v1246 v1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v6|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1191 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: a1192 
=== Usages ===
v1240 
=== Predecessor ===
j1164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: a1192  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [v6|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1192 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: a1193 
=== Usages ===
v1241 
=== Predecessor ===
a1191 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: a1193  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [v6|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1193 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: a1194 
=== Usages ===
v1242 
=== Predecessor ===
a1192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: a1194  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v6|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
a1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
v1243 
=== Predecessor ===
a1193 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [v7|DWORD[_] * 8 + 42328] <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1191 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [v8|DWORD[_] * 8 + 42328] <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1192 
=== Succesors ===
=== Usages ===
v78 j1183 v1187 j1185 v1189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1192  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v9|DWORD[_] * 8 + 42328] <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1193 
=== Succesors ===
=== Usages ===
v78 v1190 v1188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1193  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [v10|DWORD[_] * 8 + 42328] <|@
d <@d|@=== Debug Properties ===
displacement: 42328
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1194 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v1240 v1241 v1242 v1243 
=== Succesors ===
next: i1195 
=== Usages ===
=== Predecessor ===
a1194 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v1240 v1241 v1242 v1243 #next: i1195  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1248 v1263 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1195 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.width
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 ?24 i25 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1195 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1195 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?262 ?357 ?280 ?24 ?117 ?120 ?35 v1266 v573 ?372 v1262 v1251 v1257 v576 ?197 ?337 ?141 v548 ?223 v1249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1217 i1225 i1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 v1162 v1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v511 v447 v304 v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i18 v19 v179 v244 j314 i322 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1204 i1208 i1214 i1223 i1232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1202 a1209 a1219 a1230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1199 v1216 v1228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.Appendable
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1265 ?786 ?24 ?795 ?120 ?35 v573 j1087 ?369 ?372 ?330 ?141 ?328 ?790 v1252 ?197 v475 v1253 ?327 ?280 ?791 ?223 v1261 ?788 ?788 v476 v1254 v542 ?789 ?790 ?262 j965 v550 ?337 ?785 ?785 ?341 ?117 ?792 v576 ?357 ?794 v569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1196 v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3194
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v802 v1196 v1228 i1198 v1199 i1231 i1203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9429707096929666
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i1195 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-102155|0xfffffffffffe70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v138 
=== Usages ===
v889 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1265 lastLocationAccess: - #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1196 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@cfc875
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.9857993615313292, 0.014200638468670852, 0.0]
stamp: void
=== Inputs ===
value: v889 
=== Succesors ===
successors: v126 v131 v134 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v889 #successors: v126 v131 v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1197 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1197 a1211 v481 v547 j918 j1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1197 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: i1198 
=== Usages ===
a487 v1258 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: i1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v15|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1197 
=== Succesors ===
=== Usages ===
i1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1198 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-165131|0xfffffffffffd7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v1199 
=== Usages ===
i177 
=== Predecessor ===
a1197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1258 lastLocationAccess: - #next: v1199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-182035|0xfffffffffffd38ed]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: i1200 
=== Usages ===
v1239 
=== Predecessor ===
i1198 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1266 lastLocationAccess: - #next: i1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1200 i1207 i1213 i1205 i1218 i1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1200 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1201 
=== Usages ===
i494 
=== Predecessor ===
v1199 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1201 i1206 i1215 v474 v532 i1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1201 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v149 
=== Usages ===
i227 i160 
=== Predecessor ===
i1200 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1200 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1200  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1198 
y: i494 
=== Succesors ===
=== Usages ===
i178 i243 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1198 y: i494  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1199 
y: v1238 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1199 y: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid a487 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1197 
=== Succesors ===
=== Usages ===
?790 ?788 v545 a375 v479 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1197  <|@  <|@
f <@~|@floating>@ <|@
tid i1015 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 v1132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j980 j1100 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1003 v1277 j1122 v1288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1001 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1002 v1121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j945 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j946 j1007 j1069 j1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1093 v1058 v971 v991 v865 v931 j845 j845 j845 j845 v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i954 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v955 v1010 v1017 v1077 v1127 v1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
values: a2 a3 
=== Succesors ===
=== Usages ===
?330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334 values: a2 a3  <|@  <|@
tid ?330 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?141 
values: a2 
=== Succesors ===
=== Usages ===
?222 ?329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?141 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.7064104255746584
stamp: void
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
i1201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1202 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1202 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1203 
=== Usages ===
v1250 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v23|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1202 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-103435|0xfffffffffffe6bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1250 
lastLocationAccess: - 
=== Succesors ===
next: i1204 
=== Usages ===
i237 
=== Predecessor ===
a1202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1250 lastLocationAccess: - #next: i1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
i411 
=== Predecessor ===
i1203 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1203 
y: i411 
=== Succesors ===
=== Usages ===
i227 i230 ?327 ?262 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1203 y: i411  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i237 
y: i1201 
=== Succesors ===
=== Usages ===
i243 v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i237 y: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i227 
y: i177 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i227 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i16 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i16  <|@  <|@
tid ?329 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
=== Succesors ===
=== Usages ===
?223 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?329 
values: a2 a3 
=== Succesors ===
=== Usages ===
?328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?329 values: a2 a3  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?223 
values: a2 
=== Succesors ===
=== Usages ===
?327 ?262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?223 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9218183045857158
stamp: void
=== Inputs ===
condition: v244 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v244 #trueSuccessor: v246 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i249 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i249  <|@  <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i227 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i227  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 587
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a2 a3 i237 
=== Succesors ===
=== Usages ===
?790 ?791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a2 a3 i237  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a2 a487 a2 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a2 a487 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v476 
stateDuring: ?790 
=== Succesors ===
next: i1205 
=== Usages ===
i252 
=== Predecessor ===
v245 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v476 stateDuring: ?790 #next: i1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1205 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a254 
=== Usages ===
i478 
=== Predecessor ===
i249 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a254  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1205 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1205  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i249 
y: i478 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i249 y: i478  <|@  <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a487 i252 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a487 i252  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a2 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v479 
stateDuring: ?791 
=== Succesors ===
next: v961 
=== Usages ===
a964 a480 
=== Predecessor ===
i1205 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v479 stateDuring: ?791 #next: v961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j917 
=== Usages ===
=== Predecessor ===
a254 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j917 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j918 
=== Usages ===
v1269 v1271 v1272 
=== Predecessor ===
v961 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j918 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1253 
=== Succesors ===
next: i947 
=== Usages ===
v1270 
=== Predecessor ===
j917 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1253 #next: i947  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
i947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i947 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v922 
=== Usages ===
v955 
=== Predecessor ===
j918 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i947 
y: i954 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i947 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v955 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v920 
=== Usages ===
=== Predecessor ===
i947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v955 #trueSuccessor: v921 #falseSuccessor: v920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a948  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [v33|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j918 
index: - 
=== Succesors ===
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: v929 
=== Usages ===
a949 v956 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a948  <|@  <|@
f <@*|@fixed>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v924 
=== Usages ===
=== Predecessor ===
a948 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v928 #falseSuccessor: v924  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j950 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
j950 v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j950 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
v931 j946 v1273 
=== Predecessor ===
v924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j950 
y: j799 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j950 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
j936 v939 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a948  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
j950 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v933 #falseSuccessor: v932  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a949 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a949 #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j951 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j951  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j917 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j917 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j951 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
=== Succesors ===
next: j936 
=== Usages ===
v1273 
=== Predecessor ===
v932 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - #next: j936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j936 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a949 
=== Succesors ===
next: v952 
=== Usages ===
v952 
=== Predecessor ===
j951 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a949 #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [v37|QWORD + v35|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j951 
index: j950 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
value: j936 
stateAfter: - 
=== Succesors ===
next: v953 
=== Usages ===
=== Predecessor ===
j936 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - value: j936 stateAfter: - #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j946 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j950 
y: j945 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j950 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
value: j946 
stateAfter: - 
=== Succesors ===
next: v938 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - value: j946 stateAfter: - #next: v938  <|@  <|@
f <@*|@fixed>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v925 v927 v938 v940 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v925 v927 v938 v940 #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a254 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
value: a480 
stateAfter: - 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - value: a480 stateAfter: - #next: v1023  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j963 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j963 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a964 
=== Usages ===
v1274 v1275 
=== Predecessor ===
v1023 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a964 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a254 
=== Succesors ===
next: j965 
=== Usages ===
j966 
=== Predecessor ===
j963 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a254 #next: j965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j965 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j966 
=== Usages ===
j967 j980 
=== Predecessor ===
a964 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a964 
=== Succesors ===
next: v970 
=== Usages ===
j967 v971 
=== Predecessor ===
j965 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a964 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j965 
y: j966 
=== Succesors ===
=== Usages ===
v1002 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j965 y: j966  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j967 
y: j1001 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j967 y: j1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1002 
=== Succesors ===
trueSuccessor: v969 
falseSuccessor: v968 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1002 #trueSuccessor: v969 #falseSuccessor: v968  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j966 
y: j799 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j966 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v976 #falseSuccessor: v972  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1008 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1008  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j965 
y: i979 
=== Succesors ===
=== Usages ===
j1003 v1277 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j965 y: i979  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v41|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j980 
index: j978 
=== Succesors ===
=== Usages ===
i1008 i1009 v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j980 index: j978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: v984 
=== Usages ===
v1016 
=== Predecessor ===
v972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: v984  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1008 
y: i1015 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1008 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1016 
=== Succesors ===
trueSuccessor: v983 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
i1008 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1016 #trueSuccessor: v983 #falseSuccessor: v981  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1153 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v983 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v984 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1009 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1009 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
=== Succesors ===
next: v989 
=== Usages ===
v1017 
=== Predecessor ===
v985 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1009 
y: i954 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1009 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1017 
=== Succesors ===
trueSuccessor: v988 
falseSuccessor: v986 
=== Usages ===
=== Predecessor ===
i1009 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1017 #trueSuccessor: v988 #falseSuccessor: v986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1152 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
value: i954 
stateAfter: - 
=== Succesors ===
next: j1011 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - value: i954 stateAfter: - #next: j1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
j1011 v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v994 
=== Usages ===
v991 j1007 v1276 
=== Predecessor ===
v1010 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v994  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j799 
=== Succesors ===
=== Usages ===
v994 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1011 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j980 
y: j978 
=== Succesors ===
=== Usages ===
v998 v1013 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j980 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v991 
=== Succesors ===
trueSuccessor: v993 
falseSuccessor: v992 
=== Usages ===
=== Predecessor ===
j1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v991 #trueSuccessor: v993 #falseSuccessor: v992  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1003 
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v993 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1003 #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1012 
=== Usages ===
=== Predecessor ===
v994 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j963 
index: - 
=== Succesors ===
=== Usages ===
j1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j963 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1012 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: v1013 
=== Usages ===
v1276 
=== Predecessor ===
v992 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [v44|QWORD + v42|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1012 
index: j1011 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1012 index: j1011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
value: j1003 
stateAfter: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
j1012 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - value: j1003 stateAfter: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1011 
y: j945 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1011 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
value: j1007 
stateAfter: - 
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - value: j1007 stateAfter: - #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v1014 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 v1150 v1151 v1152 v1153 v1154 
=== Succesors ===
next: i1206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 v1150 v1151 v1152 v1153 v1154 #next: i1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1206 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: i1207 
=== Usages ===
?280 i288 j1237 v304 i309 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 7]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1208 
=== Usages ===
v577 
=== Predecessor ===
i1206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 11]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v577 
=== Predecessor ===
i1207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1207 
y: i1208 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1207 y: i1208  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?328 
values: a2 - i237 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?328 values: a2 - i237  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
values: a2 i1206 a3 
=== Succesors ===
=== Usages ===
?793 ?276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327 values: a2 i1206 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9837491833349263
stamp: void
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v268 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?793 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v475 
stateDuring: ?793 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v475 stateDuring: ?793 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v273 v275 
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v273 v275 #next: a1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1210 
=== Usages ===
a437 v1255 
=== Predecessor ===
v274 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1210  <|@  <|@
tid ?276 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v865 i1210 i1212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v48|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1209 
=== Succesors ===
=== Usages ===
i1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1210 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-113419|0xfffffffffffe44f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: a1211 
=== Usages ===
i455 j911 v316 i309 
=== Predecessor ===
a1209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v1255 lastLocationAccess: - #next: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1211 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: i1212 
=== Usages ===
a431 v1256 
=== Predecessor ===
i1210 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v50|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1211 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-165387|0xfffffffffffd79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?276 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: i1213 
=== Usages ===
i322 i455 
=== Predecessor ===
a1211 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?276 guard: - address: v1256 lastLocationAccess: - #next: i1213  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1214 
=== Usages ===
i433 v579 
=== Predecessor ===
i1212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
v579 
=== Predecessor ===
i1213 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1213 
y: i1214 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1213 y: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid a431 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1211 
=== Succesors ===
=== Usages ===
j915 j906 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1211  <|@  <|@
f <@~|@floating>@ <|@
tid a437 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1209 
=== Succesors ===
=== Usages ===
j902 j913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1209  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9849394295955807
stamp: void
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v285 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
i1214 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v285 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1213 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1206 
y: i433 
=== Succesors ===
=== Usages ===
v1268 v447 v456 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1206 y: i433  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i20 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v729 #falseSuccessor: v730  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
result int[-186393|0xfffffffffffd27e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -186393
stableDimension: 0
stamp: i32 [-186393]
stampKind: i32
value: int[-186393|0xfffffffffffd27e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1212 
y: i1210 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1212 y: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i455 
y: i288 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i455 y: i288  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@~|@floating>@ <|@
tid i877 <|@
result int[-188441|0xfffffffffffd1fe7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -188441
stableDimension: 0
stamp: i32 [-188441]
stampKind: i32
value: int[-188441|0xfffffffffffd1fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a437 
=== Succesors ===
next: j906 
=== Usages ===
v1267 
=== Predecessor ===
v738 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a437 #next: j906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a431 
=== Succesors ===
next: v912 
=== Usages ===
v1268 
=== Predecessor ===
j902 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a431 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v58|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [v59|QWORD[*] + v56|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j906 
index: i288 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j906 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1210 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1267 v1268 j911 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1267 v1268 j911 #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1206 
y: i20 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1206 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
result int[-189465|0xfffffffffffd1be7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -189465
stableDimension: 0
stamp: i32 [-189465]
stampKind: i32
value: int[-189465|0xfffffffffffd1be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1212 
y: i16 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1212 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1206 
y: i1210 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1206 y: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i309 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i322 y: i309  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v745 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
result int[-190489|0xfffffffffffd17e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -190489
stableDimension: 0
stamp: i32 [-190489]
stampKind: i32
value: int[-190489|0xfffffffffffd17e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i863 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-190489 - -186393] bits:1...10100xxxx1111100111
valueDescription: i32
=== Inputs ===
merge: v860 
values: i869 i871 i875 i877 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v860 values: i869 i871 i875 i877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v868 v870 v874 v876 
=== Succesors ===
next: v865 
=== Usages ===
i863 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v868 v870 v874 v876 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?276 
actionAndReason: i863 
speculation: j799 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?276 actionAndReason: i863 speculation: j799  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a437 
=== Succesors ===
next: j915 
=== Usages ===
j914 
=== Predecessor ===
v746 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a437 #next: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a431 
=== Succesors ===
next: v316 
=== Usages ===
j916 
=== Predecessor ===
j913 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a431 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j323 j914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j914 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j913 
y: j69 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j913 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j1237 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1206 
=== Succesors ===
=== Usages ===
j314 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j1237 
y: i16 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j1237 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j314 
y: j69 
=== Succesors ===
=== Usages ===
j916 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j314 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j323 
y: j915 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j323 y: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j914 
dst: j916 
len: i1210 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
j915 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j914 dst: j916 len: i1210 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
i230 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i237 
y: i1215 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i237 y: i1215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: i230 
stateAfter: - 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: i230 stateAfter: - #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1216 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v670 
=== Usages ===
v1156 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: v670  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1216 
y: v1155 
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1216 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1156 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1156 #trueSuccessor: v667 #falseSuccessor: v669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1217 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
i160 i165 ?197 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v182  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?330 
=== Succesors ===
=== Usages ===
?197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?330  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?222 
values: a2 a3 i1217 
=== Succesors ===
=== Usages ===
?196 ?788 ?789 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?222 values: a2 a3 i1217  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1201 
y: i1217 
=== Succesors ===
=== Usages ===
i178 v542 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1201 y: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i160 
y: i177 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i160 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i16 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9218183045857158
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i184 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i184  <|@  <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i160 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i160  <|@  <|@
tid ?788 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
values: a2 a487 a2 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a2 a487 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i184 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v542 
stateDuring: ?788 
=== Succesors ===
next: i1218 
=== Usages ===
i187 
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v542 stateDuring: ?788 #next: i1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: a189 
=== Usages ===
i544 
=== Predecessor ===
i184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1218 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1218  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i184 
y: i544 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i184 y: i544  <|@  <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a487 i187 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a487 i187  <|@  <|@
tid ?789 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
values: a2 
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v545 
stateDuring: ?789 
=== Succesors ===
next: v1083 
=== Usages ===
a375 a546 a375 a375 a1086 a375 a375 a375 
=== Predecessor ===
i1218 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v545 stateDuring: ?789 #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1044 
=== Usages ===
=== Predecessor ===
a189 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1044 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1045 
=== Usages ===
v1280 v1282 v1283 
=== Predecessor ===
v1083 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1045 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1253 
=== Succesors ===
next: i1070 
=== Usages ===
v1281 
=== Predecessor ===
j1044 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1253 #next: i1070  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: v1049 
=== Usages ===
v1077 
=== Predecessor ===
j1045 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: v1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1070 
y: i954 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1070 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1077 
=== Succesors ===
trueSuccessor: v1048 
falseSuccessor: v1047 
=== Usages ===
=== Predecessor ===
i1070 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1077 #trueSuccessor: v1048 #falseSuccessor: v1047  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1052 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1052  <|@  <|@
f <@*|@fixed>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [v78|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
a1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
result v79|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: v1056 
=== Usages ===
a1072 v1078 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1078 
=== Succesors ===
trueSuccessor: v1055 
falseSuccessor: v1051 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1078 #trueSuccessor: v1055 #falseSuccessor: v1051  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1073 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
j1073 v1076 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1073 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
=== Succesors ===
next: v1061 
=== Usages ===
v1058 j1069 v1284 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1073 
y: j799 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1073 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid a1072 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1071 
=== Succesors ===
=== Usages ===
j1063 v1066 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1059 
=== Usages ===
=== Predecessor ===
j1073 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1060 #falseSuccessor: v1059  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1072 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1072 #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1066 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1074 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1074  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1044 
index: - 
=== Succesors ===
=== Usages ===
j1074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1044 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1074 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: j1063 
=== Usages ===
v1284 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: j1063  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1063 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1072 
=== Succesors ===
next: v1075 
=== Usages ===
v1075 
=== Predecessor ===
j1074 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1072 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [v82|QWORD + v80|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1074 
index: j1073 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: j1073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
value: j1063 
stateAfter: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
j1063 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - value: j1063 stateAfter: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1073 
y: j945 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1073 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: j1069 
stateAfter: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: j1069 stateAfter: - #next: v1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
v1076 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1052 v1054 v1065 v1067 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1052 v1054 v1065 v1067 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
result v84|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a189 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
value: a546 
stateAfter: - 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - value: a546 stateAfter: - #next: v1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1085 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1085 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1086 
=== Usages ===
v1285 v1286 
=== Predecessor ===
v1139 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1086 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a189 
=== Succesors ===
next: j1087 
=== Usages ===
j1088 
=== Predecessor ===
j1085 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a189 #next: j1087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1087 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j1088 
=== Usages ===
j1089 j1100 
=== Predecessor ===
a1086 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1088 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1086 
=== Succesors ===
next: v1092 
=== Usages ===
j1089 v1093 
=== Predecessor ===
j1087 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1086 #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid j1089 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1087 
y: j1088 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1087 y: j1088  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j1089 
y: j1001 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1089 y: j1001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1121 
=== Succesors ===
trueSuccessor: v1091 
falseSuccessor: v1090 
=== Usages ===
=== Predecessor ===
j1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1121 #trueSuccessor: v1091 #falseSuccessor: v1090  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v195  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1091 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1088 
y: j799 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1088 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1093 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1094 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1093 #trueSuccessor: v1098 #falseSuccessor: v1094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1161 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1161  <|@  <|@
f <@*|@fixed>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1098 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1125 
=== Usages ===
=== Predecessor ===
v1099 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1125  <|@  <|@
f <@~|@floating>@ <|@
tid j1100 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1087 
y: i979 
=== Succesors ===
=== Usages ===
j1122 v1288 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1087 y: i979  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [v86|QWORD[*] + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1100 
index: j978 
=== Succesors ===
=== Usages ===
i1125 i1126 v1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1100 index: j978  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v1104 
=== Usages ===
v1132 
=== Predecessor ===
v1094 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1125 
y: i1015 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1125 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1132 
=== Succesors ===
trueSuccessor: v1103 
falseSuccessor: v1101 
=== Usages ===
=== Predecessor ===
i1125 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1132 #trueSuccessor: v1103 #falseSuccessor: v1101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1126 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
v1133 
=== Predecessor ===
v1105 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i954 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1126 y: i954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1133 
=== Succesors ===
trueSuccessor: v1108 
falseSuccessor: v1106 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1133 #trueSuccessor: v1108 #falseSuccessor: v1106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v22|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
value: i954 
stateAfter: - 
=== Succesors ===
next: j1128 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - value: i954 stateAfter: - #next: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1085 
index: - 
=== Succesors ===
=== Usages ===
j1128 v1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1128 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v1114 
=== Usages ===
v1111 j1124 v1287 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1128 
y: j799 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1128 y: j799  <|@  <|@
f <@~|@floating>@ <|@
tid j1122 <|@
result v88|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1100 
y: j978 
=== Succesors ===
=== Usages ===
v1118 v1130 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1100 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1112 
=== Usages ===
=== Predecessor ===
j1128 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v1113 #falseSuccessor: v1112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v22|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1122 
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1122 #next: v1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1129 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1085 
index: - 
=== Succesors ===
=== Usages ===
j1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1129 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: v1130 
=== Usages ===
v1287 
=== Predecessor ===
v1112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: v1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v89|QWORD + v87|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1129 
index: j1128 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1129 index: j1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
value: j1122 
stateAfter: - 
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
j1129 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - value: j1122 stateAfter: - #next: v1131  <|@  <|@
f <@~|@floating>@ <|@
tid j1124 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1128 
y: j945 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1128 y: j945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j1124 
stateAfter: - 
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j1124 stateAfter: - #next: v1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a375 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v194 
values: a487 a189 a189 a189 a189 a189 a189 
=== Succesors ===
=== Usages ===
v1260 j1037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v194 values: a487 a189 a189 a189 a189 a189 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v195 v1157 v1158 v1159 v1160 v1161 
=== Succesors ===
next: a1219 
=== Usages ===
a375 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v195 v1157 v1158 v1159 v1160 v1161 #next: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1219 <|@
result v92|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1220 
=== Usages ===
a503 v1259 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1220  <|@  <|@
tid ?196 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?197 
=== Succesors ===
=== Usages ===
v846 i1220 i1221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?197  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v92|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1219 
=== Succesors ===
=== Usages ===
i1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1220 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-129291|0xfffffffffffe06f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?196 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: i1221 
=== Usages ===
v586 
=== Predecessor ===
a1219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?196 guard: - address: v1259 lastLocationAccess: - #next: i1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [v91|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a375 
index: - 
=== Succesors ===
=== Usages ===
i1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1221 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-129547|0xfffffffffffe05f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?196 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: i1222 
=== Usages ===
i517 
=== Predecessor ===
i1220 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?196 guard: - address: v1260 lastLocationAccess: - #next: i1222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1222 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: i1223 
=== Usages ===
i496 v582 
=== Predecessor ===
i1221 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: i1223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1223 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
v582 
=== Predecessor ===
i1222 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1222 
y: i1223 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1222 y: i1223  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v761 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i1223 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v761 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1224 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1224 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
=== Succesors ===
next: v767 
=== Usages ===
i206 i165 
=== Predecessor ===
v761 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1222 
=== Succesors ===
=== Usages ===
i208 i206 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1222  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1224 
y: i496 
=== Succesors ===
=== Usages ===
v1279 v509 v518 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1224 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i20 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
i1224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v765 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i850 <|@
result int[-195609|0xfffffffffffd03e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -195609
stableDimension: 0
stamp: i32 [-195609]
stampKind: i32
value: int[-195609|0xfffffffffffd03e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v765 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1225 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1225 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
i208 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1225 
y: i496 
=== Succesors ===
=== Usages ===
j1042 v511 v586 i517 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1225 y: i496  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i20 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i208 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
i1225 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v854 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v854  <|@  <|@
f <@~|@floating>@ <|@
tid i855 <|@
result int[-196633|0xfffffffffffcffe7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -196633
stableDimension: 0
stamp: i32 [-196633]
stampKind: i32
value: int[-196633|0xfffffffffffcffe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1220 
y: i208 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1220 y: i208  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v773 #falseSuccessor: v774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
result int[-197657|0xfffffffffffcfbe7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -197657
stableDimension: 0
stamp: i32 [-197657]
stampKind: i32
value: int[-197657|0xfffffffffffcfbe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1221 
y: i208 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1221 y: i208  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i206 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i206  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v777 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
result int[-198681|0xfffffffffffcf7e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -198681
stableDimension: 0
stamp: i32 [-198681]
stampKind: i32
value: int[-198681|0xfffffffffffcf7e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1035  <|@  <|@
f <@~|@floating>@ <|@
tid a503 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1219 
=== Succesors ===
=== Usages ===
j1035 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a503 
=== Succesors ===
next: j1037 
=== Usages ===
v1278 
=== Predecessor ===
v778 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a503 #next: j1037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1037 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a375 
=== Succesors ===
next: v1043 
=== Usages ===
v1279 
=== Predecessor ===
j1035 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a375 #next: v1043  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [v103|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v104|QWORD[*] + v98|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1037 
index: i206 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1037 index: i206  <|@  <|@
f <@~|@floating>@ <|@
tid j1042 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i208 
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1278 v1279 j1042 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
j1037 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1278 v1279 j1042 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1217 
y: i1224 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1217 y: i1224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: i165 
stateAfter: - 
=== Succesors ===
next: i1226 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: i165 stateAfter: - #next: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1226 v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1226 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: i1227 
=== Usages ===
i536 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v2|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1227 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
i539 
=== Predecessor ===
i1226 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1226 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1226  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1227 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1227  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i536 
y: i539 
=== Succesors ===
=== Usages ===
i540 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i536 y: i539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
value: i540 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
i1227 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - value: i540 stateAfter: - #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i852 <|@
result int[-194579|0xfffffffffffd07ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -194579
stableDimension: 0
stamp: i32 [-194579]
stampKind: i32
value: int[-194579|0xfffffffffffd07ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i844 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i844 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-198681 - -194579] bits:1...10xxxxxxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v841 
values: i850 i852 i855 i857 i859 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v841 values: i850 i852 i855 i857 i859  <|@  <|@
f <@~|@floating>@ <|@
tid j845 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v841 
values: j799 j853 j799 j799 j799 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v841 values: j799 j853 j799 j799 j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v851 v854 v856 v858 
=== Succesors ===
next: v846 
=== Usages ===
i844 j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v851 v854 v856 v858 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?196 
actionAndReason: i844 
speculation: j845 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?196 actionAndReason: i844 speculation: j845  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result int[-123443|0xfffffffffffe1dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -123443
stableDimension: 0
stamp: i32 [-123443]
stampKind: i32
value: int[-123443|0xfffffffffffe1dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v669 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a3 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?337 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?347 
values: a2 a3 
=== Succesors ===
=== Usages ===
?785 ?341 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?347 values: a2 a3  <|@  <|@
tid ?785 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a2 a2 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a2 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v548 
stateDuring: ?785 
=== Succesors ===
next: a340 
=== Usages ===
v549 
=== Predecessor ===
v131 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v548 stateDuring: ?785 #next: a340  <|@  <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a336 
=== Succesors ===
=== Usages ===
a340 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a336  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?337 
values: a2 
=== Succesors ===
=== Usages ===
?786 ?787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?337 values: a2  <|@  <|@
tid ?786 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?341 
values: a2 
=== Succesors ===
=== Usages ===
a340 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?341 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a340 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v549 
stateDuring: ?786 
=== Succesors ===
next: v344 
=== Usages ===
v550 
=== Predecessor ===
a336 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v549 stateDuring: ?786 #next: v344  <|@  <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a2 a340 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a340  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?341 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v550 
stateDuring: ?787 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a340 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v550 stateDuring: ?787 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v132 v348 
=== Succesors ===
next: j1165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v132 v348 #next: j1165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1165 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1183 
=== Usages ===
j1166 
=== Predecessor ===
v121 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1183 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
j1168 j1172 
=== Predecessor ===
j1165 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1165 
y: j1164 
=== Succesors ===
=== Usages ===
j1168 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1165 y: j1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1168 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1166 
y: j1183 
=== Succesors ===
=== Usages ===
v1187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1166 y: j1183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
value: j1168 
stateAfter: - 
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
j1183 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - value: j1168 stateAfter: - #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1172 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: i64
=== Inputs ===
x: j1183 
y: i1171 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1183 y: i1171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j1172 
stateAfter: - 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v1187 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j1172 stateAfter: - #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i808 <|@
result int[-34099|0xffffffffffff7acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -34099
stableDimension: 0
stamp: i32 [-34099]
stampKind: i32
value: int[-34099|0xffffffffffff7acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-141579|0xfffffffffffdd6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
v1142 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1266 lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 139647623626752 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1228 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1228  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@616678ee
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.8808902364154574, 0.11910976358454262, 0.0]
stamp: void
=== Inputs ===
value: v1142 
=== Succesors ===
successors: v84 v89 v92 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v1142 #successors: v84 v89 v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i1229 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1229 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
i80 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
i1229 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1230 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1230 <|@
result v125|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: i1231 
=== Usages ===
v1264 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: i1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v125|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1230 
=== Succesors ===
=== Usages ===
i1231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1231 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-143371|0xfffffffffffdcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: i1232 
=== Usages ===
i104 
=== Predecessor ===
a1230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1264 lastLocationAccess: - #next: i1232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1232 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
i566 
=== Predecessor ===
i1231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1232 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1232  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1231 
y: i566 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1231 y: i566  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
i1232 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v79 
values: i1229 i104 
=== Succesors ===
=== Usages ===
?24 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v79 values: i1229 i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v90 
=== Succesors ===
next: i1233 
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v90 #next: i1233  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1233 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
v19 i18 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i1233 
y: i16 
=== Succesors ===
=== Usages ===
?24 ?120 ?35 ?372 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1233 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: void
=== Inputs ===
x: i1233 
y: i16 
=== Succesors ===
=== Usages ===
v28 v55 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1233 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stamp: i32
=== Inputs ===
x: i1195 
y: i80 
=== Succesors ===
=== Usages ===
?120 ?35 ?372 v41 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1195 y: i80  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3200) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.8636164067805913
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
i1233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: isub
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
sourceFile: Formatter.java
sourceLine: 3199
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1195 i80 - a2 a3 i18 
=== Succesors ===
=== Usages ===
v1289 v1234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1195 i80 - a2 a3 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-146955|0xfffffffffffdc1f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v694 
=== Usages ===
v1162 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v1265 lastLocationAccess: - #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1234 
y: v1155 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1234 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1162 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1162 #trueSuccessor: v691 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a116 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a116  <|@  <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 45
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3201
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
?117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a2 a3 
=== Succesors ===
=== Usages ===
?792 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a2 a3  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?117 
values: a2 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?117 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a116 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v576 
stateDuring: ?792 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v576 stateDuring: ?792 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 #next: v1235  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 51
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3203
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
v1290 v1235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-145163|0xfffffffffffdc8f5]
deoptSpeculation: long[9624|0x2598]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
v1163 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1265 lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1235 
y: v1155 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1235 y: v1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 62]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
?369 v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(char)>
=== Inputs ===
arguments: a2 i47 
=== Succesors ===
=== Usages ===
a368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i20 i51 
=== Succesors ===
=== Usages ===
i51 v41 ?372 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i20 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v37 
=== Succesors ===
next: v46 
=== Usages ===
i39 v43 v52 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v37 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i25 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
profileData: PROFILED designatedSuccessorProbability: 0.6795581021385948
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v45 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: a368 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a368  <|@  <|@
tid ?372 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3204
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 i39 
=== Succesors ===
=== Usages ===
?369 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25 i39  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?372 
values: a2 i47 
=== Succesors ===
=== Usages ===
?794 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?372 values: a2 i47  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?369 
values: a2 
=== Succesors ===
=== Usages ===
a368 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?369 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a368 <|@
result v135|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?794 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?794 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 70]
stamp: i32
=== Inputs ===
x: i39 
y: i16 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a368 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v38 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v38 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 77]
profileData: PROFILED designatedSuccessorProbability: 0.8636164067805912
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: a356 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a356  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a356 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 82
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3207
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?360 
values: a2 a3 
=== Succesors ===
=== Usages ===
?795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?360 values: a2 a3  <|@  <|@
tid ?795 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?357 
values: a2 
=== Succesors ===
=== Usages ===
a356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?357 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a356 <|@
result v137|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?795 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?795 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
a356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1185 
=== Usages ===
j1175 
=== Predecessor ===
v60 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1185 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: v1189 
=== Usages ===
j1177 j1181 
=== Predecessor ===
j1174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid j1175 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1174 
y: j1164 
=== Succesors ===
=== Usages ===
j1177 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1174 y: j1164  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1175 
y: j1185 
=== Succesors ===
=== Usages ===
v1189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1175 y: j1185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
value: j1177 
stateAfter: - 
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
j1185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - value: j1177 stateAfter: - #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1181 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: i64
=== Inputs ===
x: j1185 
y: i1180 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1185 y: i1180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j1181 
stateAfter: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j1181 stateAfter: - #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1290 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 568
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002898[index: 324, len: 24, hash: 0x395026b3]: GuardMovement@2[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 54, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 575
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x1485aedc]: FallbackDeopt@8[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 45, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result int[-23347|0xffffffffffffa4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -23347
stableDimension: 0
stamp: i32 [-23347]
stampKind: i32
value: int[-23347|0xffffffffffffa4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i800 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-123443 - -23347] bits:1...1xxxxxxxxx11001101
valueDescription: i32
=== Inputs ===
merge: v796 
values: i808 i816 i820 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v796 values: i808 i816 i820  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [20 - 3220] bits:0...0xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v796 
values: j809 j396 j821 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v796 values: j809 j396 j821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v807 v815 v819 
=== Succesors ===
next: v802 
=== Usages ===
i800 j801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v807 v815 v819 #next: v802  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i800 
speculation: j801 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i800 speculation: j801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  766  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  766  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[154, 155[[242, 243[[260, 266[[304, 306[[318, 320[[334, 336[[348, 350[[362, 364[[368, 370[[376, 377[[384, 385[[464, 466[[488, 490[[506, 508[[518, 524[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v18|d [0, 10[[64, 67[[80, 83[[128, 131[[154, 155[[200, 203[[210, 213[[242, 243[[304, 305[[310, 313[[318, 319[[334, 335[[340, 343[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[420, 422[[434, 437[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v60|q [0, 8[[12, 14[[152, 155[[240, 243[[260, 262[[302, 305[[316, 319[[332, 335[[346, 349[[362, 363[[368, 369[[374, 377[[384, 385[[418, 423[[462, 465[[486, 489[[504, 507[[518, 520[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[150, 155[[238, 243[[300, 305[[314, 319[[330, 335[[344, 349[[360, 363[[366, 369[[372, 377[[382, 385[[416, 423[[460, 465[[484, 489[[502, 507[[602, 604[[680, 682[[754, 756[[762, 764[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[148, 155[[236, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 77[[164, 168[[282, 298[[426, 442[[776, 780[[804, 819[6 MustHaveRegister 38 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [8, 160[[164, 254[[282, 377[[380, 507[[540, 787[[788, 819[[820, 827[[828, 839[[840, 855[8 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 116 MustHaveRegister 160 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister 254 MustHaveRegister 300 ShouldHaveRegister 308 MustHaveRegister 330 ShouldHaveRegister 338 MustHaveRegister 372 ShouldHaveRegister 382 ShouldHaveRegister 456 MustHaveRegister 460 ShouldHaveRegister 472 MustHaveRegister 484 ShouldHaveRegister 495 LiveAtLoopEnd 502 ShouldHaveRegister 542 MustHaveRegister 570 MustHaveRegister 612 MustHaveRegister 614 ShouldHaveRegister 626 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [10, 140[[164, 250[[282, 377[[380, 400[[426, 507[[540, 787[[788, 819[[820, 827[[828, 839[[840, 855[10 MustHaveRegister 58 MustHaveRegister 74 MustHaveRegister 78 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 122 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 192 MustHaveRegister 208 MustHaveRegister 250 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister 360 ShouldHaveRegister 428 MustHaveRegister 432 MustHaveRegister 462 ShouldHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|q [18, 271[[282, 529[[540, 768[18 MustHaveRegister 270 ShouldHaveRegister 528 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [24, 274[[282, 532[[540, 768[24 MustHaveRegister 32 MustHaveRegister 268 MustHaveRegister 274 MustHaveRegister 526 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [26, 278[[282, 536[[540, 768[26 MustHaveRegister 34 MustHaveRegister 278 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [38, 42[[282, 298[[426, 450[[454, 458[[780, 787[38 MustHaveRegister 40 ShouldHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [54, 68[54 MustHaveRegister 56 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [56, 66[56 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [58, 70[58 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [62, 84[[164, 172[62 MustHaveRegister 84 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v16|d [66, 87[[164, 175[66 MustHaveRegister 86 ShouldHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v15|d [68, 90[[164, 181[[298, 314[[328, 344[68 MustHaveRegister 180 ShouldHaveRegister 314 ShouldHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [76, 82[76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v24|d [82, 160[[298, 328[[380, 426[[540, 568[[596, 674[[752, 760[[772, 776[[800, 804[[840, 855[82 MustHaveRegister 84 ShouldHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v19|d [84, 90[[298, 302[84 MustHaveRegister 86 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v27|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d rax|d [306, 312[306 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [308, 310[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v29|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q rax|d [320, 328[[540, 568[[596, 620[320 MustHaveRegister 610 MustHaveRegister 614 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [542, 544[542 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [544, 552[544 MustHaveRegister 546 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [550, 562[550 MustHaveRegister 554 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v34|d [552, 560[[600, 602[552 MustHaveRegister 560 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [558, 560[558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [562, 564[562 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v32|q [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v1|q [614, 616[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v1|q [626, 630[[642, 648[[652, 658[626 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [656, 668[656 MustHaveRegister 660 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v41|q [658, 666[[752, 754[658 MustHaveRegister 666 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [96, 140[[380, 408[[772, 776[[800, 804[[840, 855[96 MustHaveRegister 130 ShouldHaveRegister 390 MustHaveRegister 396 ShouldHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [108, 120[108 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [110, 146[[388, 420[110 MustHaveRegister 136 ShouldHaveRegister 146 ShouldHaveRegister 396 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [112, 118[112 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [114, 136[[388, 394[114 MustHaveRegister 136 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [116, 126[116 MustHaveRegister 122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v50|d [118, 144[[388, 404[118 MustHaveRegister 144 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v48|d [120, 142[[388, 402[120 MustHaveRegister 142 ShouldHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v46|d [130, 150[130 MustHaveRegister 132 MustHaveRegister 138 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v51|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v54|q [142, 148[142 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v53|q [144, 150[144 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [146, 152[146 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v51|d [394, 398[394 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v46|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [848, 850[850 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v54|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v53|q [404, 414[404 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [406, 416[406 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v67|q [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v69|q [414, 418[414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [170, 244[[328, 358[[568, 596[[674, 752[[760, 772[[788, 800[[828, 839[170 MustHaveRegister 172 ShouldHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v71|d [172, 178[[328, 332[172 MustHaveRegister 174 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v72|d [174, 176[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d rax|d [336, 342[336 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d -1 [338, 340[338 MustHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v74|d [342, 346[342 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q rax|d [350, 358[[568, 596[[674, 711[[712, 715[[716, 719[[720, 729[[730, 751[[760, 767[350 MustHaveRegister 688 MustHaveRegister 692 ShouldHaveRegister 698 MustHaveRegister 710 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister 728 ShouldHaveRegister 750 ShouldHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [572, 580[572 MustHaveRegister 574 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [578, 590[578 MustHaveRegister 582 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v79|d [580, 588[[678, 680[580 MustHaveRegister 588 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d v77|q [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v1|q [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q v1|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q v86|q [736, 744[[760, 762[736 MustHaveRegister 744 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q v21|q [182, 232[188 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [184, 228[184 MustHaveRegister 186 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d -1 [186, 218[186 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [188, 222[188 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[v96|d]" v96|d -1 [196, 244[196 MustHaveRegister 202 ShouldHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d -1 [198, 210[198 MustHaveRegister 200 ShouldHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v96|d [202, 238[202 MustHaveRegister 204 MustHaveRegister 224 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v99|d [212, 234[212 MustHaveRegister 214 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v94|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q v92|d [228, 230[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q v102|q [230, 236[230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q v91|q [232, 238[232 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q -1 [234, 240[234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v71|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d -1 [248, 252[248 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d -1 [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v107|d [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [832, 834[834 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [832, 836[836 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q rax|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q rax|d [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q v114|q [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q v115|q [266, 270[266 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [268, 276[268 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q v116|q [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q v118|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q v117|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d -1 [284, 288[284 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q v121|d [288, 291[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[v123|q]" v123|q -1 [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d v129|d [294, 297[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[v125|d]" v125|d -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v126|d DWORD "[v126|d]" v126|d -1 [430, 436[430 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[v127|d]" v127|d -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[v128|d]" v128|d v126|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[v129|d]" v129|d v124|d [440, 450[[454, 458[[780, 787[446 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[v130|d]" v130|d -1 [442, 498[442 MustHaveRegister 444 MustHaveRegister 448 ShouldHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v131|d DWORD "[v131|d]" v131|d v130|d [444, 496[[780, 787[[820, 827[444 MustHaveRegister  "NoSpillStore"
  v132|d DWORD "[v132|d]" v132|d v11|d [446, 496[[820, 827[446 MustHaveRegister 480 MustHaveRegister 495 LiveAtLoopEnd  "NoSpillStore"
  v133|q QWORD "[v133|q]" v133|q rax|d [466, 467[466 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[v134|d]" v134|d v136|d [478, 492[480 ShouldHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v135|q QWORD "[v135|q]" v135|q rax|d [490, 491[490 MustHaveRegister  "NoSpillStore"
  v136|d DWORD "[v136|d]" v136|d v134|d [492, 495[492 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[v137|q]" v137|q rax|d [508, 509[508 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[v138|q]" v138|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[v139|q]" v139|q v138|q [522, 524[522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[v140|q]" v140|q v139|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[v141|q]" v141|q -1 [526, 534[526 MustHaveRegister 530 ShouldHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[v142|q]" v142|q v140|q [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[v143|q]" v143|q v142|q [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[v144|q]" v144|q v141|q [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v145|d DWORD "[v145|d]" v145|d -1 [812, 814[814 MustHaveRegister  "NoSpillStore"
  v146|q QWORD "[v146|q]" v146|q -1 [812, 816[816 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[v147|q]" v147|q -1 [702, 708[[720, 726[[730, 736[702 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[v148|q]" v148|q -1 [624, 630[[642, 648[[652, 658[624 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[154, 155[[242, 243[[260, 266[[304, 306[[318, 320[[334, 336[[348, 350[[362, 364[[368, 370[[376, 377[[384, 385[[464, 466[[488, 490[[506, 508[[518, 524[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v18|d [0, 10[[64, 67[[80, 83[[128, 131[[154, 155[[200, 203[[210, 213[[242, 243[[304, 305[[310, 313[[318, 319[[334, 335[[340, 343[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[420, 422[[434, 437[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v60|q [0, 8[[12, 14[[152, 155[[240, 243[[260, 262[[302, 305[[316, 319[[332, 335[[346, 349[[362, 363[[368, 369[[374, 377[[384, 385[[418, 423[[462, 465[[486, 489[[504, 507[[518, 520[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[150, 155[[238, 243[[300, 305[[314, 319[[330, 335[[344, 349[[360, 363[[366, 369[[372, 377[[382, 385[[416, 423[[460, 465[[484, 489[[502, 507[[602, 604[[680, 682[[754, 756[[762, 764[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[148, 155[[236, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 77[[164, 168[[282, 298[[426, 442[[776, 780[[804, 819[6 MustHaveRegister 38 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 11[8 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 63[10 MustHaveRegister 58 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[rdi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|q [18, 140[18 MustHaveRegister  "OneSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [24, 140[24 MustHaveRegister 32 MustHaveRegister  "SpillInDominator"
  v9|d DWORD "[r9|d]" v9|d -1 [26, 140[26 MustHaveRegister 34 MustHaveRegister  "SpillInDominator"
  v10|d DWORD "[rdx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [38, 42[[282, 298[[426, 450[[454, 458[[780, 787[38 MustHaveRegister 40 ShouldHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d -1 [54, 68[54 MustHaveRegister 56 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [56, 66[56 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbx|d]" v17|d -1 [58, 70[58 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [62, 84[[164, 172[62 MustHaveRegister 84 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v16|d [66, 87[[164, 175[66 MustHaveRegister 86 ShouldHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v15|d [68, 90[[164, 181[68 MustHaveRegister 180 ShouldHaveRegister  "SpillInDominator"
  v23|d DWORD "[rcx|d]" v23|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [76, 82[76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d v24|d [82, 140[82 MustHaveRegister 84 ShouldHaveRegister  "SpillInDominator"
  v27|d DWORD "[rbp|d]" v27|d v19|d [84, 90[[298, 302[84 MustHaveRegister 86 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v27|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|d [306, 312[306 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [308, 310[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v29|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q rax|d [320, 328[[540, 568[[596, 620[320 MustHaveRegister 610 MustHaveRegister 614 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [542, 544[542 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [544, 552[544 MustHaveRegister 546 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q -1 [550, 562[550 MustHaveRegister 554 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [552, 560[[600, 602[552 MustHaveRegister 560 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [558, 560[558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [562, 564[562 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rsi|d]" v39|d v32|q [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v1|q [614, 616[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[r10|q]" v41|q v1|q [626, 630[[642, 648[[652, 658[626 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [656, 668[656 MustHaveRegister 660 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v41|q [658, 666[[752, 754[658 MustHaveRegister 666 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [96, 140[96 MustHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d -1 [108, 120[108 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [110, 146[[388, 420[110 MustHaveRegister 136 ShouldHaveRegister 146 ShouldHaveRegister 396 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [112, 118[112 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [114, 136[[388, 394[114 MustHaveRegister 136 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v52|d -1 [116, 126[116 MustHaveRegister 122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|d [118, 144[[388, 404[118 MustHaveRegister 144 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r14|q]" v54|q v48|d [120, 142[[388, 402[120 MustHaveRegister 142 ShouldHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbp|d]" v56|d v46|d [130, 150[130 MustHaveRegister 132 MustHaveRegister 138 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rdx|d]" v57|d v51|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v54|q [142, 148[142 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v53|q [144, 150[144 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q -1 [146, 152[146 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v51|d [394, 398[394 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v46|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [848, 850[850 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r14|q]" v64|q v54|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v53|q [404, 414[404 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [406, 416[406 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q v67|q [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [414, 418[414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [170, 226[170 MustHaveRegister 172 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v72|d v71|d [172, 178[[328, 332[172 MustHaveRegister 174 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d v72|d [174, 176[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rax|d]" v74|d rax|d [336, 342[336 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rcx|d]" v75|d -1 [338, 340[338 MustHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d v74|d [342, 346[342 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|d [350, 358[[568, 596[[674, 711[[712, 715[[716, 719[[720, 729[[730, 751[[760, 767[350 MustHaveRegister 688 MustHaveRegister 692 ShouldHaveRegister 698 MustHaveRegister 710 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister 728 ShouldHaveRegister 750 ShouldHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [572, 580[572 MustHaveRegister 574 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [578, 590[578 MustHaveRegister 582 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q v79|d [580, 588[[678, 680[580 MustHaveRegister 588 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v77|q [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q v1|q [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v1|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r10|q]" v88|q v86|q [736, 744[[760, 762[736 MustHaveRegister 744 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rdx|q]" v91|q v21|q [182, 232[188 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [184, 228[184 MustHaveRegister 186 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [186, 218[186 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [188, 222[188 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rcx|d]" v95|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d -1 [196, 226[196 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[rbx|d]" v97|d -1 [198, 210[198 MustHaveRegister 200 ShouldHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v96|d [202, 238[202 MustHaveRegister 204 MustHaveRegister 224 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rbp|d]" v99|d -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rbp|d]" v100|d v99|d [212, 234[212 MustHaveRegister 214 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v94|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rdi|q]" v102|q v92|d [228, 230[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rdi|q]" v103|q v102|q [230, 236[230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdx|q]" v104|q v91|q [232, 238[232 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q -1 [234, 240[234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r8|d]" v106|d v71|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [248, 252[248 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rsi|d]" v108|d -1 [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v107|d [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [832, 834[834 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [832, 836[836 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|d [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q v114|q [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q v115|q [266, 270[266 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rdx|q]" v117|q -1 [268, 276[268 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|q [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v118|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [284, 288[284 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r10|q]" v122|q v121|d [288, 291[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rbx|q]" v123|q -1 [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r10|d]" v124|d v129|d [294, 297[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v126|d DWORD "[rdx|d]" v126|d -1 [430, 436[430 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[r10|d]" v127|d -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rdx|d]" v128|d v126|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r10|d]" v129|d v124|d [440, 450[[454, 458[[780, 787[446 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r9|d]" v130|d -1 [442, 458[442 MustHaveRegister 444 MustHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v131|d DWORD "[rcx|d]" v131|d v130|d [444, 458[444 MustHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v11|d [446, 458[446 MustHaveRegister  "SpillInDominator"
  v133|q QWORD "[rax|q]" v133|q rax|d [466, 467[466 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[r10|d]" v134|d v136|d [478, 482[480 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[rax|q]" v135|q rax|d [490, 491[490 MustHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v134|d [492, 495[492 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[rax|q]" v137|q rax|d [508, 509[508 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[rsi|q]" v138|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[rsi|q]" v139|q v138|q [522, 524[522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[rsi|q]" v140|q v139|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r10|q]" v141|q -1 [526, 534[526 MustHaveRegister 530 ShouldHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rsi|q]" v142|q v140|q [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[rsi|q]" v143|q v142|q [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r10|q]" v144|q v141|q [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v145|d DWORD "[r10|d]" v145|d -1 [812, 814[814 MustHaveRegister  "NoSpillStore"
  v146|q QWORD "[r11|q]" v146|q -1 [812, 816[816 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q -1 [702, 708[[720, 726[[730, 736[702 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rsi|q]" v148|q -1 [624, 630[[642, 648[[652, 658[624 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v149|q QWORD "[r10|q]" v1|q v1|q [11, 140[44 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 116 MustHaveRegister  "SpillInDominator"
  v150|q QWORD "[r13|q]" v2|q v2|q [63, 140[[164, 226[74 MustHaveRegister 78 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 122 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 192 MustHaveRegister 208 MustHaveRegister  "SpillInDominator"
  v151|q QWORD "[vstack:0|q]" v1|q v1|q [140, 151[ "SpillInDominator"
  v152|q QWORD "[vstack:4|q]" v5|q v5|q [140, 147[ "OneSpillStore"
  v153|d DWORD "[vstack:3|d]" v8|d v8|d [140, 153[ "SpillInDominator"
  v154|d DWORD "[vstack:5|d]" v9|d v9|d [140, 153[ "SpillInDominator"
  v155|q QWORD "[vstack:9|q]" v2|q v2|q [226, 241[ "SpillInDominator"
  v156|q QWORD "[vstack:10|q]" v21|q v21|q [298, 303[ "SpillInDominator"
  v157|d DWORD "[vstack:1|d]" v26|d v26|d [140, 153[ "SpillInDominator"
  v158|d DWORD "[vstack:11|d]" v46|d v46|d [380, 383[ "OneSpillStore"
  v159|d DWORD "[vstack:1|d]" v26|d v26|d [153, 158[ "SpillInDominator"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [151, 158[ "SpillInDominator"
  v161|d DWORD "[vstack:3|d]" v8|d v8|d [153, 258[ "SpillInDominator"
  v162|q QWORD "[vstack:4|q]" v5|q v5|q [147, 153[ "OneSpillStore"
  v163|d DWORD "[vstack:5|d]" v9|d v9|d [153, 258[ "SpillInDominator"
  v164|q QWORD "[vstack:4|q]" v5|q v5|q [153, 271[[282, 529[[540, 768[270 ShouldHaveRegister 528 ShouldHaveRegister  "OneSpillStore"
  v165|q QWORD "[rdx|q]" v1|q v1|q [158, 160[160 MustHaveRegister  "SpillInDominator"
  v166|d DWORD "[rbx|d]" v26|d v26|d [158, 160[160 MustHaveRegister  "SpillInDominator"
  v167|d DWORD "[r8|d]" v8|d v8|d [258, 274[[282, 298[268 MustHaveRegister 274 MustHaveRegister  "SpillInDominator"
  v168|d DWORD "[r9|d]" v9|d v9|d [258, 278[[282, 298[278 MustHaveRegister  "SpillInDominator"
  v169|d DWORD "[vstack:1|d]" v26|d v26|d [298, 303[ "SpillInDominator"
  v170|q QWORD "[r10|q]" v1|q v1|q [164, 226[190 MustHaveRegister 196 MustHaveRegister  "SpillInDominator"
  v171|q QWORD "[vstack:0|q]" v1|q v1|q [226, 241[ "SpillInDominator"
  v172|d DWORD "[vstack:6|d]" v71|d v71|d [226, 241[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v96|d v96|d [226, 241[ "OneSpillStore"
  v174|d DWORD "[vstack:8|d]" v96|d v96|d [241, 244[244 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[vstack:6|d]" v71|d v71|d [241, 244[[328, 358[[568, 596[[674, 752[[760, 772[[788, 800[[828, 832[244 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:0|q]" v1|q v1|q [241, 245[ "SpillInDominator"
  v177|q QWORD "[vstack:9|q]" v2|q v2|q [241, 249[ "SpillInDominator"
  v178|d DWORD "[r8|d]" v71|d v71|d [832, 839[ "OneSpillStore"
  v179|q QWORD "[rdx|q]" v1|q v1|q [245, 254[[282, 301[246 MustHaveRegister 248 MustHaveRegister 254 MustHaveRegister 300 ShouldHaveRegister  "SpillInDominator"
  v180|q QWORD "[rcx|q]" v2|q v2|q [249, 250[[282, 298[250 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister  "SpillInDominator"
  v181|q QWORD "[vstack:0|q]" v1|q v1|q [301, 307[ "SpillInDominator"
  v182|q QWORD "[vstack:9|q]" v2|q v2|q [298, 303[ "SpillInDominator"
  v183|d DWORD "[vstack:3|d]" v8|d v8|d [298, 303[ "SpillInDominator"
  v184|d DWORD "[vstack:5|d]" v9|d v9|d [298, 303[ "SpillInDominator"
  v185|q QWORD "[vstack:10|q]" v21|q v21|q [303, 314[314 ShouldHaveRegister  "SpillInDominator"
  v186|q QWORD "[vstack:9|q]" v2|q v2|q [303, 377[[380, 400[360 ShouldHaveRegister  "SpillInDominator"
  v187|d DWORD "[vstack:3|d]" v8|d v8|d [303, 516[ "SpillInDominator"
  v188|d DWORD "[vstack:5|d]" v9|d v9|d [303, 516[ "SpillInDominator"
  v189|d DWORD "[vstack:1|d]" v26|d v26|d [303, 328[[380, 426[[540, 568[[596, 674[[752, 760[[772, 776[[800, 804[[840, 848[ "SpillInDominator"
  v190|q QWORD "[rdx|q]" v1|q v1|q [307, 315[308 MustHaveRegister  "SpillInDominator"
  v191|q QWORD "[vstack:10|q]" v21|q v21|q [328, 333[ "SpillInDominator"
  v192|q QWORD "[rcx|q]" v2|q v2|q [426, 433[428 MustHaveRegister 432 MustHaveRegister  "SpillInDominator"
  v193|d DWORD "[r8|d]" v8|d v8|d [516, 532[[540, 768[526 MustHaveRegister 532 MustHaveRegister  "SpillInDominator"
  v194|d DWORD "[r9|d]" v9|d v9|d [516, 536[[540, 768[536 MustHaveRegister  "SpillInDominator"
  v195|d DWORD "[rbx|d]" v26|d v26|d [848, 855[ "SpillInDominator"
  v196|q QWORD "[vstack:0|q]" v1|q v1|q [315, 328[ "SpillInDominator"
  v197|q QWORD "[rdx|q]" v1|q v1|q [328, 331[330 ShouldHaveRegister  "SpillInDominator"
  v198|q QWORD "[vstack:0|q]" v1|q v1|q [331, 337[ "SpillInDominator"
  v199|q QWORD "[vstack:10|q]" v21|q v21|q [333, 344[344 ShouldHaveRegister  "SpillInDominator"
  v200|q QWORD "[rdx|q]" v1|q v1|q [337, 345[338 MustHaveRegister  "SpillInDominator"
  v201|q QWORD "[vstack:0|q]" v1|q v1|q [345, 377[[380, 454[372 ShouldHaveRegister 382 ShouldHaveRegister  "SpillInDominator"
  v202|q QWORD "[rdx|q]" v1|q v1|q [454, 461[456 MustHaveRegister 460 ShouldHaveRegister  "SpillInDominator"
  v203|d DWORD "[vstack:11|d]" v46|d v46|d [383, 388[ "OneSpillStore"
  v204|d DWORD "[r11|d]" v46|d v46|d [388, 408[[772, 776[[800, 804[[840, 855[390 MustHaveRegister 396 ShouldHaveRegister 408 ShouldHaveRegister  "OneSpillStore"
  v205|q QWORD "[r8|q]" v2|q v2|q [433, 463[462 ShouldHaveRegister  "SpillInDominator"
  v206|q QWORD "[vstack:9|q]" v2|q v2|q [463, 507[[540, 787[[788, 819[[820, 827[[828, 839[[840, 848[504 ShouldHaveRegister  "SpillInDominator"
  v207|d DWORD "[vstack:13|d]" v130|d v130|d [458, 463[ "OneSpillStore"
  v208|d DWORD "[vstack:14|d]" v131|d v131|d [458, 463[ "OneSpillStore"
  v209|d DWORD "[vstack:12|d]" v132|d v132|d [458, 463[ "SpillInDominator"
  v210|q QWORD "[vstack:0|q]" v1|q v1|q [461, 470[ "SpillInDominator"
  v211|d DWORD "[vstack:12|d]" v132|d v132|d [463, 478[ "SpillInDominator"
  v212|d DWORD "[vstack:13|d]" v130|d v130|d [463, 496[ "OneSpillStore"
  v213|d DWORD "[vstack:14|d]" v131|d v131|d [463, 496[[780, 787[ "OneSpillStore"
  v214|q QWORD "[rdx|q]" v1|q v1|q [470, 485[472 MustHaveRegister 484 ShouldHaveRegister  "SpillInDominator"
  v215|d DWORD "[rbx|d]" v132|d v132|d [478, 482[480 MustHaveRegister  "SpillInDominator"
  v216|d DWORD "[r9|d]" v130|d v130|d [496, 498[498 ShouldHaveRegister  "OneSpillStore"
  v217|q QWORD "[rcx|q]" v2|q v2|q [848, 855[ "SpillInDominator"
  v218|d DWORD "[rcx|d]" v131|d v131|d [820, 827[ "OneSpillStore"
  v219|q QWORD "[vstack:0|q]" v1|q v1|q [485, 507[495 LiveAtLoopEnd 502 ShouldHaveRegister  "SpillInDominator"
  v220|d DWORD "[vstack:12|d]" v132|d v132|d [482, 487[ "SpillInDominator"
  v221|d DWORD "[vstack:15|d]" v134|d v134|d [482, 487[ "OneSpillStore"
  v222|d DWORD "[vstack:15|d]" v134|d v134|d [487, 492[492 ShouldHaveRegister  "OneSpillStore"
  v223|d DWORD "[vstack:12|d]" v132|d v132|d [487, 496[495 LiveAtLoopEnd  "SpillInDominator"
  v224|q QWORD "[rdx|q]" v1|q v1|q [540, 787[[788, 819[[820, 827[[828, 839[[840, 855[542 MustHaveRegister 570 MustHaveRegister 612 MustHaveRegister 614 ShouldHaveRegister 626 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister 704 MustHaveRegister  "SpillInDominator"
  v225|d DWORD "[rbx|d]" v132|d v132|d [820, 827[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVE v152|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v151|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = STACKMOVE (input: v154|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = STACKMOVE (input: v162|QWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = STACKMOVE (input: v153|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v157|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v179|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = STACKMOVE (input: v169|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = STACKMOVE (input: v184|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = STACKMOVE (input: v182|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v181|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = STACKMOVE (input: v191|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v198|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v200|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v202|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = STACKMOVE (input: v208|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = STACKMOVE (input: v207|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = STACKMOVE (input: v209|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = STACKMOVE (input: v220|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = STACKMOVE (input: v221|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  766  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[154, 155[[242, 243[[260, 266[[304, 306[[318, 320[[334, 336[[348, 350[[362, 364[[368, 370[[376, 377[[384, 385[[464, 466[[488, 490[[506, 508[[518, 524[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v18|d [0, 10[[64, 67[[80, 83[[128, 131[[154, 155[[200, 203[[210, 213[[242, 243[[304, 305[[310, 313[[318, 319[[334, 335[[340, 343[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[420, 422[[434, 437[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v60|q [0, 8[[12, 14[[152, 155[[240, 243[[260, 262[[302, 305[[316, 319[[332, 335[[346, 349[[362, 363[[368, 369[[374, 377[[384, 385[[418, 423[[462, 465[[486, 489[[504, 507[[518, 520[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[150, 155[[238, 243[[300, 305[[314, 319[[330, 335[[344, 349[[360, 363[[366, 369[[372, 377[[382, 385[[416, 423[[460, 465[[484, 489[[502, 507[[602, 604[[680, 682[[754, 756[[762, 764[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[148, 155[[236, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 77[[164, 168[[282, 298[[426, 442[[776, 780[[804, 819[6 MustHaveRegister 38 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 11[8 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 63[10 MustHaveRegister 58 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rdi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|q [18, 140[18 MustHaveRegister  "OneSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [24, 140[24 MustHaveRegister 32 MustHaveRegister  "StoreAtDefinition"
  v9|d DWORD "[r9|d]" v9|d -1 [26, 140[26 MustHaveRegister 34 MustHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rdx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [38, 42[[282, 298[[426, 450[[454, 458[[780, 787[38 MustHaveRegister 40 ShouldHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d -1 [54, 68[54 MustHaveRegister 56 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [56, 66[56 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbx|d]" v17|d -1 [58, 70[58 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [62, 84[[164, 172[62 MustHaveRegister 84 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v16|d [66, 87[[164, 175[66 MustHaveRegister 86 ShouldHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v15|d [68, 90[[164, 181[68 MustHaveRegister 180 ShouldHaveRegister  "StoreAtDefinition"
  v23|d DWORD "[rcx|d]" v23|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [76, 82[76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d v24|d [82, 140[82 MustHaveRegister 84 ShouldHaveRegister  "StoreAtDefinition"
  v27|d DWORD "[rbp|d]" v27|d v19|d [84, 90[[298, 302[84 MustHaveRegister 86 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v27|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|d [306, 312[306 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [308, 310[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v29|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q rax|d [320, 328[[540, 568[[596, 620[320 MustHaveRegister 610 MustHaveRegister 614 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [542, 544[542 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [544, 552[544 MustHaveRegister 546 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q -1 [550, 562[550 MustHaveRegister 554 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [552, 560[[600, 602[552 MustHaveRegister 560 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [558, 560[558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [562, 564[562 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rsi|d]" v39|d v32|q [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v1|q [614, 616[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[r10|q]" v41|q v1|q [626, 630[[642, 648[[652, 658[626 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [656, 668[656 MustHaveRegister 660 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v41|q [658, 666[[752, 754[658 MustHaveRegister 666 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [96, 140[96 MustHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d -1 [108, 120[108 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [110, 146[[388, 420[110 MustHaveRegister 136 ShouldHaveRegister 146 ShouldHaveRegister 396 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [112, 118[112 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [114, 136[[388, 394[114 MustHaveRegister 136 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v52|d -1 [116, 126[116 MustHaveRegister 122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|d [118, 144[[388, 404[118 MustHaveRegister 144 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r14|q]" v54|q v48|d [120, 142[[388, 402[120 MustHaveRegister 142 ShouldHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbp|d]" v56|d v46|d [130, 150[130 MustHaveRegister 132 MustHaveRegister 138 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rdx|d]" v57|d v51|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v54|q [142, 148[142 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v53|q [144, 150[144 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q -1 [146, 152[146 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v51|d [394, 398[394 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v46|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [848, 850[850 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r14|q]" v64|q v54|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v53|q [404, 414[404 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [406, 416[406 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q v67|q [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [414, 418[414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [170, 226[170 MustHaveRegister 172 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v72|d v71|d [172, 178[[328, 332[172 MustHaveRegister 174 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d v72|d [174, 176[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rax|d]" v74|d rax|d [336, 342[336 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rcx|d]" v75|d -1 [338, 340[338 MustHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d v74|d [342, 346[342 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|d [350, 358[[568, 596[[674, 711[[712, 715[[716, 719[[720, 729[[730, 751[[760, 767[350 MustHaveRegister 688 MustHaveRegister 692 ShouldHaveRegister 698 MustHaveRegister 710 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister 728 ShouldHaveRegister 750 ShouldHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [572, 580[572 MustHaveRegister 574 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [578, 590[578 MustHaveRegister 582 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q v79|d [580, 588[[678, 680[580 MustHaveRegister 588 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v77|q [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q v1|q [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v1|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r10|q]" v88|q v86|q [736, 744[[760, 762[736 MustHaveRegister 744 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rdx|q]" v91|q v21|q [182, 232[188 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [184, 228[184 MustHaveRegister 186 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [186, 218[186 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [188, 222[188 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rcx|d]" v95|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d -1 [196, 226[196 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[rbx|d]" v97|d -1 [198, 210[198 MustHaveRegister 200 ShouldHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v96|d [202, 238[202 MustHaveRegister 204 MustHaveRegister 224 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rbp|d]" v99|d -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rbp|d]" v100|d v99|d [212, 234[212 MustHaveRegister 214 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v94|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rdi|q]" v102|q v92|d [228, 230[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rdi|q]" v103|q v102|q [230, 236[230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdx|q]" v104|q v91|q [232, 238[232 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q -1 [234, 240[234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r8|d]" v106|d v71|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [248, 252[248 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rsi|d]" v108|d -1 [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v107|d [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [832, 834[834 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [832, 836[836 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|d [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q v114|q [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q v115|q [266, 270[266 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rdx|q]" v117|q -1 [268, 276[268 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|q [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v118|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [284, 288[284 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r10|q]" v122|q v121|d [288, 291[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rbx|q]" v123|q -1 [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r10|d]" v124|d v129|d [294, 297[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v126|d DWORD "[rdx|d]" v126|d -1 [430, 436[430 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[r10|d]" v127|d -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rdx|d]" v128|d v126|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r10|d]" v129|d v124|d [440, 450[[454, 458[[780, 787[446 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r9|d]" v130|d -1 [442, 458[442 MustHaveRegister 444 MustHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v131|d DWORD "[rcx|d]" v131|d v130|d [444, 458[444 MustHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v11|d [446, 458[446 MustHaveRegister  "StoreAtDefinition"
  v133|q QWORD "[rax|q]" v133|q rax|d [466, 467[466 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[r10|d]" v134|d v136|d [478, 482[480 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[rax|q]" v135|q rax|d [490, 491[490 MustHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v134|d [492, 495[492 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[rax|q]" v137|q rax|d [508, 509[508 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[rsi|q]" v138|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[rsi|q]" v139|q v138|q [522, 524[522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[rsi|q]" v140|q v139|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r10|q]" v141|q -1 [526, 534[526 MustHaveRegister 530 ShouldHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rsi|q]" v142|q v140|q [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[rsi|q]" v143|q v142|q [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r10|q]" v144|q v141|q [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v145|d DWORD "[r10|d]" v145|d -1 [812, 814[814 MustHaveRegister  "NoSpillStore"
  v146|q QWORD "[r11|q]" v146|q -1 [812, 816[816 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q -1 [702, 708[[720, 726[[730, 736[702 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rsi|q]" v148|q -1 [624, 630[[642, 648[[652, 658[624 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v149|q QWORD "[r10|q]" v1|q v1|q [11, 140[44 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 116 MustHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[r13|q]" v2|q v2|q [63, 140[[164, 226[74 MustHaveRegister 78 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 122 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 192 MustHaveRegister 208 MustHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:0|q]" v1|q v1|q [140, 151[ "StoreAtDefinition"
  v152|q QWORD "[vstack:4|q]" v5|q v5|q [140, 147[ "OneSpillStore"
  v153|d DWORD "[vstack:3|d]" v8|d v8|d [140, 153[ "StoreAtDefinition"
  v154|d DWORD "[vstack:5|d]" v9|d v9|d [140, 153[ "StoreAtDefinition"
  v155|q QWORD "[vstack:9|q]" v2|q v2|q [226, 241[ "StoreAtDefinition"
  v156|q QWORD "[vstack:10|q]" v21|q v21|q [298, 303[ "StoreAtDefinition"
  v157|d DWORD "[vstack:1|d]" v26|d v26|d [140, 153[ "StoreAtDefinition"
  v158|d DWORD "[vstack:11|d]" v46|d v46|d [380, 383[ "OneSpillStore"
  v159|d DWORD "[vstack:1|d]" v26|d v26|d [153, 158[ "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [151, 158[ "StoreAtDefinition"
  v161|d DWORD "[vstack:3|d]" v8|d v8|d [153, 258[ "StoreAtDefinition"
  v162|q QWORD "[vstack:4|q]" v5|q v5|q [147, 153[ "OneSpillStore"
  v163|d DWORD "[vstack:5|d]" v9|d v9|d [153, 258[ "StoreAtDefinition"
  v164|q QWORD "[vstack:4|q]" v5|q v5|q [153, 271[[282, 529[[540, 768[270 ShouldHaveRegister 528 ShouldHaveRegister  "OneSpillStore"
  v165|q QWORD "[rdx|q]" v1|q v1|q [158, 160[160 MustHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[rbx|d]" v26|d v26|d [158, 160[160 MustHaveRegister  "StoreAtDefinition"
  v167|d DWORD "[r8|d]" v8|d v8|d [258, 274[[282, 298[268 MustHaveRegister 274 MustHaveRegister  "StoreAtDefinition"
  v168|d DWORD "[r9|d]" v9|d v9|d [258, 278[[282, 298[278 MustHaveRegister  "StoreAtDefinition"
  v169|d DWORD "[vstack:1|d]" v26|d v26|d [298, 303[ "StoreAtDefinition"
  v170|q QWORD "[r10|q]" v1|q v1|q [164, 226[190 MustHaveRegister 196 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:0|q]" v1|q v1|q [226, 241[ "StoreAtDefinition"
  v172|d DWORD "[vstack:6|d]" v71|d v71|d [226, 241[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v96|d v96|d [226, 241[ "OneSpillStore"
  v174|d DWORD "[vstack:8|d]" v96|d v96|d [241, 244[244 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[vstack:6|d]" v71|d v71|d [241, 244[[328, 358[[568, 596[[674, 752[[760, 772[[788, 800[[828, 832[244 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:0|q]" v1|q v1|q [241, 245[ "StoreAtDefinition"
  v177|q QWORD "[vstack:9|q]" v2|q v2|q [241, 249[ "StoreAtDefinition"
  v178|d DWORD "[r8|d]" v71|d v71|d [832, 839[ "OneSpillStore"
  v179|q QWORD "[rdx|q]" v1|q v1|q [245, 254[[282, 301[246 MustHaveRegister 248 MustHaveRegister 254 MustHaveRegister 300 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[rcx|q]" v2|q v2|q [249, 250[[282, 298[250 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister  "StoreAtDefinition"
  v181|q QWORD "[vstack:0|q]" v1|q v1|q [301, 307[ "StoreAtDefinition"
  v182|q QWORD "[vstack:9|q]" v2|q v2|q [298, 303[ "StoreAtDefinition"
  v183|d DWORD "[vstack:3|d]" v8|d v8|d [298, 303[ "StoreAtDefinition"
  v184|d DWORD "[vstack:5|d]" v9|d v9|d [298, 303[ "StoreAtDefinition"
  v185|q QWORD "[vstack:10|q]" v21|q v21|q [303, 314[314 ShouldHaveRegister  "StoreAtDefinition"
  v186|q QWORD "[vstack:9|q]" v2|q v2|q [303, 377[[380, 400[360 ShouldHaveRegister  "StoreAtDefinition"
  v187|d DWORD "[vstack:3|d]" v8|d v8|d [303, 516[ "StoreAtDefinition"
  v188|d DWORD "[vstack:5|d]" v9|d v9|d [303, 516[ "StoreAtDefinition"
  v189|d DWORD "[vstack:1|d]" v26|d v26|d [303, 328[[380, 426[[540, 568[[596, 674[[752, 760[[772, 776[[800, 804[[840, 848[ "StoreAtDefinition"
  v190|q QWORD "[rdx|q]" v1|q v1|q [307, 315[308 MustHaveRegister  "StoreAtDefinition"
  v191|q QWORD "[vstack:10|q]" v21|q v21|q [328, 333[ "StoreAtDefinition"
  v192|q QWORD "[rcx|q]" v2|q v2|q [426, 433[428 MustHaveRegister 432 MustHaveRegister  "StoreAtDefinition"
  v193|d DWORD "[r8|d]" v8|d v8|d [516, 532[[540, 768[526 MustHaveRegister 532 MustHaveRegister  "StoreAtDefinition"
  v194|d DWORD "[r9|d]" v9|d v9|d [516, 536[[540, 768[536 MustHaveRegister  "StoreAtDefinition"
  v195|d DWORD "[rbx|d]" v26|d v26|d [848, 855[ "StoreAtDefinition"
  v196|q QWORD "[vstack:0|q]" v1|q v1|q [315, 328[ "StoreAtDefinition"
  v197|q QWORD "[rdx|q]" v1|q v1|q [328, 331[330 ShouldHaveRegister  "StoreAtDefinition"
  v198|q QWORD "[vstack:0|q]" v1|q v1|q [331, 337[ "StoreAtDefinition"
  v199|q QWORD "[vstack:10|q]" v21|q v21|q [333, 344[344 ShouldHaveRegister  "StoreAtDefinition"
  v200|q QWORD "[rdx|q]" v1|q v1|q [337, 345[338 MustHaveRegister  "StoreAtDefinition"
  v201|q QWORD "[vstack:0|q]" v1|q v1|q [345, 377[[380, 454[372 ShouldHaveRegister 382 ShouldHaveRegister  "StoreAtDefinition"
  v202|q QWORD "[rdx|q]" v1|q v1|q [454, 461[456 MustHaveRegister 460 ShouldHaveRegister  "StoreAtDefinition"
  v203|d DWORD "[vstack:11|d]" v46|d v46|d [383, 388[ "OneSpillStore"
  v204|d DWORD "[r11|d]" v46|d v46|d [388, 408[[772, 776[[800, 804[[840, 855[390 MustHaveRegister 396 ShouldHaveRegister 408 ShouldHaveRegister  "OneSpillStore"
  v205|q QWORD "[r8|q]" v2|q v2|q [433, 463[462 ShouldHaveRegister  "StoreAtDefinition"
  v206|q QWORD "[vstack:9|q]" v2|q v2|q [463, 507[[540, 787[[788, 819[[820, 827[[828, 839[[840, 848[504 ShouldHaveRegister  "StoreAtDefinition"
  v207|d DWORD "[vstack:13|d]" v130|d v130|d [458, 463[ "OneSpillStore"
  v208|d DWORD "[vstack:14|d]" v131|d v131|d [458, 463[ "OneSpillStore"
  v209|d DWORD "[vstack:12|d]" v132|d v132|d [458, 463[ "StoreAtDefinition"
  v210|q QWORD "[vstack:0|q]" v1|q v1|q [461, 470[ "StoreAtDefinition"
  v211|d DWORD "[vstack:12|d]" v132|d v132|d [463, 478[ "StoreAtDefinition"
  v212|d DWORD "[vstack:13|d]" v130|d v130|d [463, 496[ "OneSpillStore"
  v213|d DWORD "[vstack:14|d]" v131|d v131|d [463, 496[[780, 787[ "OneSpillStore"
  v214|q QWORD "[rdx|q]" v1|q v1|q [470, 485[472 MustHaveRegister 484 ShouldHaveRegister  "StoreAtDefinition"
  v215|d DWORD "[rbx|d]" v132|d v132|d [478, 482[480 MustHaveRegister  "StoreAtDefinition"
  v216|d DWORD "[r9|d]" v130|d v130|d [496, 498[498 ShouldHaveRegister  "OneSpillStore"
  v217|q QWORD "[rcx|q]" v2|q v2|q [848, 855[ "StoreAtDefinition"
  v218|d DWORD "[rcx|d]" v131|d v131|d [820, 827[ "OneSpillStore"
  v219|q QWORD "[vstack:0|q]" v1|q v1|q [485, 507[495 LiveAtLoopEnd 502 ShouldHaveRegister  "StoreAtDefinition"
  v220|d DWORD "[vstack:12|d]" v132|d v132|d [482, 487[ "StoreAtDefinition"
  v221|d DWORD "[vstack:15|d]" v134|d v134|d [482, 487[ "OneSpillStore"
  v222|d DWORD "[vstack:15|d]" v134|d v134|d [487, 492[492 ShouldHaveRegister  "OneSpillStore"
  v223|d DWORD "[vstack:12|d]" v132|d v132|d [487, 496[495 LiveAtLoopEnd  "StoreAtDefinition"
  v224|q QWORD "[rdx|q]" v1|q v1|q [540, 787[[788, 819[[820, 827[[828, 839[[840, 855[542 MustHaveRegister 570 MustHaveRegister 612 MustHaveRegister 614 ShouldHaveRegister 626 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister 704 MustHaveRegister  "StoreAtDefinition"
  v225|d DWORD "[rbx|d]" v132|d v132|d [820, 827[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVE v152|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v151|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = STACKMOVE (input: v154|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = STACKMOVE (input: v162|QWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = STACKMOVE (input: v153|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v157|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[v124|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v179|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = STACKMOVE (input: v169|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = STACKMOVE (input: v184|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = STACKMOVE (input: v182|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v181|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = STACKMOVE (input: v191|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v198|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v200|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[v128|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v202|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = STACKMOVE (input: v208|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = STACKMOVE (input: v207|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = STACKMOVE (input: v209|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = STACKMOVE (input: v220|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = STACKMOVE (input: v221|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[v136|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  766  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction JUMP ~[int[-197657|0xfffffffffffcfbe7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction JUMP ~[int[-189465|0xfffffffffffd1be7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction JUMP ~[int[-123443|0xfffffffffffe1dcd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction JUMP ~[int[-196633|0xfffffffffffcffe7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction JUMP ~[int[-195609|0xfffffffffffd03e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction JUMP ~[int[-194579|0xfffffffffffd07ed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[int[-188441|0xfffffffffffd1fe7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction JUMP ~[int[-23347|0xffffffffffffa4cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[int[-34099|0xffffffffffff7acd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction JUMP ~[int[-198681|0xfffffffffffcf7e7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[int[-186393|0xfffffffffffd27e7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction JUMP ~[int[-190489|0xfffffffffffd17e7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[154, 155[[242, 243[[260, 266[[304, 306[[318, 320[[334, 336[[348, 350[[362, 364[[368, 370[[376, 377[[384, 385[[464, 466[[488, 490[[506, 508[[518, 524[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v18|d [0, 10[[64, 67[[80, 83[[128, 131[[154, 155[[200, 203[[210, 213[[242, 243[[304, 305[[310, 313[[318, 319[[334, 335[[340, 343[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[420, 422[[434, 437[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v60|q [0, 8[[12, 14[[152, 155[[240, 243[[260, 262[[302, 305[[316, 319[[332, 335[[346, 349[[362, 363[[368, 369[[374, 377[[384, 385[[418, 423[[462, 465[[486, 489[[504, 507[[518, 520[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[150, 155[[238, 243[[300, 305[[314, 319[[330, 335[[344, 349[[360, 363[[366, 369[[372, 377[[382, 385[[416, 423[[460, 465[[484, 489[[502, 507[[602, 604[[680, 682[[754, 756[[762, 764[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[148, 155[[236, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[422, 423[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[154, 155[[242, 243[[304, 305[[318, 319[[334, 335[[348, 349[[362, 363[[368, 369[[376, 377[[384, 385[[464, 465[[488, 489[[506, 507[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 77[[164, 168[[282, 298[[426, 442[[776, 780[[804, 819[6 MustHaveRegister 38 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|d [8, 11[8 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 63[10 MustHaveRegister 58 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rdi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rdi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|q [18, 140[18 MustHaveRegister  "OneSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [24, 140[24 MustHaveRegister 32 MustHaveRegister  "StoreAtDefinition"
  v9|d DWORD "[r9|d]" v9|d -1 [26, 140[26 MustHaveRegister 34 MustHaveRegister  "StoreAtDefinition"
  v10|d DWORD "[rdx|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d -1 [38, 42[[282, 298[[426, 450[[454, 458[[780, 787[38 MustHaveRegister 40 ShouldHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rdx|d]" v12|d -1 [44, 48[44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdx|q]" v13|q v12|d [48, 51[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q -1 [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d -1 [54, 68[54 MustHaveRegister 56 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [56, 66[56 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbx|d]" v17|d -1 [58, 70[58 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbp|d]" v19|d -1 [62, 84[[164, 172[62 MustHaveRegister 84 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[r11|d]" v20|d v16|d [66, 87[[164, 175[66 MustHaveRegister 86 ShouldHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdx|q]" v21|q v15|d [68, 90[[164, 181[68 MustHaveRegister 180 ShouldHaveRegister  "StoreAtDefinition"
  v23|d DWORD "[rcx|d]" v23|d -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d -1 [76, 82[76 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rcx|d]" v25|d -1 [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d v24|d [82, 140[82 MustHaveRegister 84 ShouldHaveRegister  "StoreAtDefinition"
  v27|d DWORD "[rbp|d]" v27|d v19|d [84, 90[[298, 302[84 MustHaveRegister 86 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d v27|d [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d rax|d [306, 312[306 MustHaveRegister 312 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [308, 310[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v29|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q rax|d [320, 328[[540, 568[[596, 620[320 MustHaveRegister 610 MustHaveRegister 614 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [542, 544[542 MustHaveRegister 544 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [544, 552[544 MustHaveRegister 546 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q -1 [550, 562[550 MustHaveRegister 554 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [552, 560[[600, 602[552 MustHaveRegister 560 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [558, 560[558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [562, 564[562 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rsi|d]" v39|d v32|q [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v1|q [614, 616[614 MustHaveRegister 616 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[r10|q]" v41|q v1|q [626, 630[[642, 648[[652, 658[626 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [656, 668[656 MustHaveRegister 660 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q v41|q [658, 666[[752, 754[658 MustHaveRegister 666 MustHaveRegister 754 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d -1 [96, 140[96 MustHaveRegister 130 ShouldHaveRegister  "OneSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rcx|d]" v48|d -1 [108, 120[108 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [110, 146[[388, 420[110 MustHaveRegister 136 ShouldHaveRegister 146 ShouldHaveRegister 396 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [112, 118[112 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d -1 [114, 136[[388, 394[114 MustHaveRegister 136 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rbp|d]" v52|d -1 [116, 126[116 MustHaveRegister 122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|d [118, 144[[388, 404[118 MustHaveRegister 144 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r14|q]" v54|q v48|d [120, 142[[388, 402[120 MustHaveRegister 142 ShouldHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rcx|d]" v55|d -1 [126, 128[126 MustHaveRegister 128 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbp|d]" v56|d v46|d [130, 150[130 MustHaveRegister 132 MustHaveRegister 138 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v57|d DWORD "[rdx|d]" v57|d v51|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v54|q [142, 148[142 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v53|q [144, 150[144 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r10|q]" v60|q -1 [146, 152[146 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d v51|d [394, 398[394 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rcx|d]" v62|d v46|d [396, 398[396 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [848, 850[850 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r14|q]" v64|q v54|q [402, 406[402 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v53|q [404, 414[404 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [406, 416[406 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q -1 [408, 410[408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rcx|q]" v68|q v67|q [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rcx|q]" v69|q -1 [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q v69|q [414, 418[414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [170, 226[170 MustHaveRegister 172 ShouldHaveRegister  "OneSpillStore"
  v72|d DWORD "[r9|d]" v72|d v71|d [172, 178[[328, 332[172 MustHaveRegister 174 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[rcx|d]" v73|d v72|d [174, 176[174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rax|d]" v74|d rax|d [336, 342[336 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[rcx|d]" v75|d -1 [338, 340[338 MustHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v76|d DWORD "[rax|d]" v76|d v74|d [342, 346[342 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|d [350, 358[[568, 596[[674, 711[[712, 715[[716, 719[[720, 729[[730, 751[[760, 767[350 MustHaveRegister 688 MustHaveRegister 692 ShouldHaveRegister 698 MustHaveRegister 710 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister 728 ShouldHaveRegister 750 ShouldHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [572, 580[572 MustHaveRegister 574 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [578, 590[578 MustHaveRegister 582 MustHaveRegister 588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q v79|d [580, 588[[678, 680[580 MustHaveRegister 588 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [586, 588[586 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d v77|q [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q v1|q [692, 694[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q v1|q [704, 708[[720, 726[[730, 736[704 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [734, 746[734 MustHaveRegister 738 MustHaveRegister 744 MustHaveRegister 746 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r10|q]" v88|q v86|q [736, 744[[760, 762[736 MustHaveRegister 744 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rsi|q]" v89|q -1 [742, 744[742 MustHaveRegister 744 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rdx|q]" v91|q v21|q [182, 232[188 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rdi|d]" v92|d -1 [184, 228[184 MustHaveRegister 186 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d -1 [186, 218[186 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [188, 222[188 MustHaveRegister 222 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[rcx|d]" v95|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v96|d DWORD "[r9|d]" v96|d -1 [196, 226[196 MustHaveRegister 202 ShouldHaveRegister  "OneSpillStore"
  v97|d DWORD "[rbx|d]" v97|d -1 [198, 210[198 MustHaveRegister 200 ShouldHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v96|d [202, 238[202 MustHaveRegister 204 MustHaveRegister 224 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rbp|d]" v99|d -1 [208, 212[208 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rbp|d]" v100|d v99|d [212, 234[212 MustHaveRegister 214 MustHaveRegister 218 MustHaveRegister 222 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v94|d [222, 224[222 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v102|q QWORD "[rdi|q]" v102|q v92|d [228, 230[228 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v103|q QWORD "[rdi|q]" v103|q v102|q [230, 236[230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rdx|q]" v104|q v91|q [232, 238[232 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[r11|q]" v105|q -1 [234, 240[234 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r8|d]" v106|d v71|d [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d -1 [248, 252[248 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v108|d DWORD "[rsi|d]" v108|d -1 [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d v107|d [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [832, 834[834 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [832, 836[836 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rax|q]" v112|q rax|d [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q rax|d [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [262, 264[262 MustHaveRegister 264 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q v114|q [264, 266[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rsi|q]" v116|q v115|q [266, 270[266 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rdx|q]" v117|q -1 [268, 276[268 MustHaveRegister 272 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|q [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v118|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d -1 [284, 288[284 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v122|q QWORD "[r10|q]" v122|q v121|d [288, 291[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v123|q QWORD "[rbx|q]" v123|q -1 [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[r10|d]" v124|d v129|d [294, 297[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v126|d DWORD "[rdx|d]" v126|d -1 [430, 436[430 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v127|d DWORD "[r10|d]" v127|d -1 [432, 434[432 MustHaveRegister 434 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[rdx|d]" v128|d v126|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v129|d DWORD "[r10|d]" v129|d v124|d [440, 450[[454, 458[[780, 787[446 ShouldHaveRegister  "NoSpillStore"
  v130|d DWORD "[r9|d]" v130|d -1 [442, 458[442 MustHaveRegister 444 MustHaveRegister 448 ShouldHaveRegister  "OneSpillStore"
  v131|d DWORD "[rcx|d]" v131|d v130|d [444, 458[444 MustHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbx|d]" v132|d v11|d [446, 458[446 MustHaveRegister  "StoreAtDefinition"
  v133|q QWORD "[rax|q]" v133|q rax|d [466, 467[466 MustHaveRegister  "NoSpillStore"
  v134|d DWORD "[r10|d]" v134|d v136|d [478, 482[480 ShouldHaveRegister  "OneSpillStore"
  v135|q QWORD "[rax|q]" v135|q rax|d [490, 491[490 MustHaveRegister  "NoSpillStore"
  v136|d DWORD "[r10|d]" v136|d v134|d [492, 495[492 MustHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v137|q QWORD "[rax|q]" v137|q rax|d [508, 509[508 MustHaveRegister  "NoSpillStore"
  v138|q QWORD "[rsi|q]" v138|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v139|q QWORD "[rsi|q]" v139|q v138|q [522, 524[522 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v140|q QWORD "[rsi|q]" v140|q v139|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v141|q QWORD "[r10|q]" v141|q -1 [526, 534[526 MustHaveRegister 530 ShouldHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v142|q QWORD "[rsi|q]" v142|q v140|q [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v143|q QWORD "[rsi|q]" v143|q v142|q [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v144|q QWORD "[r10|q]" v144|q v141|q [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v145|d DWORD "[r10|d]" v145|d -1 [812, 814[814 MustHaveRegister  "NoSpillStore"
  v146|q QWORD "[r11|q]" v146|q -1 [812, 816[816 MustHaveRegister  "NoSpillStore"
  v147|q QWORD "[rsi|q]" v147|q -1 [702, 708[[720, 726[[730, 736[702 MustHaveRegister 706 MustHaveRegister 724 MustHaveRegister 732 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v148|q QWORD "[rsi|q]" v148|q -1 [624, 630[[642, 648[[652, 658[624 MustHaveRegister 628 MustHaveRegister 646 MustHaveRegister 654 MustHaveRegister 658 ShouldHaveRegister  "NoSpillStore"
  v149|q QWORD "[r10|q]" v1|q v1|q [11, 140[44 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister 62 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 116 MustHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[r13|q]" v2|q v2|q [63, 140[[164, 226[74 MustHaveRegister 78 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 122 MustHaveRegister 166 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 192 MustHaveRegister 208 MustHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:0|q]" v1|q v1|q [140, 151[ "StoreAtDefinition"
  v152|q QWORD "[vstack:4|q]" v5|q v5|q [140, 147[ "OneSpillStore"
  v153|d DWORD "[vstack:3|d]" v8|d v8|d [140, 153[ "StoreAtDefinition"
  v154|d DWORD "[vstack:5|d]" v9|d v9|d [140, 153[ "StoreAtDefinition"
  v155|q QWORD "[vstack:9|q]" v2|q v2|q [226, 241[ "StoreAtDefinition"
  v156|q QWORD "[vstack:10|q]" v21|q v21|q [298, 303[ "StoreAtDefinition"
  v157|d DWORD "[vstack:1|d]" v26|d v26|d [140, 153[ "StoreAtDefinition"
  v158|d DWORD "[vstack:11|d]" v46|d v46|d [380, 383[ "OneSpillStore"
  v159|d DWORD "[vstack:1|d]" v26|d v26|d [153, 158[ "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [151, 158[ "StoreAtDefinition"
  v161|d DWORD "[vstack:3|d]" v8|d v8|d [153, 258[ "StoreAtDefinition"
  v162|q QWORD "[vstack:4|q]" v5|q v5|q [147, 153[ "OneSpillStore"
  v163|d DWORD "[vstack:5|d]" v9|d v9|d [153, 258[ "StoreAtDefinition"
  v164|q QWORD "[vstack:4|q]" v5|q v5|q [153, 271[[282, 529[[540, 768[270 ShouldHaveRegister 528 ShouldHaveRegister  "OneSpillStore"
  v165|q QWORD "[rdx|q]" v1|q v1|q [158, 160[160 MustHaveRegister  "StoreAtDefinition"
  v166|d DWORD "[rbx|d]" v26|d v26|d [158, 160[160 MustHaveRegister  "StoreAtDefinition"
  v167|d DWORD "[r8|d]" v8|d v8|d [258, 274[[282, 298[268 MustHaveRegister 274 MustHaveRegister  "StoreAtDefinition"
  v168|d DWORD "[r9|d]" v9|d v9|d [258, 278[[282, 298[278 MustHaveRegister  "StoreAtDefinition"
  v169|d DWORD "[vstack:1|d]" v26|d v26|d [298, 303[ "StoreAtDefinition"
  v170|q QWORD "[r10|q]" v1|q v1|q [164, 226[190 MustHaveRegister 196 MustHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:0|q]" v1|q v1|q [226, 241[ "StoreAtDefinition"
  v172|d DWORD "[vstack:6|d]" v71|d v71|d [226, 241[ "OneSpillStore"
  v173|d DWORD "[vstack:8|d]" v96|d v96|d [226, 241[ "OneSpillStore"
  v174|d DWORD "[vstack:8|d]" v96|d v96|d [241, 244[244 ShouldHaveRegister  "OneSpillStore"
  v175|d DWORD "[vstack:6|d]" v71|d v71|d [241, 244[[328, 358[[568, 596[[674, 752[[760, 772[[788, 800[[828, 832[244 ShouldHaveRegister  "OneSpillStore"
  v176|q QWORD "[vstack:0|q]" v1|q v1|q [241, 245[ "StoreAtDefinition"
  v177|q QWORD "[vstack:9|q]" v2|q v2|q [241, 249[ "StoreAtDefinition"
  v178|d DWORD "[r8|d]" v71|d v71|d [832, 839[ "OneSpillStore"
  v179|q QWORD "[rdx|q]" v1|q v1|q [245, 254[[282, 301[246 MustHaveRegister 248 MustHaveRegister 254 MustHaveRegister 300 ShouldHaveRegister  "StoreAtDefinition"
  v180|q QWORD "[rcx|q]" v2|q v2|q [249, 250[[282, 298[250 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister  "StoreAtDefinition"
  v181|q QWORD "[vstack:0|q]" v1|q v1|q [301, 307[ "StoreAtDefinition"
  v182|q QWORD "[vstack:9|q]" v2|q v2|q [298, 303[ "StoreAtDefinition"
  v183|d DWORD "[vstack:3|d]" v8|d v8|d [298, 303[ "StoreAtDefinition"
  v184|d DWORD "[vstack:5|d]" v9|d v9|d [298, 303[ "StoreAtDefinition"
  v185|q QWORD "[vstack:10|q]" v21|q v21|q [303, 314[314 ShouldHaveRegister  "StoreAtDefinition"
  v186|q QWORD "[vstack:9|q]" v2|q v2|q [303, 377[[380, 400[360 ShouldHaveRegister  "StoreAtDefinition"
  v187|d DWORD "[vstack:3|d]" v8|d v8|d [303, 516[ "StoreAtDefinition"
  v188|d DWORD "[vstack:5|d]" v9|d v9|d [303, 516[ "StoreAtDefinition"
  v189|d DWORD "[vstack:1|d]" v26|d v26|d [303, 328[[380, 426[[540, 568[[596, 674[[752, 760[[772, 776[[800, 804[[840, 848[ "StoreAtDefinition"
  v190|q QWORD "[rdx|q]" v1|q v1|q [307, 315[308 MustHaveRegister  "StoreAtDefinition"
  v191|q QWORD "[vstack:10|q]" v21|q v21|q [328, 333[ "StoreAtDefinition"
  v192|q QWORD "[rcx|q]" v2|q v2|q [426, 433[428 MustHaveRegister 432 MustHaveRegister  "StoreAtDefinition"
  v193|d DWORD "[r8|d]" v8|d v8|d [516, 532[[540, 768[526 MustHaveRegister 532 MustHaveRegister  "StoreAtDefinition"
  v194|d DWORD "[r9|d]" v9|d v9|d [516, 536[[540, 768[536 MustHaveRegister  "StoreAtDefinition"
  v195|d DWORD "[rbx|d]" v26|d v26|d [848, 855[ "StoreAtDefinition"
  v196|q QWORD "[vstack:0|q]" v1|q v1|q [315, 328[ "StoreAtDefinition"
  v197|q QWORD "[rdx|q]" v1|q v1|q [328, 331[330 ShouldHaveRegister  "StoreAtDefinition"
  v198|q QWORD "[vstack:0|q]" v1|q v1|q [331, 337[ "StoreAtDefinition"
  v199|q QWORD "[vstack:10|q]" v21|q v21|q [333, 344[344 ShouldHaveRegister  "StoreAtDefinition"
  v200|q QWORD "[rdx|q]" v1|q v1|q [337, 345[338 MustHaveRegister  "StoreAtDefinition"
  v201|q QWORD "[vstack:0|q]" v1|q v1|q [345, 377[[380, 454[372 ShouldHaveRegister 382 ShouldHaveRegister  "StoreAtDefinition"
  v202|q QWORD "[rdx|q]" v1|q v1|q [454, 461[456 MustHaveRegister 460 ShouldHaveRegister  "StoreAtDefinition"
  v203|d DWORD "[vstack:11|d]" v46|d v46|d [383, 388[ "OneSpillStore"
  v204|d DWORD "[r11|d]" v46|d v46|d [388, 408[[772, 776[[800, 804[[840, 855[390 MustHaveRegister 396 ShouldHaveRegister 408 ShouldHaveRegister  "OneSpillStore"
  v205|q QWORD "[r8|q]" v2|q v2|q [433, 463[462 ShouldHaveRegister  "StoreAtDefinition"
  v206|q QWORD "[vstack:9|q]" v2|q v2|q [463, 507[[540, 787[[788, 819[[820, 827[[828, 839[[840, 848[504 ShouldHaveRegister  "StoreAtDefinition"
  v207|d DWORD "[vstack:13|d]" v130|d v130|d [458, 463[ "OneSpillStore"
  v208|d DWORD "[vstack:14|d]" v131|d v131|d [458, 463[ "OneSpillStore"
  v209|d DWORD "[vstack:12|d]" v132|d v132|d [458, 463[ "StoreAtDefinition"
  v210|q QWORD "[vstack:0|q]" v1|q v1|q [461, 470[ "StoreAtDefinition"
  v211|d DWORD "[vstack:12|d]" v132|d v132|d [463, 478[ "StoreAtDefinition"
  v212|d DWORD "[vstack:13|d]" v130|d v130|d [463, 496[ "OneSpillStore"
  v213|d DWORD "[vstack:14|d]" v131|d v131|d [463, 496[[780, 787[ "OneSpillStore"
  v214|q QWORD "[rdx|q]" v1|q v1|q [470, 485[472 MustHaveRegister 484 ShouldHaveRegister  "StoreAtDefinition"
  v215|d DWORD "[rbx|d]" v132|d v132|d [478, 482[480 MustHaveRegister  "StoreAtDefinition"
  v216|d DWORD "[r9|d]" v130|d v130|d [496, 498[498 ShouldHaveRegister  "OneSpillStore"
  v217|q QWORD "[rcx|q]" v2|q v2|q [848, 855[ "StoreAtDefinition"
  v218|d DWORD "[rcx|d]" v131|d v131|d [820, 827[ "OneSpillStore"
  v219|q QWORD "[vstack:0|q]" v1|q v1|q [485, 507[495 LiveAtLoopEnd 502 ShouldHaveRegister  "StoreAtDefinition"
  v220|d DWORD "[vstack:12|d]" v132|d v132|d [482, 487[ "StoreAtDefinition"
  v221|d DWORD "[vstack:15|d]" v134|d v134|d [482, 487[ "OneSpillStore"
  v222|d DWORD "[vstack:15|d]" v134|d v134|d [487, 492[492 ShouldHaveRegister  "OneSpillStore"
  v223|d DWORD "[vstack:12|d]" v132|d v132|d [487, 496[495 LiveAtLoopEnd  "StoreAtDefinition"
  v224|q QWORD "[rdx|q]" v1|q v1|q [540, 787[[788, 819[[820, 827[[828, 839[[840, 855[542 MustHaveRegister 570 MustHaveRegister 612 MustHaveRegister 614 ShouldHaveRegister 626 MustHaveRegister 690 MustHaveRegister 692 ShouldHaveRegister 704 MustHaveRegister  "StoreAtDefinition"
  v225|d DWORD "[rbx|d]" v132|d v132|d [820, 827[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = MOVE v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVE v152|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = STACKMOVE (input: v151|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = STACKMOVE (input: v154|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = STACKMOVE (input: v162|QWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = STACKMOVE (input: v153|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = STACKMOVE (input: v157|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v163|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v161|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [v91|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = STACKMOVE (input: v155|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE (input: v171|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v163|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v161|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = MOVE v167|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v179|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v179|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = STACKMOVE (input: v169|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = STACKMOVE (input: v184|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = STACKMOVE (input: v183|DWORD[_], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = STACKMOVE (input: v182|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[.] = STACKMOVE (input: v156|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v181|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v196|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v191|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v198|QWORD[.] = MOVE v197|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD[.] = STACKMOVE (input: v191|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v198|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v200|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v46|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = MOVE v9|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = MOVE v8|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[_] = MOVE v168|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[_] = MOVE v167|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v201|QWORD[.] = MOVE v179|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [v129|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = MOVE v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOVE v130|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOVE v132|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOVE v130|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD[.] = MOVE v202|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = STACKMOVE (input: v208|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = STACKMOVE (input: v207|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = STACKMOVE (input: v209|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOVE v211|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [v134|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE v134|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE v215|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = STACKMOVE (input: v220|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = STACKMOVE (input: v221|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOVE v223|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE v212|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v219|QWORD[.] = MOVE v214|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[_] = MOVE v194|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|DWORD[_] = MOVE v193|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [v145|DWORD, v146|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v211|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE v213|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [v63|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction v11|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH v11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction v14|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction v13|QWORD = UNCOMPRESSPOINTER (input: v12|DWORD, ~baseRegister: v14|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v13|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction v15|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v17|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction v18|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH v17|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction v23|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction v25|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction v26|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   84  <|@ instruction v27|DWORD = ADD (x: v19|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = SUB (x: v27|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction v46|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction v47|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: v47|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction v48|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction v50|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v51|DWORD = MOV [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction v52|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: v52|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction v55|DWORD = MOVSXB v52|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v56|DWORD = SHL (x: v46|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v56|DWORD, y: v56|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction v57|DWORD = SUB (x: v51|DWORD, ~y: v49|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: v56|DWORD, y: v57|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  142  <|@ instruction v58|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v59|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction v60|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOVE v152|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [v58|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [v59|QWORD[*] + v56|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = STACKMOVE (input: v162|QWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v159|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v163|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v161|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v71|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v72|DWORD = ADD (x: v71|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH v73|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction v92|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v93|DWORD = MOV [v92|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction v95|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v95|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v96|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction v97|DWORD = MOVSXB v95|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction v98|DWORD = SHL (x: v96|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v98|DWORD, y: v98|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction v99|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction v100|DWORD = SHL (x: v99|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v100|DWORD, y: v100|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: v100|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v100|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: v98|DWORD, y: v101|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  228  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction v105|QWORD = MOV v100|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v98|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction v106|DWORD = ADD (x: v71|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v176|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v106|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction v107|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction v108|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction v109|DWORD = OR (x: v107|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v109|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v163|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v161|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction v114|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v115|QWORD = SHL v114|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction v116|QWORD = OR (x: v115|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction v117|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction v118|QWORD = SUB (x: v116|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction v119|QWORD = ADD (x: v118|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v119|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction v120|QWORD = INC v117|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v120|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v121|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction v123|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction v122|QWORD = UNCOMPRESSPOINTER (input: v121|DWORD, ~baseRegister: v123|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v122|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v124|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v180|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v179|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE v181|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction v30|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction v31|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  320  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v197|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE v72|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v21|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  336  <|@ instruction v74|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = MOVE v198|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction v75|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE v75|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction v76|DWORD = SHL (x: v74|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  350  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v167|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v46|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = STACKMOVE (input: v158|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE v203|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVE v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: v46|DWORD, y: v46|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction v61|DWORD = SHR v51|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction v62|DWORD = ADD (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v61|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction v64|QWORD[*] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction v65|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction v66|QWORD[*] = LEA [v64|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction v67|QWORD = MOV v46|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction v68|QWORD = SHL v67|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction v69|QWORD = LEA [v68|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction v70|QWORD[*] = ADD (x: v69|QWORD, y: v65|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE v70|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE v49|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  428  <|@ instruction v125|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v126|DWORD = MOV [v125|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction v127|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD[.] = MOVE v192|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE v127|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction v128|DWORD = SHR (x: v126|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction v130|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction v131|DWORD = AND v130|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction v132|DWORD = SUB (x: v11|DWORD, ~y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOVE v130|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOVE v130|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = STACKMOVE (input: v208|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = STACKMOVE (input: v207|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr  466  <|@ instruction v133|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v210|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOVE v211|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: v132|DWORD, y: v134|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = MOVE v134|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = STACKMOVE (input: v221|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD v134|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  490  <|@ instruction v135|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction v136|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOVE v223|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = MOVE v219|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE v212|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH v130|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr  508  <|@ instruction v137|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction v138|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction v139|QWORD = SHL v138|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction v140|QWORD = OR (x: v139|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction v141|QWORD = MOV [v8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction v142|QWORD = SUB (x: v140|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction v143|QWORD = ADD (x: v142|QWORD, y: v141|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 42328], y: v143|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction v144|QWORD = INC v141|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 42328], y: v144|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v196|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v33|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[_] = MOVE v188|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v193|DWORD[_] = MOVE v187|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction v78|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction v79|DWORD[_] = MOV [v78|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v79|DWORD[_], y: v79|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction v80|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: v80|QWORD, y: v80|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [v82|QWORD + v80|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction v83|QWORD = LEA [v80|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: v83|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction v39|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction v40|QWORD[*] = XOR (x: v1|QWORD[.], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH v40|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v32|QWORD[.], y: v32|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction v148|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction v41|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [v41|QWORD[*] + v148|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [v41|QWORD[*] + v148|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction v42|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction v43|QWORD[*] = ADD (x: v41|QWORD[*], y: v148|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction v44|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction v84|DWORD[_] = COMPRESSPOINTER (input: v77|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v84|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction v85|QWORD[*] = XOR (x: v1|QWORD[.], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH v85|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: v77|QWORD[.], y: v77|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction v147|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction v86|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [v86|QWORD[*] + v147|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [v86|QWORD[*] + v147|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction v88|QWORD[*] = ADD (x: v86|QWORD[*], y: v147|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction v89|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE v43|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE v164|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE v88|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v224|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE v131|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v11|DWORD v129|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v145|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v146|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = MOVE v211|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE v213|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v131|DWORD v132|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v71|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v150|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = MOVE v189|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v217|QWORD[.] = MOVE v186|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v224|QWORD[.] = MOVE v201|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v63|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v46|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v26|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction r8|DWORD = ADD (x: vstack:6|DWORD, y: vstack:8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:11|DWORD vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD vstack:15|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = INC vstack:15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] vstack:9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] vstack:9|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   26  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   50  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  112  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  116  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  142  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  184  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  188  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  244  <|@ instruction r8|DWORD = ADD (x: vstack:6|DWORD, y: vstack:8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  252  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  286  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  288  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  290  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  312  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  322  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:11|DWORD vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  446  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE rbx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  448  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD vstack:15|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = INC vstack:15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  520  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  546  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  582  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  590  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  616  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  626  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  628  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  646  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  656  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  658  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  690  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  694  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  704  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  724  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  734  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  736  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] // MoveResolver resolve mapping <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  782  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  786  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] // MoveResolver resolve mapping <|@ <|@
      nr  790  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] // MoveResolver resolve mapping <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] // MoveResolver resolve mapping <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] // MoveResolver resolve mapping <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] vstack:9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr  824  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  826  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] vstack:9|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] // MoveResolver resolve mapping <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  854  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:9|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction vstack:3|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction vstack:5|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction vstack:10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction vstack:1|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction vstack:8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: vstack:6|DWORD, y: vstack:8|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  848  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:6|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  900  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:11|DWORD vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction vstack:4|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  488  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction vstack:12|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction vstack:13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction vstack:15|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD vstack:12|DWORD vstack:15|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC vstack:15|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1072  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: vstack:4|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE vstack:5|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction vstack:14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] vstack:9|QWORD[.] vstack:14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] vstack:9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE vstack:12|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:9|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] vstack:9|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] vstack:9|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  448  <|@ instruction rbx|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [6, 1070[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [90, 488[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [26, 1082[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [104, 1098[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [30, 1080[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [526, 832[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [812, 832[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [8, 1146[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [76, 542[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [318, 326[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[vstack:12|d]" vstack:12|d -1 [988, 1112[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [996, 1060[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[vstack:14|d]" vstack:14|d -1 [994, 1130[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[vstack:15|d]" vstack:15|d -1 [1042, 1050[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:64|q]" vstack:0|q -1 [6, 1070[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [90, 488[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:76|d]" vstack:3|d -1 [26, 1082[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:40|q]" vstack:4|q -1 [104, 1098[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:80|d]" vstack:5|d -1 [30, 1080[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:28|d]" vstack:6|d -1 [526, 832[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:44|d]" vstack:8|d -1 [812, 832[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:72|q]" vstack:9|q -1 [8, 1146[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:88|q]" vstack:10|q -1 [76, 542[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:44|d]" vstack:11|d -1 [318, 326[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[stack:44|d]" vstack:12|d -1 [988, 1112[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:48|d]" vstack:13|d -1 [996, 1060[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[stack:28|d]" vstack:14|d -1 [994, 1130[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[stack:52|d]" vstack:15|d -1 [1042, 1050[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  848  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  900  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  488  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1072  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  448  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  848  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  900  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  488  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1072  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  448  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  448  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603627509372781749
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4603993812687147524
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598203646604229883
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4575617283666583583
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557874426757285489
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552003971122125557
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [rdx:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rdi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 42328] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 42328] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 42328] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rdx|DWORD[_] * 8 + 42328] <|@ <|@
      nr   42  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr   52  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr   54  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606548131139970860
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   68  <|@ instruction r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r13|QWORD[.] - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r10|QWORD[.] r11|DWORD r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r10|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  352  <|@ instruction rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rcx|DWORD = MOVSXB rbp|DWORD size: DWORD <|@ <|@
      nr  364  <|@ instruction rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604000852651039441
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604089931588183510
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606668744618865489
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  922  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = INC rdx|QWORD size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  514  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  516  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r10|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r10|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r10|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  742  <|@ instruction rbx|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  766  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  796  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598588019021480620
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  812  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  832  <|@ instruction r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  840  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  844  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000] <|@ <|@
      nr  950  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0 <|@ <|@
      nr  952  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4587400670169801319
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  958  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction rcx|DWORD = AND r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  986  <|@ instruction rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4587258700245112557
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  998  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [rdx:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4588379607934225136
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1032  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593379172485341994
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD stack:52|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64] <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595580092926231633
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1038  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4588379607934225135
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr 1090  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr 1094  <|@ instruction rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr 1096  <|@ instruction r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD <|@ <|@
      nr 1098  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587559576482222611
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  190  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4586819700937579793
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586153812947401257
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  224  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  226  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585554513756240575
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4587258700245112555
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82] <|@ <|@
      nr 1076  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:64|QWORD[.] stack:88|QWORD[.] 
locals: stack:64|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  536  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  540  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:64|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  548  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581807180084435730
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  612  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581192184216834551
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580638687935993490
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  646  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  648  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580120261530678637
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578872884430309723
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:64|QWORD[.] 
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10] <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:64|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:64|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10] <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4577305231447356576
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:64|QWORD[.] stack:44|DWORD stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:64|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  326  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576854673758273866
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = SHL rcx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] r8|QWORD[.] rcx|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4575617283666583577
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:64|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:64|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:44|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4574481524269073483
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:64|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  970  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572569026510825486
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  150  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571977126075111232
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571444415682968403
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  244  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570776330879026274
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  572  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566498763392398933
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3 <|@ <|@
      nr  584  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565613169343053235
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction r11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567066389467121882
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566498763392398934
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565613169343053237
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  664  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  666  <|@ instruction CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564816134698642109
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  670  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557158989918486219
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556306653291057693
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555539550326372020
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551216776411596047
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550508301172119491
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  686  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549870673456590588
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  712  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541261648479574857
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  274  <|@ instruction rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535722246858950196
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  696  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] stack:72|QWORD[.] r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] stack:72|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7] <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r11|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 1156] y: -147251 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r11|DWORD r10|DWORD 
locals: - rdx|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  932  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:72|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  876  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r15|QWORD + 1156] y: -145459 size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@reference-map: [rdx:0, stack:24]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:72|QWORD[.] rcx|DWORD rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7] <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1136  <|@ instruction r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd] <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed] <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7] <|@ <|@
      nr  430  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec589041817f20000000000f85c109000048896c2450488954242048894c24184c8bd20f318bfa48c1e720480bf848baaddeaddeaddeadde448b5a7c448b42704489442414448b4a7444894c24108b5278448b5e144183fbff0f852f020000418b520849bb0000003f027f0000498d1413483b15000000000f8412000000483b15000000000f84b9040000e963080000418b5214448b1cd50c0000008b5908410fbe4210418b6a0c4c8be98bc841d3eb48c1e203488954240881fbaddeadde0f85fb000000418b4d148b1ccd0c000000410fbe4d10d3eb895c244403eb8bcd412bcb83f9010f8de2020000458b5a0c410fbe4a10413a4d100f858a040000418b4d148b04cd0c000000418b72148b14f50c000000410fbe6a1048c1e603448bf149c1e603413a6d100f85a0040000400fbecd418bebd3e585ed0f8c1c0800002bd03bea0f8f9c07000048897c2438448bd0498d7e10488d742e10498bd2e8000000008b5c2444488b542420015a0c448b4c2410448b4424140f318bf248c1e620480bf04a8b14c558a50000482b7424384803f24a8934c558a5000048ffc24a8914cd58a50000488b6c24504883c458493ba7500400000f8726080000c5f877c348897c243841817d08addeadde0f854b070000458b450c458bc84403cd418bc9412bcb83f9010f8dac020000418b7d148b34fd0c000000448b5a0c410fbe4a10413a4d100f859e070000458b4a0c0fbed98bcb418bc1d3e085c00f8c32060000418b6d0cd3e585ed0f8c3e0700003bee0f8776060000442bdd413bc30f8f3f07000044894c2434448944244448c1e703448bdd488d7f10488d740210498bd3e800000000448b4424444403442434488b5424204489420c0fb64211488b4c24180fb671110bc6884211e9e0feffff48897c2438498bd2448b510848bb0000003f027f00004e8d14134c3b15000000000f84120000004c3b15000000000f8482030000e9cf060000448b510c4c8bc1448b4e10418bc983e101418bdb412bda895c243441f7c1010000000f851f030000894c244444894c2430488b542420817a08addeadde0f852606000041ba000000008b5c2434e94b0000006666660f1f840000000000666666906666660f1f84000000000066666690448954242c488bf2ba200000006690e8000000000f1f840000000000448b54242c41ffc28b5c2434488b542420413bda7fce448b4c243041f7c1010000000f84fe000000448b4c2410448b4424140f318bf248c1e620480bf04e8b14c558a50000482b7424384903f24a8934c558a5000049ffc24e8914cd58a50000488b6c24504883c458493ba7500400000f872d060000c5f877c348897c2438498bd2488bf28bd5e8000000000f1f840000000000488b5424200fbe4a10d3e0488b7424088bd090e8000000000f1f84000000000041807f40000f8567020000448b4c2410448b442414488b542420488bf048c1ee03897214488bf24833f048f7c60000c0ff0f84250200004885c00f847602000048be002099be027f00004c8bd249c1ea0941803c32020f85700200008b5c2444488b7c24384c8b6c24184c8bd2e972fcffff488b742420488b542418666690e8000000000f1f840000000000e9e3feffff4489442444498bd2488bf2418bd1e8000000000f1f840000000000488b5424200fbe4a10d3e0488b7424088bd090e8000000000f1f84000000000041807f40000f851b020000448b4c2410448b442414488b542420488bf048c1ee03897214488bf24833f048f7c60000c0ff0f84330200004885c00f843f02000048be002099be027f00004c8bd249c1ea0941803c32020f85380200004c8b6c24184c8bd2488bd0448b442444e9a8fcffff48897c2438488b742418e8000000000f1f840000000000488bf0e8000000000f1f840000000000488b742420488bd0666690e8000000000f1f840000000000e9e6fbffff44895c243448897c2438488b742420666690e8000000000f1f840000000000448b5c24348b5c2444448b4c2410448b442414488b7c24384c8b6c24184c8b542420e930fbffff48897c24384585db0f8ce1030000d1ea418bcb03c83bca0f8792020000498d5610418bcb48d1e1488d49104803ce488bf2488bd18bc8e800000000e954fbffff488b542420817a08addeadde0f859e020000894c244444894c2430488bf2498bd0666690e8000000000f1f840000000000e9b4fcffff8b51148b14d50c000000440fbe51104c8bc1418bcad3ea448bd2e96bfcffff8b5c2444488b7c24384c8b6c24184c8bd2e972faffff448b4c2410448b442414488b542420488d72148b3685f60f848bfdffff4d8b572848c1e6034d85d20f84e50000004d8b5f384b897413f8498d72f849897728e964fdffff8b5c2444488b7c24384c8b6c24184c8bd2e918fafffff08304240041803c32000f85b30000008b5c2444488b7c24384c8b6c24184c8bd2e9f2f9ffff448b4c2410448b442414488b542420488d72148b3685f60f84d7fdffff4d8b572848c1e6034d85d20f84ab0000004d8b5f384b897413f8498d72f849897728e9b0fdffff4c8b6c24184c8bd2488bd0448b442444e99afaffff4c8b6c24184c8bd2488bd0448b442444e985fafffff08304240041803c32000f85650000004c8b6c24184c8bd2488bd0448b442444e960faffffe800000000e98bfcffff41c60432004d8b5f484c03d64d85db0f846c000000498b77584e89541ef8498d73f8498977488b5c2444488b7c24384c8b6c24184c8bd2e919f9ffffe800000000e911fdffff41c60432004d8b5f484c03d64d85db0f8444000000498b77584e89541ef8498d73f8498977484c8b6c24184c8bd2488bd0448b442444e9d5f9ffff498bf2e8000000008b5c2444488b7c24384c8b6c24184c8bd2e9b6f8ffff498bf2e8000000004c8b6c24184c8bd2488bd0448b442444e99af9ffff49c7c300000000498bd241bae703fdff458997840400004d899f90040000e8000000000f1f84000000000041bae717fdff488b4c2418488b5424204589978404000049c7879004000000000000e8000000000f1f84000000000049c7c300000000498bd241bae7fbfcffeba4894c244441c78784040000cdc0fdff49c7879004000094020000e8000000000f1f840000000000498bcd498bd241bae71ffdffeb9a49c7c3940c0000498bd241bacd7affff458997840400004d899f90040000e8000000000f1f84000000000049c7c394070000498bd241bacd1dfeffebd38b5c24348b4c244441c78784040000cdc7fdff49c7879004000098280000e8000000000f1f840000000000498bcd498bd241bae727fdffe921ffffff49c7c300000000498bd241bae7fffcffe9e1feffff49c7c300000000498bd241bae7f7fcffe9ccfeffff49c7c31400000041bacda4ffffe95bffffff49c7c394160000498bd241baed07fdffe9a5feffff41bae71bfdff488b4c2418488b542420e9bbfeffff48896c2450e800000000e930f6fffff4488d0dc6f7ffff49898f68040000e9e2f5fffff4488d0dbff9ffff49898f68040000e9cef5fffff441c78784040000f570feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f57afdff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed38fdff49c7879004000014050000e8000000000f1f84000000000041c78784040000f56bfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f544feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f579fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f506feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f505feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5d6fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c8fdff49c7879004000098250000e8000000000f1f84000000000041c78784040000f5c1fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5cffdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD  <||@
  Comment 63 6 stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 12 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 78 14 rdi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 80 16 rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD  <||@
  Comment 84 18 rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 87 20 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 87 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 97 22 r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD  <||@
  Comment 101 24 r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD  <||@
  Comment 105 26 stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD  <||@
  Comment 110 28 r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD  <||@
  Comment 114 30 stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD  <||@
  Comment 119 32 rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD  <||@
  Comment 122 34 BLACKHOLE [r11|DWORD[_] * 8 + 42328]  <||@
  Comment 122 36 BLACKHOLE [r8|DWORD[_] * 8 + 42328]  <||@
  Comment 122 38 BLACKHOLE [r9|DWORD[_] * 8 + 42328]  <||@
  Comment 122 40 BLACKHOLE [rdx|DWORD[_] * 8 + 42328]  <||@
  Comment 122 42 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 126 44 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null  <||@
  Comment 136 block B1 null  <||@
  Comment 136 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 48 rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 136 [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 136 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 140 50 r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 150 52 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0  <||@
  Comment 154 54 AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 154 {DataSection[0x0]}  <||@
  Comment 167 {DataSection[0x8]}  <||@
  Comment 185 block B2 null  <||@
  Comment 185 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 58 rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 189 60 r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 189 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 189 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 197 62 rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 197 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 197 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 64 rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 205 66 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 209 68 r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 212 70 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 214 72 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 217 74 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 221 76 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 226 78 CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 226 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 238 block B3 null  <||@
  Comment 238 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 82 rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 242 84 rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 242 [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 249 86 rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 254 88 rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 256 90 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 260 92 rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 262 94 rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 267 96 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 276 block B23 null  <||@
  Comment 276 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 276 306 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 280 308 rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 285 310 CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE  <||@
  Comment 295 block B26 null  <||@
  Comment 295 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 295 344 rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 299 346 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 299 [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 299 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 306 348 rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 310 350 rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 310 [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 317 352 rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 322 354 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 326 356 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 333 358 CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE  <||@
  Comment 343 block B27 null  <||@
  Comment 343 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 362 rcx|DWORD = MOVSXB rbp|DWORD size: DWORD  <||@
  Comment 347 364 rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 352 366 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 360 block B29 null  <||@
  Comment 360 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 360 380 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 362 382 CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 370 block B31 null  <||@
  Comment 370 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 396 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 375 398 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 375 400 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 375 402 r10|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 378 404 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 382 406 rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 387 408 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 390 410 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 390 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f02c53fa4e8, value=139649430756864]:0x7f02aab69e00}  <||@
  Comment 395 416 JUMP ~[] destination: B31 -> B38  <||@
  Comment 395 block B38 null  <||@
  Comment 395 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 395 412 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 399 414 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 404 496 ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 407 502 JUMP ~[] destination: B38 -> B74  <||@
  Comment 407 block B74 null  <||@
  Comment 407 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 498 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 412 500 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 417 908 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 419 910 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 421 912 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 425 914 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 428 916 rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD  <||@
  Comment 436 918 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 441 920 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 444 922 MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD  <||@
  Comment 452 924 rdx|QWORD = INC rdx|QWORD size: QWORD  <||@
  Comment 455 926 MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD  <||@
  Comment 463 928 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 472 POLL_RETURN_FAR  <||@
  Comment 489 block B39 null  <||@
  Comment 489 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 506 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 494 508 CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 494 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 508 block B40 null  <||@
  Comment 508 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 512 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 512 514 r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 518 516 rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 524 518 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 533 block B60 null  <||@
  Comment 533 726 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 533 728 rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 537 730 rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 537 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 537 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 544 732 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 544 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 544 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 548 734 rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 553 736 CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE  <||@
  Comment 563 block B61 null  <||@
  Comment 563 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 740 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 567 742 rbx|DWORD = MOVSXB rcx|DWORD size: DWORD  <||@
  Comment 570 744 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 572 746 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 577 748 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 585 block B63 null  <||@
  Comment 585 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 585 762 rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 589 766 rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 591 768 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 599 block B65 null  <||@
  Comment 599 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 782 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 607 block B67 null  <||@
  Comment 607 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 607 796 r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 610 798 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 619 block B69 null  <||@
  Comment 619 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 812 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 624 814 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 629 816 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 633 818 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 633 820 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 633 822 r11|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 636 824 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 640 826 rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD  <||@
  Comment 645 828 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 648 830 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 648 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f02c53fa4e8, value=139649430756864]:0x7f02aab69e00}  <||@
  Comment 653 832 r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 663 834 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 668 836 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 672 838 rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 676 840 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 681 842 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD  <||@
  Comment 685 844 rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 687 846 MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 690 852 JUMP ~[] destination: B69 -> B74  <||@
  Comment 695 block B76 null  <||@
  Comment 695 940 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 695 942 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 700 944 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 703 946 r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 703 [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 707 948 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 717 950 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0  <||@
  Comment 721 952 AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 721 {DataSection[0x0]}  <||@
  Comment 734 {DataSection[0x10]}  <||@
  Comment 752 block B77 null  <||@
  Comment 752 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 752 956 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 756 958 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 759 960 JUMP ~[] destination: B77 -> B79  <||@
  Comment 759 block B79 null  <||@
  Comment 759 980 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 759 982 r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 763 984 rcx|DWORD = AND r9|DWORD y: 1 size: DWORD  <||@
  Comment 769 986 rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 775 988 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 779 990 TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD  <||@
  Comment 792 block B80 null  <||@
  Comment 792 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 994 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 796 996 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 801 1000 JUMP ~[] destination: B80 -> B83  <||@
  Comment 801 block B83 null  <||@
  Comment 801 1024 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 998 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 806 1026 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51]  <||@
  Comment 806 [rdx:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 806 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 806 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 819 block B84 null  <||@
  Comment 819 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 819 1030 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 825 1032 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 829 1034 JUMP ~[] destination: B84 -> B85  <||@
  Comment 834 block B86 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 834 1040 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 1042 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 869 1044 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 872 1046 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 877 1048 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64]  <||@
  Comment 879 {HotSpotMethod<AbstractStringBuilder.append(char)>}  <||@
  Comment 879 INVOKESPECIAL  <||@
  Comment 884 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:64|QWORD[.]  |int[32|0x20] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5              
     locals:  |-  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |stack:52|DWORD   <||@
  Comment 892 1050 r10|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 900 1052 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 904 1054 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 909 1056 JUMP ~[] destination: B86 -> B85  <||@
  Comment 909 block B85 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 909 1036 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 909 1038 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 914 block B87 null  <||@
  Comment 914 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 914 1060 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 919 1062 TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD  <||@
  Comment 932 block B90 null  <||@
  Comment 932 1086 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 932 1080 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 937 1082 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 942 1088 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 944 1090 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 946 1092 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 950 1094 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 953 1096 r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD  <||@
  Comment 961 1098 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 966 1100 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 969 1102 MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD  <||@
  Comment 977 1104 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 980 1106 MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD  <||@
  Comment 988 1108 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 997 POLL_RETURN_FAR  <||@
  Comment 1014 block B5 null  <||@
  Comment 1014 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1014 104 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1019 106 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 108 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 110 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1027 112 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1027 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1027 INVOKESPECIAL  <||@
  Comment 1032 [stack:8, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:64|QWORD[.]  |-                  |- 
     stack:   |stack:64|QWORD[.]  |stack:88|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1040 114 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 116 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1049 118 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1051 120 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 122 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1058 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1059 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1059 INVOKESTATIC  <||@
  Comment 1064 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1072 126 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1083 block B6 null  <||@
  Comment 1083 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1083 130 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1088 132 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1093 134 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 136 JUMP ~[] destination: B6 -> B12  <||@
  Comment 1098 block B12 null  <||@
  Comment 1098 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 184 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1105 186 MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1108 188 rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1114 190 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD  <||@
  Comment 1127 block B14 null  <||@
  Comment 1127 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1127 206 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 1136 block B16 null  <||@
  Comment 1136 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1136 222 rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 1146 224 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1153 226 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1164 block B17 null  <||@
  Comment 1164 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 230 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1168 232 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1173 234 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 236 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 238 JUMP ~[] destination: B17 -> B23  <||@
  Comment 1186 block B88 null  <||@
  Comment 1186 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1186 1066 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 1068 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 1070 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82]  <||@
  Comment 1199 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1199 INVOKESPECIAL  <||@
  Comment 1204 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1212 1076 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1217 block B42 null  <||@
  Comment 1217 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1217 526 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1222 528 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 530 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1228 532 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1231 534 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10]  <||@
  Comment 1231 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1231 INVOKESPECIAL  <||@
  Comment 1236 [stack:8, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:64|QWORD[.]  |-                  |- 
     stack:   |stack:64|QWORD[.]  |stack:88|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1244 536 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 538 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1253 540 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1255 542 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 544 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1262 546 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10]  <||@
  Comment 1263 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1263 INVOKESTATIC  <||@
  Comment 1268 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1276 548 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1287 block B43 null  <||@
  Comment 1287 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1287 552 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1292 554 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1297 556 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 558 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1302 block B49 null  <||@
  Comment 1302 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1302 606 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1309 608 MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1312 610 rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1318 612 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD  <||@
  Comment 1331 block B51 null  <||@
  Comment 1331 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1331 628 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1340 block B53 null  <||@
  Comment 1340 642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 644 rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 1350 646 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1357 648 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1368 block B54 null  <||@
  Comment 1368 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 652 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1373 654 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 656 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 658 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1384 660 JUMP ~[] destination: B54 -> B60  <||@
  Comment 1389 block B73 null  <||@
  Comment 1389 882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1389 884 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1394 886 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1399 888 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10]  <||@
  Comment 1399 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1399 INVOKESTATIC  <||@
  Comment 1404 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
     stack:   |stack:64|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1412 890 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 892 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10]  <||@
  Comment 1415 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1415 INVOKESTATIC  <||@
  Comment 1420 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:64|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1428 894 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 896 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1436 898 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10]  <||@
  Comment 1439 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 1439 INVOKESPECIAL  <||@
  Comment 1444 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1452 904 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1457 block B25 null  <||@
  Comment 1457 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1457 318 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1462 320 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1467 322 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 324 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1475 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1475 INVOKESPECIAL  <||@
  Comment 1480 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:64|QWORD[.]  |-  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1488 326 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1493 328 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1497 330 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1502 332 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1507 334 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1512 336 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 338 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 340 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1527 block B32 null  <||@
  Comment 1527 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1527 420 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1532 422 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1541 block B34 null  <||@
  Comment 1541 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 438 rdx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 1543 440 rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1548 442 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD  <||@
  Comment 1556 block B37 null  <||@
  Comment 1556 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 466 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 468 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 470 rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1560 472 rcx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 1563 474 rcx|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1566 476 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1570 478 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1573 480 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1576 482 rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 1579 484 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1581 486 - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1581 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1586 492 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1591 block B81 null  <||@
  Comment 1591 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1591 1004 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 1006 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36]  <||@
  Comment 1596 [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3          |4  |5 
     locals:  |-          |rdx|QWORD[.]  |r8|QWORD[.]  |rcx|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |             |           |   |    <||@
  Comment 1596 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1596 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1609 block B82 null  <||@
  Comment 1609 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1609 1010 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1613 1012 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1618 1014 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 1016 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1624 1018 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45]  <||@
  Comment 1627 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1627 INVOKESPECIAL  <||@
  Comment 1632 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5 
     locals:  |-  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 1640 1022 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1645 block B78 null  <||@
  Comment 1645 962 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1645 964 rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1648 966 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1648 [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 1648 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1655 968 r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1660 970 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 972 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1666 974 rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1668 976 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1671 978 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1676 block B13 null  <||@
  Comment 1676 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1676 194 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1680 196 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1685 198 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 200 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 202 JUMP ~[] destination: B13 -> B23  <||@
  Comment 1698 block B7 null  <||@
  Comment 1698 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1698 140 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1703 142 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1708 144 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1713 146 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD  <||@
  Comment 1717 148 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1719 150 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1727 block B9 null  <||@
  Comment 1727 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1727 158 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1731 160 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1735 162 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1744 block B11 null  <||@
  Comment 1744 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1744 172 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1748 174 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1753 176 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1757 178 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1761 180 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1766 block B15 null  <||@
  Comment 1766 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1766 210 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1770 212 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1775 214 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 216 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 218 JUMP ~[] destination: B15 -> B23  <||@
  Comment 1788 block B18 null  <||@
  Comment 1788 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1788 242 MEMBAR barriers: 4  <||@
  Comment 1793 244 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1804 block B19 null  <||@
  Comment 1804 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 248 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1808 250 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1813 252 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 254 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 256 JUMP ~[] destination: B19 -> B23  <||@
  Comment 1826 block B44 null  <||@
  Comment 1826 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1826 562 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1831 564 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1836 566 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1841 568 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD  <||@
  Comment 1845 570 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1847 572 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1855 block B46 null  <||@
  Comment 1855 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1855 580 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1859 582 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1863 584 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 1872 block B48 null  <||@
  Comment 1872 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1872 594 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1876 596 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1881 598 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1885 600 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1889 602 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1894 block B50 null  <||@
  Comment 1894 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1894 616 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 618 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1902 620 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 622 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1910 624 JUMP ~[] destination: B50 -> B60  <||@
  Comment 1915 block B52 null  <||@
  Comment 1915 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 632 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1920 634 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1923 636 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1926 638 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1931 640 JUMP ~[] destination: B52 -> B60  <||@
  Comment 1936 block B55 null  <||@
  Comment 1936 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1936 664 MEMBAR barriers: 4  <||@
  Comment 1941 666 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1952 block B56 null  <||@
  Comment 1952 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1952 670 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1957 672 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 674 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1963 676 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1968 678 JUMP ~[] destination: B56 -> B60  <||@
  Comment 1973 block B10 null  <||@
  Comment 1973 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1973 166 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1973 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1978 168 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1983 block B20 null  <||@
  Comment 1983 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 260 MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1988 262 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1992 264 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1995 266 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 2004 block B22 null  <||@
  Comment 2004 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2004 286 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2008 288 MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 2013 290 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 2017 292 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2021 294 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2025 296 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2030 298 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 300 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 302 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2043 block B47 null  <||@
  Comment 2043 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2043 588 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 2043 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 2048 590 JUMP ~[] destination: B47 -> B49  <||@
  Comment 2053 block B57 null  <||@
  Comment 2053 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2053 682 MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 2058 684 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 2062 686 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 2065 688 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD  <||@
  Comment 2074 block B59 null  <||@
  Comment 2074 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2074 708 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2078 710 MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 2083 712 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 2087 714 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2091 716 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 718 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 720 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2102 722 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2107 724 JUMP ~[] destination: B59 -> B60  <||@
  Comment 2112 block B21 null  <||@
  Comment 2112 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2112 270 rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2115 272 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2115 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2120 274 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2124 276 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2129 278 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 280 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2137 282 JUMP ~[] destination: B21 -> B23  <||@
  Comment 2142 block B58 null  <||@
  Comment 2142 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2142 692 rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2145 694 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2145 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2150 696 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2155 698 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2158 700 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2161 702 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2166 704 JUMP ~[] destination: B58 -> B60  <||@
  Comment 2171 block B62 null  <||@
  Comment 2171 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2171 752 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2178 754 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2181 756 r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7]  <||@
  Comment 2187 758 JUMP ~[] destination: B62 -> B71  <||@
  Comment 2187 block B71 null  <||@
  Comment 2187 864 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2187 866 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2194 868 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2201 870 DEOPT info [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 2201 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2206 [rdx:0, stack:24]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2        
     locals:  |rdx|QWORD[.]  |stack:72|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2214 block B35 null  <||@
  Comment 2214 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2214 446 r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7]  <||@
  Comment 2220 450 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2225 452 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 454 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2230 block B36 null  <||@
  Comment 2230 456 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2230 458 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2237 460 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2248 462 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 2248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2253 [rcx:0, rdx:0]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r11|DWORD  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2261 block B66 null  <||@
  Comment 2261 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2261 786 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2268 788 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2271 790 r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7]  <||@
  Comment 2277 792 JUMP ~[] destination: B66 -> B71  <||@
  Comment 2279 block B92 null  <||@
  Comment 2279 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2279 1124 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2283 1126 MOV [r15|QWORD + 1156] y: -147251 size: DWORD  <||@
  Comment 2294 1128 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2305 1130 DEOPT info [bci:36]  <||@
  Comment 2305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2310 [rdx:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2                  |3               |4  |5 
     locals:  |-          |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |                   |                |   |    <||@
  Comment 2318 block B30 null  <||@
  Comment 2318 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2318 386 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 388 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2324 390 r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7]  <||@
  Comment 2330 392 JUMP ~[] destination: B30 -> B36  <||@
  Comment 2332 block B75 null  <||@
  Comment 2332 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2332 932 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2339 934 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 936 r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd]  <||@
  Comment 2348 938 JUMP ~[] destination: B75 -> B94  <||@
  Comment 2348 block B94 null  <||@
  Comment 2348 1140 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2348 1142 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2355 1144 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2362 1146 DEOPT info [bci:0]  <||@
  Comment 2362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2367 [rdx:0, rsi:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:72|QWORD[.]  |-  |-  |-   <||@
  Comment 2375 block B72 null  <||@
  Comment 2375 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2375 874 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2382 876 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2385 878 r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd]  <||@
  Comment 2391 880 JUMP ~[] destination: B72 -> B94  <||@
  Comment 2393 block B91 null  <||@
  Comment 2393 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2393 1112 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2397 1114 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2401 1116 MOV [r15|QWORD + 1156] y: -145459 size: DWORD  <||@
  Comment 2412 1118 MOV [r15|QWORD + 1168] y: 10392 size: QWORD  <||@
  Comment 2423 1120 DEOPT info [bci:51]  <||@
  Comment 2423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2428 [rdx:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3          |4          |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |rbx|DWORD  |-   <||@
  Comment 2436 block B28 null  <||@
  Comment 2436 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2436 370 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2439 372 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2442 374 r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7]  <||@
  Comment 2448 376 JUMP ~[] destination: B28 -> B36  <||@
  Comment 2453 block B64 null  <||@
  Comment 2453 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2453 772 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2460 774 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2463 776 r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7]  <||@
  Comment 2469 778 JUMP ~[] destination: B64 -> B71  <||@
  Comment 2474 block B68 null  <||@
  Comment 2474 800 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2474 802 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2481 804 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 806 r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7]  <||@
  Comment 2490 808 JUMP ~[] destination: B68 -> B71  <||@
  Comment 2495 block B93 null  <||@
  Comment 2495 1132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2495 1134 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2502 1136 r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd]  <||@
  Comment 2508 1138 JUMP ~[] destination: B93 -> B94  <||@
  Comment 2513 block B70 null  <||@
  Comment 2513 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2513 856 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2520 858 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 860 r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed]  <||@
  Comment 2529 862 JUMP ~[] destination: B70 -> B71  <||@
  Comment 2534 block B33 null  <||@
  Comment 2534 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2534 426 r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7]  <||@
  Comment 2540 430 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2545 432 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 434 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2560 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 2585 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2605 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2638 [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2668 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2673 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2708 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2738 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2743 [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 2773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2778 [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2813 [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2848 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2883 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2913 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2918 [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2948 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2953 [rdx:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 2983 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2988 [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3          |4  |5 
     locals:  |-          |rdx|QWORD[.]  |r8|QWORD[.]  |rcx|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |             |           |   |    <||@
  Comment 3018 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3023 [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 3031 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3031 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 3037 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5289[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  method "HotSpotCompilation-5289[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  date 1714038139112
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02abd3d7a0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85c378e4fe66669089842400c0feff4883ec589041817f20000000000f85c109000048896c2450488954242048894c24184c8bd20f318bfa48c1e720480bf848bad88c5e2e06000000448b5a7c448b42704489442414448b4a7444894c24108b5278448b5e144183fbff0f852f020000418b520849bb0000003f027f0000498d1413483b153fffffff0f8412000000483b153affffff0f84b9040000e963080000418b5214448b1cd50c0000008b5908410fbe4210418b6a0c4c8be98bc841d3eb48c1e203488954240881fbd8e800000f85fb000000418b4d148b1ccd0c000000410fbe4d10d3eb895c244403eb8bcd412bcb83f9010f8de2020000458b5a0c410fbe4a10413a4d100f858a040000418b4d148b04cd0c000000418b72148b14f50c000000410fbe6a1048c1e603448bf149c1e603413a6d100f85a0040000400fbecd418bebd3e585ed0f8c1c0800002bd03bea0f8f9c07000048897c2438448bd0498d7e10488d742e10498bd2e8d5c4e2fe8b5c2444488b542420015a0c448b4c2410448b4424140f318bf248c1e620480bf04a8b14c558a50000482b7424384803f24a8934c558a5000048ffc24a8914cd58a50000488b6c24504883c458493ba7500400000f8726080000c5f877c348897c243841817d08288100000f854b070000458b450c458bc84403cd418bc9412bcb83f9010f8dac020000418b7d148b34fd0c000000448b5a0c410fbe4a10413a4d100f859e070000458b4a0c0fbed98bcb418bc1d3e085c00f8c32060000418b6d0cd3e585ed0f8c3e0700003bee0f8776060000442bdd413bc30f8f3f07000044894c2434448944244448c1e703448bdd488d7f10488d740210498bd3e8d3c3e2fe448b4424444403442434488b5424204489420c0fb64211488b4c24180fb671110bc6884211e9e0feffff48897c2438498bd2448b510848bb0000003f027f00004e8d14134c3b1508fdffff0f84120000004c3b150bfdffff0f8482030000e9cf060000448b510c4c8bc1448b4e10418bc983e101418bdb412bda895c243441f7c1010000000f851f030000894c244444894c2430488b542420817a08288100000f852606000041ba000000008b5c2434e94b0000006666660f1f840000000000666666906666660f1f84000000000066666690448954242c488bf2ba200000006690e86c78e4fe0f1f84000406000a448b54242c41ffc28b5c2434488b542420413bda7fce448b4c243041f7c1010000000f84fe000000448b4c2410448b4424140f318bf248c1e620480bf04e8b14c558a50000482b7424384903f24a8934c558a5000049ffc24e8914cd58a50000488b6c24504883c458493ba7500400000f872d060000c5f877c348897c2438498bd2488bf28bd5e8d877e4fe0f1f84009806000b488b5424200fbe4a10d3e0488b7424088bd090e8b87de4fe0f1f8400b806000c41807f40000f8567020000448b4c2410448b442414488b542420488bf048c1ee03897214488bf24833f048f7c60000c0ff0f84250200004885c00f847602000048be002099be027f00004c8bd249c1ea0941803c32020f85700200008b5c2444488b7c24384c8b6c24184c8bd2e972fcffff488b742420488b542418666690e82c77e4fe0f1f84004407000de9e3feffff4489442444498bd2488bf2418bd1e80c77e4fe0f1f84006407000e488b5424200fbe4a10d3e0488b7424088bd090e8ec7ce4fe0f1f84008407000f41807f40000f851b020000448b4c2410448b442414488b542420488bf048c1ee03897214488bf24833f048f7c60000c0ff0f84330200004885c00f843f02000048be002099be027f00004c8bd249c1ea0941803c32020f85380200004c8b6c24184c8bd2488bd0448b442444e9a8fcffff48897c2438488b742418e8647ce4fe0f1f84000c080010488bf0e8547ce4fe0f1f84001c080011488b742420488bd0666690e83c76e4fe0f1f840034080012e9e6fbffff44895c243448897c2438488b742420666690e81876e4fe0f1f840058080013448b5c24348b5c2444448b4c2410448b442414488b7c24384c8b6c24184c8b542420e930fbffff48897c24384585db0f8ce1030000d1ea418bcb03c83bca0f8792020000498d5610418bcb48d1e1488d49104803ce488bf2488bd18bc8e8ae5ff9fee954fbffff488b542420817a08288100000f859e020000894c244444894c2430488bf2498bd0666690e88075e4fe0f1f8400f0080015e9b4fcffff8b51148b14d50c000000440fbe51104c8bc1418bcad3ea448bd2e96bfcffff8b5c2444488b7c24384c8b6c24184c8bd2e972faffff448b4c2410448b442414488b542420488d72148b3685f60f848bfdffff4d8b572848c1e6034d85d20f84e50000004d8b5f384b897413f8498d72f849897728e964fdffff8b5c2444488b7c24384c8b6c24184c8bd2e918fafffff08304240041803c32000f85b30000008b5c2444488b7c24384c8b6c24184c8bd2e9f2f9ffff448b4c2410448b442414488b542420488d72148b3685f60f84d7fdffff4d8b572848c1e6034d85d20f84ab0000004d8b5f384b897413f8498d72f849897728e9b0fdffff4c8b6c24184c8bd2488bd0448b442444e99afaffff4c8b6c24184c8bd2488bd0448b442444e985fafffff08304240041803c32000f85650000004c8b6c24184c8bd2488bd0448b442444e960faffffe8a69af8fee98bfcffff41c60432004d8b5f484c03d64d85db0f846c000000498b77584e89541ef8498d73f8498977488b5c2444488b7c24384c8b6c24184c8bd2e919f9ffffe8609af8fee911fdffff41c60432004d8b5f484c03d64d85db0f8444000000498b77584e89541ef8498d73f8498977484c8b6c24184c8bd2488bd0448b442444e9d5f9ffff498bf2e818c5f8fe8b5c2444488b7c24384c8b6c24184c8bd2e9b6f8ffff498bf2e8fac4f8fe4c8b6c24184c8bd2488bd0448b442444e99af9ffff49c7c300000000498bd241bae703fdff458997840400004d899f90040000e83cd1e4fe0f1f84000000000041bae717fdff488b4c2418488b5424204589978404000049c7879004000000000000e80dd1e4fe0f1f84000000000049c7c300000000498bd241bae7fbfcffeba4894c244441c78784040000cdc0fdff49c7879004000094020000e8d4d0e4fe0f1f840000000000498bcd498bd241bae71ffdffeb9a49c7c3940c0000498bd241bacd7affff458997840400004d899f90040000e89bd0e4fe0f1f84000000000049c7c394070000498bd241bacd1dfeffebd38b5c24348b4c244441c78784040000cdc7fdff49c7879004000098280000e85ed0e4fe0f1f840000000000498bcd498bd241bae727fdffe921ffffff49c7c300000000498bd241bae7fffcffe9e1feffff49c7c300000000498bd241bae7f7fcffe9ccfeffff49c7c31400000041bacda4ffffe95bffffff49c7c394160000498bd241baed07fdffe9a5feffff41bae71bfdff488b4c2418488b542420e9bbfeffff48896c2450e87bd0e2fee930f6fffff4488d0dc6f7ffff49898f68040000e942dee4fef4488d0dbff9ffff49898f68040000e92edee4fef441c78784040000f570feff49c7879004000000000000e88ccfe4fe0f1f84000000000041c78784040000f57afdff49c7879004000000000000e869cfe4fe0f1f84000000000041c78784040000ed38fdff49c7879004000014050000e846cfe4fe0f1f84000000000041c78784040000f56bfeff49c7879004000000000000e823cfe4fe0f1f84000000000041c78784040000f544feff49c7879004000000000000e800cfe4fe0f1f84000000000041c78784040000f579fdff49c7879004000000000000e8ddcee4fe0f1f84000000000041c78784040000f506feff49c7879004000000000000e8bacee4fe0f1f84000000000041c78784040000f505feff49c7879004000000000000e897cee4fe0f1f84000000000041c78784040000f5d6fdff49c7879004000000000000e874cee4fe0f1f84000000000041c78784040000f5c8fdff49c7879004000098250000e851cee4fe0f1f84000000000041c78784040000f5c1fdff49c7879004000000000000e82ecee4fe0f1f84000000000041c78784040000f5cffdff49c7879004000000000000e80bcee4fe0f1f840000000000e88493f8fef4e89ecbe4fef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@399e0a10 slotKind: QWORD  <||@
  Comment 63 6 stack:64|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:72|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 76 12 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 78 14 rdi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 80 16 rdi|QWORD = SHL rdi|QWORD y: 32 size: QWORD  <||@
  Comment 84 18 rdi|QWORD = OR (x: rdi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 87 20 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 87 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 97 22 r11|DWORD[_] = MOV [rdx|QWORD[.] + 124] size: DWORD  <||@
  Comment 101 24 r8|DWORD[_] = MOV [rdx|QWORD[.] + 112] size: DWORD  <||@
  Comment 105 26 stack:76|DWORD[_] = MOVE r8|DWORD[_] moveKind: DWORD  <||@
  Comment 110 28 r9|DWORD[_] = MOV [rdx|QWORD[.] + 116] size: DWORD  <||@
  Comment 114 30 stack:80|DWORD[_] = MOVE r9|DWORD[_] moveKind: DWORD  <||@
  Comment 119 32 rdx|DWORD[_] = MOV [rdx|QWORD[.] + 120] size: DWORD  <||@
  Comment 122 34 BLACKHOLE [r11|DWORD[_] * 8 + 42328]  <||@
  Comment 122 36 BLACKHOLE [r8|DWORD[_] * 8 + 42328]  <||@
  Comment 122 38 BLACKHOLE [r9|DWORD[_] * 8 + 42328]  <||@
  Comment 122 40 BLACKHOLE [rdx|DWORD[_] * 8 + 42328]  <||@
  Comment 122 42 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 126 44 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.9429707096929666 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null  <||@
  Comment 136 block B1 null  <||@
  Comment 136 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 48 rdx|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 136 [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 136 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 140 50 r11|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 150 52 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0  <||@
  Comment 154 54 AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 154 {DataSection[0x0]}  <||@
  Comment 167 {DataSection[0x8]}  <||@
  Comment 185 block B2 null  <||@
  Comment 185 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 58 rdx|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 189 60 r11|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 189 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 189 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 197 62 rbx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 197 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 197 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 64 rax|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 205 66 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 209 68 r13|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 212 70 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 214 72 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 217 74 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 221 76 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 226 78 CMPCONSTBRANCH rbx|DWORD trueDestinationProbability: 0.7064104255746584 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 226 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 238 block B3 null  <||@
  Comment 238 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 82 rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 242 84 rbx|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 242 [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 242 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 249 86 rcx|DWORD = MOVSXB [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 254 88 rbx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 256 90 stack:28|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 260 92 rbp|DWORD = ADD (x: rbp|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 262 94 rcx|DWORD = SUB (x: rbp|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 267 96 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 276 block B23 null  <||@
  Comment 276 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 276 306 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 280 308 rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 285 310 CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9837491833349263 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE  <||@
  Comment 295 block B26 null  <||@
  Comment 295 342 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 295 344 rcx|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 299 346 rax|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 299 [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 299 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 306 348 rsi|DWORD[_] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 310 350 rdx|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 310 [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 317 352 rbp|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 322 354 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 326 356 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 333 358 CMPBRANCH (x: rbp|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 0.9849394295955807 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE  <||@
  Comment 343 block B27 null  <||@
  Comment 343 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 343 362 rcx|DWORD = MOVSXB rbp|DWORD size: DWORD  <||@
  Comment 347 364 rbp|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 352 366 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 360 block B29 null  <||@
  Comment 360 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 360 380 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 362 382 CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 370 block B31 null  <||@
  Comment 370 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 396 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 375 398 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 375 400 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 375 402 r10|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 378 404 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 382 406 rsi|QWORD = LEA [rsi|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 387 408 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 390 410 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 390 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f02c53fa4e8, value=139649430756864]:0x7f02aab69e00}  <||@
  Comment 395 416 JUMP ~[] destination: B31 -> B38  <||@
  Comment 395 block B38 null  <||@
  Comment 395 494 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 395 412 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 399 414 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 404 496 ADD (x: [rdx|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 407 502 JUMP ~[] destination: B38 -> B74  <||@
  Comment 407 block B74 null  <||@
  Comment 407 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 498 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 412 500 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 417 908 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 419 910 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 421 912 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 425 914 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 428 916 rdx|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD  <||@
  Comment 436 918 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 441 920 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 444 922 MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD  <||@
  Comment 452 924 rdx|QWORD = INC rdx|QWORD size: QWORD  <||@
  Comment 455 926 MOV (x: [r9|DWORD[_] * 8 + 42328], y: rdx|QWORD) size: QWORD  <||@
  Comment 463 928 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 472 POLL_RETURN_FAR  <||@
  Comment 489 block B39 null  <||@
  Comment 489 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 506 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 494 508 CMPCONSTBRANCH [r13|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 494 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 508 block B40 null  <||@
  Comment 508 510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 508 512 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 512 514 r9|DWORD = ADD (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 518 516 rcx|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 524 518 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9218183045857158 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 533 block B60 null  <||@
  Comment 533 726 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 533 728 rdi|DWORD[_] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 537 730 rsi|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 537 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 537 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 544 732 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 544 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 544 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 548 734 rcx|DWORD = MOVSXB [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 553 736 CMPBRANCH (x: rcx|DWORD, y: [r13|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE  <||@
  Comment 563 block B61 null  <||@
  Comment 563 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 740 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 567 742 rbx|DWORD = MOVSXB rcx|DWORD size: DWORD  <||@
  Comment 570 744 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 572 746 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 577 748 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 585 block B63 null  <||@
  Comment 585 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 585 762 rbp|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 589 766 rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 591 768 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 599 block B65 null  <||@
  Comment 599 780 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 782 CMPBRANCH (x: rbp|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 607 block B67 null  <||@
  Comment 607 794 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 607 796 r11|DWORD = SUB (x: r11|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 610 798 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 619 block B69 null  <||@
  Comment 619 810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 812 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 624 814 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 629 816 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 633 818 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 633 820 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 633 822 r11|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 636 824 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 640 826 rsi|QWORD = LEA [rdx|QWORD[*] + rax|DWORD * 1 + 16] size: QWORD  <||@
  Comment 645 828 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 648 830 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f02aab69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 648 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f02c53fa4e8, value=139649430756864]:0x7f02aab69e00}  <||@
  Comment 653 832 r8|DWORD = ADD (x: stack:28|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 663 834 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 668 836 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 672 838 rax|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 676 840 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 681 842 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD  <||@
  Comment 685 844 rax|DWORD = OR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 687 846 MOVB (x: [rdx|QWORD[.] + 17], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 690 852 JUMP ~[] destination: B69 -> B74  <||@
  Comment 695 block B76 null  <||@
  Comment 695 940 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 695 942 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 700 944 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 703 946 r10|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 703 [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 707 948 rbx|QWORD = MOVE input: long[139647623626752|0x7f023f000000]  <||@
  Comment 717 950 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 139647623626752 shift: 0  <||@
  Comment 721 952 AMD64HOTSPOTSTRATEGYSWITCH ~r10|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 721 {DataSection[0x0]}  <||@
  Comment 734 {DataSection[0x10]}  <||@
  Comment 752 block B77 null  <||@
  Comment 752 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 752 956 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 756 958 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 759 960 JUMP ~[] destination: B77 -> B79  <||@
  Comment 759 block B79 null  <||@
  Comment 759 980 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 759 982 r9|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 763 984 rcx|DWORD = AND r9|DWORD y: 1 size: DWORD  <||@
  Comment 769 986 rbx|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 775 988 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 779 990 TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805913 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD  <||@
  Comment 792 block B80 null  <||@
  Comment 792 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 994 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 796 996 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 801 1000 JUMP ~[] destination: B80 -> B83  <||@
  Comment 801 block B83 null  <||@
  Comment 801 1024 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 998 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 806 1026 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51]  <||@
  Comment 806 [rdx:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 806 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 806 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 819 block B84 null  <||@
  Comment 819 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 819 1030 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 825 1032 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 829 1034 JUMP ~[] destination: B84 -> B85  <||@
  Comment 834 block B86 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 834 1040 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 864 1042 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 869 1044 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 872 1046 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 877 1048 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 64]  <||@
  Comment 879 {HotSpotMethod<AbstractStringBuilder.append(char)>}  <||@
  Comment 879 INVOKESPECIAL  <||@
  Comment 884 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:64|QWORD[.]  |int[32|0x20] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5              
     locals:  |-  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |stack:52|DWORD   <||@
  Comment 892 1050 r10|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 900 1052 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 904 1054 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 909 1056 JUMP ~[] destination: B86 -> B85  <||@
  Comment 909 block B85 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 909 1036 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 909 1038 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6795581021385948 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 914 block B87 null  <||@
  Comment 914 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 914 1060 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 919 1062 TESTCONSTBRANCH r9|DWORD trueDestinationProbability: 0.8636164067805912 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD  <||@
  Comment 932 block B90 null  <||@
  Comment 932 1086 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 932 1080 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 937 1082 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 942 1088 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 944 1090 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 946 1092 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 950 1094 rsi|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 953 1096 r10|QWORD = MOV [r8|DWORD[_] * 8 + 42328] size: QWORD  <||@
  Comment 961 1098 rsi|QWORD = SUB (x: rsi|QWORD, ~y: stack:40|QWORD) size: QWORD  <||@
  Comment 966 1100 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 969 1102 MOV (x: [r8|DWORD[_] * 8 + 42328], y: rsi|QWORD) size: QWORD  <||@
  Comment 977 1104 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 980 1106 MOV (x: [r9|DWORD[_] * 8 + 42328], y: r10|QWORD) size: QWORD  <||@
  Comment 988 1108 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 997 POLL_RETURN_FAR  <||@
  Comment 1014 block B5 null  <||@
  Comment 1014 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1014 104 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1019 106 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1022 108 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1025 110 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1027 112 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1027 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1027 INVOKESPECIAL  <||@
  Comment 1032 [stack:8, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:64|QWORD[.]  |-                  |- 
     stack:   |stack:64|QWORD[.]  |stack:88|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1040 114 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 116 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1049 118 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1051 120 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 122 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1058 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1059 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1059 INVOKESTATIC  <||@
  Comment 1064 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1072 126 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1083 block B6 null  <||@
  Comment 1083 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1083 130 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1088 132 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1093 134 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 136 JUMP ~[] destination: B6 -> B12  <||@
  Comment 1098 block B12 null  <||@
  Comment 1098 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 184 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1105 186 MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1108 188 rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1114 190 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD  <||@
  Comment 1127 block B14 null  <||@
  Comment 1127 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1127 206 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 1136 block B16 null  <||@
  Comment 1136 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1136 222 rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 1146 224 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1153 226 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1164 block B17 null  <||@
  Comment 1164 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 230 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1168 232 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1173 234 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 236 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 238 JUMP ~[] destination: B17 -> B23  <||@
  Comment 1186 block B88 null  <||@
  Comment 1186 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1186 1066 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 1068 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 1070 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 82]  <||@
  Comment 1199 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1199 INVOKESPECIAL  <||@
  Comment 1204 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1212 1076 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1217 block B42 null  <||@
  Comment 1217 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1217 526 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1222 528 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 530 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1228 532 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1231 534 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:24, 21, 37, 2, 2, 10]  <||@
  Comment 1231 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1231 INVOKESPECIAL  <||@
  Comment 1236 [stack:8, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:64|QWORD[.]  |-                  |- 
     stack:   |stack:64|QWORD[.]  |stack:88|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1244 536 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 538 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1253 540 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1255 542 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 544 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1262 546 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:32, 21, 37, 2, 2, 10]  <||@
  Comment 1263 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1263 INVOKESTATIC  <||@
  Comment 1268 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1276 548 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1287 block B43 null  <||@
  Comment 1287 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1287 552 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1292 554 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1297 556 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 558 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1302 block B49 null  <||@
  Comment 1302 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1302 606 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1309 608 MOV (x: [rdx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1312 610 rsi|QWORD[*] = XOR (x: rdx|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1318 612 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD  <||@
  Comment 1331 block B51 null  <||@
  Comment 1331 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1331 628 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1340 block B53 null  <||@
  Comment 1340 642 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 644 rsi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 1350 646 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1357 648 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1368 block B54 null  <||@
  Comment 1368 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1368 652 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1373 654 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1376 656 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 658 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1384 660 JUMP ~[] destination: B54 -> B60  <||@
  Comment 1389 block B73 null  <||@
  Comment 1389 882 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1389 884 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1394 886 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1399 888 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 10]  <||@
  Comment 1399 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1399 INVOKESTATIC  <||@
  Comment 1404 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
     stack:   |stack:64|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1412 890 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 892 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 5, 2, 10]  <||@
  Comment 1415 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1415 INVOKESTATIC  <||@
  Comment 1420 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:64|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1428 894 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 896 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1436 898 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:5, 5, 2, 10]  <||@
  Comment 1439 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 1439 INVOKESPECIAL  <||@
  Comment 1444 [stack:16, stack:20, stack:24, stack:32]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1452 904 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1457 block B25 null  <||@
  Comment 1457 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1457 318 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1462 320 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1467 322 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 324 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1475 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1475 INVOKESPECIAL  <||@
  Comment 1480 [stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:64|QWORD[.]  |stack:44|DWORD  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:64|QWORD[.]  |-  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1488 326 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1493 328 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1497 330 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1502 332 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1507 334 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1512 336 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1517 338 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 340 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1527 block B32 null  <||@
  Comment 1527 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1527 420 stack:40|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1532 422 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1541 block B34 null  <||@
  Comment 1541 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 438 rdx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 1543 440 rcx|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1548 442 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD  <||@
  Comment 1556 block B37 null  <||@
  Comment 1556 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 466 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 468 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 470 rdx|QWORD[*] = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1560 472 rcx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 1563 474 rcx|QWORD = SHL rcx|QWORD size: QWORD  <||@
  Comment 1566 476 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1570 478 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1573 480 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1576 482 rdx|QWORD = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 1579 484 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1581 486 - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1581 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f02aacd3d80:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1586 492 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1591 block B81 null  <||@
  Comment 1591 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1591 1004 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 1006 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36]  <||@
  Comment 1596 [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3          |4  |5 
     locals:  |-          |rdx|QWORD[.]  |r8|QWORD[.]  |rcx|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |             |           |   |    <||@
  Comment 1596 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1596 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1609 block B82 null  <||@
  Comment 1609 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1609 1010 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1613 1012 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1618 1014 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 1016 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1624 1018 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 state [bci:2, 2, 45]  <||@
  Comment 1627 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1627 INVOKESPECIAL  <||@
  Comment 1632 [stack:16, stack:20, stack:24, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5 
     locals:  |-  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 1640 1022 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1645 block B78 null  <||@
  Comment 1645 962 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1645 964 rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1648 966 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1648 [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 1648 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1655 968 r10|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1660 970 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 972 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1666 974 rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1668 976 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1671 978 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1676 block B13 null  <||@
  Comment 1676 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1676 194 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1680 196 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1685 198 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1690 200 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1693 202 JUMP ~[] destination: B13 -> B23  <||@
  Comment 1698 block B7 null  <||@
  Comment 1698 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1698 140 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1703 142 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1708 144 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1713 146 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD  <||@
  Comment 1717 148 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1719 150 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1727 block B9 null  <||@
  Comment 1727 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1727 158 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1731 160 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1735 162 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1744 block B11 null  <||@
  Comment 1744 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1744 172 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1748 174 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1753 176 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1757 178 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1761 180 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1766 block B15 null  <||@
  Comment 1766 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1766 210 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1770 212 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1775 214 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 216 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 218 JUMP ~[] destination: B15 -> B23  <||@
  Comment 1788 block B18 null  <||@
  Comment 1788 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1788 242 MEMBAR barriers: 4  <||@
  Comment 1793 244 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1804 block B19 null  <||@
  Comment 1804 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1804 248 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1808 250 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 1813 252 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 254 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1821 256 JUMP ~[] destination: B19 -> B23  <||@
  Comment 1826 block B44 null  <||@
  Comment 1826 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1826 562 r9|DWORD[_] = MOVE stack:80|DWORD[_] moveKind: DWORD  <||@
  Comment 1831 564 r8|DWORD[_] = MOVE stack:76|DWORD[_] moveKind: DWORD  <||@
  Comment 1836 566 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1841 568 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + 20] size: QWORD  <||@
  Comment 1845 570 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1847 572 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1855 block B46 null  <||@
  Comment 1855 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1855 580 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1859 582 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@476cf136 encoding: base: 0 shift: 3  <||@
  Comment 1863 584 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 1872 block B48 null  <||@
  Comment 1872 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1872 594 r11|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1876 596 MOV (x: [r11|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1881 598 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1885 600 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1889 602 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1894 block B50 null  <||@
  Comment 1894 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1894 616 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 618 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1902 620 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1905 622 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1910 624 JUMP ~[] destination: B50 -> B60  <||@
  Comment 1915 block B52 null  <||@
  Comment 1915 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 632 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1920 634 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1923 636 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1926 638 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1931 640 JUMP ~[] destination: B52 -> B60  <||@
  Comment 1936 block B55 null  <||@
  Comment 1936 662 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1936 664 MEMBAR barriers: 4  <||@
  Comment 1941 666 CMPCONSTBRANCH [r10|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1952 block B56 null  <||@
  Comment 1952 668 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1952 670 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1957 672 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 674 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1963 676 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1968 678 JUMP ~[] destination: B56 -> B60  <||@
  Comment 1973 block B10 null  <||@
  Comment 1973 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1973 166 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1973 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1978 168 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1983 block B20 null  <||@
  Comment 1983 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 260 MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1988 262 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1992 264 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1995 266 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 2004 block B22 null  <||@
  Comment 2004 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2004 286 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2008 288 MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 2013 290 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 2017 292 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2021 294 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2025 296 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2030 298 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2035 300 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 302 JUMP ~[] destination: B22 -> B23  <||@
  Comment 2043 block B47 null  <||@
  Comment 2043 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2043 588 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 2043 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 2048 590 JUMP ~[] destination: B47 -> B49  <||@
  Comment 2053 block B57 null  <||@
  Comment 2053 680 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2053 682 MOVB [r10|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 2058 684 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 2062 686 r10|QWORD[*] = ADD (x: r10|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 2065 688 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD  <||@
  Comment 2074 block B59 null  <||@
  Comment 2074 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2074 708 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 2078 710 MOV (x: [rsi|QWORD + r11|QWORD * 1 - 8], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 2083 712 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 2087 714 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 2091 716 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2096 718 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 720 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2102 722 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2107 724 JUMP ~[] destination: B59 -> B60  <||@
  Comment 2112 block B21 null  <||@
  Comment 2112 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2112 270 rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2115 272 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2115 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2120 274 rbx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2124 276 rdi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 2129 278 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 280 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2137 282 JUMP ~[] destination: B21 -> B23  <||@
  Comment 2142 block B58 null  <||@
  Comment 2142 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2142 692 rsi|QWORD = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 2145 694 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 2145 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 2150 696 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2155 698 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2158 700 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2161 702 r8|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2166 704 JUMP ~[] destination: B58 -> B60  <||@
  Comment 2171 block B62 null  <||@
  Comment 2171 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2171 752 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2178 754 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2181 756 r10|DWORD = MOVE input: int[-195609|0xfffffffffffd03e7]  <||@
  Comment 2187 758 JUMP ~[] destination: B62 -> B71  <||@
  Comment 2187 block B71 null  <||@
  Comment 2187 864 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2187 866 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2194 868 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2201 870 DEOPT info [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 2201 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2206 [rdx:0, stack:24]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2        
     locals:  |rdx|QWORD[.]  |stack:72|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdx|QWORD[.]  |stack:72|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2214 block B35 null  <||@
  Comment 2214 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2214 446 r10|DWORD = MOVE input: int[-190489|0xfffffffffffd17e7]  <||@
  Comment 2220 450 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2225 452 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2230 454 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2230 block B36 null  <||@
  Comment 2230 456 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2230 458 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2237 460 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2248 462 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 2248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2253 [rcx:0, rdx:0]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r11|DWORD  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2261 block B66 null  <||@
  Comment 2261 784 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2261 786 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2268 788 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2271 790 r10|DWORD = MOVE input: int[-197657|0xfffffffffffcfbe7]  <||@
  Comment 2277 792 JUMP ~[] destination: B66 -> B71  <||@
  Comment 2279 block B92 null  <||@
  Comment 2279 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2279 1124 stack:28|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2283 1126 MOV [r15|QWORD + 1156] y: -147251 size: DWORD  <||@
  Comment 2294 1128 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2305 1130 DEOPT info [bci:36]  <||@
  Comment 2305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2310 [rdx:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2                  |3               |4  |5 
     locals:  |-          |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |                   |                |   |    <||@
  Comment 2318 block B30 null  <||@
  Comment 2318 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2318 386 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 388 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2324 390 r10|DWORD = MOVE input: int[-188441|0xfffffffffffd1fe7]  <||@
  Comment 2330 392 JUMP ~[] destination: B30 -> B36  <||@
  Comment 2332 block B75 null  <||@
  Comment 2332 930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2332 932 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2339 934 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2342 936 r10|DWORD = MOVE input: int[-34099|0xffffffffffff7acd]  <||@
  Comment 2348 938 JUMP ~[] destination: B75 -> B94  <||@
  Comment 2348 block B94 null  <||@
  Comment 2348 1140 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2348 1142 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2355 1144 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2362 1146 DEOPT info [bci:0]  <||@
  Comment 2362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2367 [rdx:0, rsi:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:72|QWORD[.]  |-  |-  |-   <||@
  Comment 2375 block B72 null  <||@
  Comment 2375 872 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2375 874 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2382 876 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2385 878 r10|DWORD = MOVE input: int[-123443|0xfffffffffffe1dcd]  <||@
  Comment 2391 880 JUMP ~[] destination: B72 -> B94  <||@
  Comment 2393 block B91 null  <||@
  Comment 2393 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2393 1112 rbx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2397 1114 rcx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2401 1116 MOV [r15|QWORD + 1156] y: -145459 size: DWORD  <||@
  Comment 2412 1118 MOV [r15|QWORD + 1168] y: 10392 size: QWORD  <||@
  Comment 2423 1120 DEOPT info [bci:51]  <||@
  Comment 2423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2428 [rdx:0, stack:24]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3          |4          |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |rbx|DWORD  |-   <||@
  Comment 2436 block B28 null  <||@
  Comment 2436 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2436 370 rcx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2439 372 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2442 374 r10|DWORD = MOVE input: int[-186393|0xfffffffffffd27e7]  <||@
  Comment 2448 376 JUMP ~[] destination: B28 -> B36  <||@
  Comment 2453 block B64 null  <||@
  Comment 2453 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2453 772 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2460 774 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2463 776 r10|DWORD = MOVE input: int[-196633|0xfffffffffffcffe7]  <||@
  Comment 2469 778 JUMP ~[] destination: B64 -> B71  <||@
  Comment 2474 block B68 null  <||@
  Comment 2474 800 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2474 802 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2481 804 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 806 r10|DWORD = MOVE input: int[-198681|0xfffffffffffcf7e7]  <||@
  Comment 2490 808 JUMP ~[] destination: B68 -> B71  <||@
  Comment 2495 block B93 null  <||@
  Comment 2495 1132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2495 1134 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2502 1136 r10|DWORD = MOVE input: int[-23347|0xffffffffffffa4cd]  <||@
  Comment 2508 1138 JUMP ~[] destination: B93 -> B94  <||@
  Comment 2513 block B70 null  <||@
  Comment 2513 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2513 856 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2520 858 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2523 860 r10|DWORD = MOVE input: int[-194579|0xfffffffffffd07ed]  <||@
  Comment 2529 862 JUMP ~[] destination: B70 -> B71  <||@
  Comment 2534 block B33 null  <||@
  Comment 2534 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2534 426 r10|DWORD = MOVE input: int[-189465|0xfffffffffffd1be7]  <||@
  Comment 2540 430 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2545 432 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2550 434 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2560 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 2585 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2605 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 2633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2638 [rcx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2668 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2673 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2703 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2708 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2738 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2743 [rsi:0, r10:0, r13:0, stack:8, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   <||@
  Comment 2773 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2778 [rcx:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2808 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2813 [rcx:0, rsi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r10|QWORD[.]  |r11|DWORD  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |r10|QWORD[.]  |-  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2843 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2848 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2878 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2883 [rdx:0, rdi:0, r10:0, r13:0, stack:16, stack:20, stack:24, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2        
     locals:  |r10|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r10|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2913 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2918 [rcx:0, rdx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2948 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2953 [rdx:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |-   <||@
  Comment 2983 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 2988 [rdx:0, r8:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3          |4  |5 
     locals:  |-          |rdx|QWORD[.]  |r8|QWORD[.]  |rcx|DWORD  |-  |- 
     stack:   |r11|DWORD  |r10|DWORD     |             |           |   |    <||@
  Comment 3018 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 3023 [rcx:0, rsi:0, stack:16, stack:20, stack:24, stack:32]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 3031 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3031 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3037 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 3037 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
