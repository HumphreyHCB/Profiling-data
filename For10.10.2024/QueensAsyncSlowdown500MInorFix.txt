--- Execution profile ---
Total samples       : 348697
unknown_Java        : 22503 (6.45%)
not_walkable_Java   : 667 (0.19%)

--- 15157842124 ns (4.35%), 15155 samples
  [ 0] Queens.getRowColumn
  [ 1] [unknown_Java]

--- 15091546921 ns (4.33%), 15089 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 10954772742 ns (3.14%), 10953 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 10358084176 ns (2.97%), 10356 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 10081300911 ns (2.89%), 10080 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 9685370575 ns (2.78%), 9684 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 8958256821 ns (2.57%), 8957 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 7537157004 ns (2.16%), 7536 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 7510059148 ns (2.15%), 7509 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 6983130529 ns (2.00%), 6982 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6760859001 ns (1.94%), 6759 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6670966362 ns (1.91%), 6670 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6459077796 ns (1.85%), 6458 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 6083895158 ns (1.74%), 6083 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 5658813658 ns (1.62%), 5658 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4858715322 ns (1.39%), 4858 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4662852355 ns (1.34%), 4662 samples
  [ 0] Queens.setRowColumn
  [ 1] [unknown_Java]

--- 4611730351 ns (1.32%), 4611 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4250607520 ns (1.22%), 4250 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4201536855 ns (1.20%), 4201 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 4059901327 ns (1.16%), 4059 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3974606963 ns (1.14%), 3974 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3960643290 ns (1.14%), 3960 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3931767391 ns (1.13%), 3931 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3754483074 ns (1.08%), 3754 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3563548686 ns (1.02%), 3563 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3487429140 ns (1.00%), 3487 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3467642729 ns (0.99%), 3467 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3010518683 ns (0.86%), 3010 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2982416884 ns (0.86%), 2982 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2962439417 ns (0.85%), 2962 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2904524219 ns (0.83%), 2904 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2767439727 ns (0.79%), 2767 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2554483160 ns (0.73%), 2554 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2526378387 ns (0.72%), 2526 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2502392021 ns (0.72%), 2502 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 2392607713 ns (0.69%), 2392 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2348334637 ns (0.67%), 2348 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2323482307 ns (0.67%), 2323 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2215321325 ns (0.64%), 2215 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2127252695 ns (0.61%), 2127 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2098302848 ns (0.60%), 2098 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2097343510 ns (0.60%), 2097 samples
  [ 0] Queens.placeQueen
  [ 1] [unknown_Java]

--- 2055291648 ns (0.59%), 2055 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 2049311835 ns (0.59%), 2049 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2044345772 ns (0.59%), 2044 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1948325564 ns (0.56%), 1948 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1880409560 ns (0.54%), 1880 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1874194948 ns (0.54%), 1874 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1840347444 ns (0.53%), 1840 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1827273013 ns (0.52%), 1827 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1821357368 ns (0.52%), 1821 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1773328036 ns (0.51%), 1773 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1706319888 ns (0.49%), 1706 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1654343927 ns (0.47%), 1654 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1604220658 ns (0.46%), 1604 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1593199071 ns (0.46%), 1593 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1402266917 ns (0.40%), 1402 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1335178871 ns (0.38%), 1335 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1330238942 ns (0.38%), 1330 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1325194466 ns (0.38%), 1325 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1324324396 ns (0.38%), 1324 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1315157746 ns (0.38%), 1315 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1265138542 ns (0.36%), 1265 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1258193334 ns (0.36%), 1258 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1258130769 ns (0.36%), 1258 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1244187831 ns (0.36%), 1244 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1128132554 ns (0.32%), 1128 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1122123665 ns (0.32%), 1122 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1118163068 ns (0.32%), 1118 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1109169109 ns (0.32%), 1109 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1108331946 ns (0.32%), 1109 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1097126689 ns (0.31%), 1097 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1095195346 ns (0.31%), 1095 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1066192373 ns (0.31%), 1066 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1066184214 ns (0.31%), 1066 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1049154945 ns (0.30%), 1049 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1046151746 ns (0.30%), 1046 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1019122339 ns (0.29%), 1019 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1005126956 ns (0.29%), 1005 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 986163230 ns (0.28%), 986 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 961149239 ns (0.28%), 961 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 948088987 ns (0.27%), 948 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 945205476 ns (0.27%), 945 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 933175069 ns (0.27%), 933 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 922147939 ns (0.26%), 922 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 921260052 ns (0.26%), 921 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 921212265 ns (0.26%), 921 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 896166508 ns (0.26%), 896 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 892136990 ns (0.26%), 892 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 886145699 ns (0.25%), 886 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 874122989 ns (0.25%), 874 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 871167866 ns (0.25%), 871 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 869115871 ns (0.25%), 869 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 866153234 ns (0.25%), 866 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 856128340 ns (0.25%), 856 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 832035785 ns (0.24%), 832 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 805159969 ns (0.23%), 805 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 794157224 ns (0.23%), 794 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 788042304 ns (0.23%), 788 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
159637224818   45.77%   159611  Queens.getRowColumn
112079044712   32.14%   112062  Queens.placeQueen
 56438456989   16.18%    56430  Queens.setRowColumn
 12777765291    3.66%    12775  java.util.Arrays.fill
  3097622010    0.89%     3097  Queens.queens
   667222362    0.19%      667  Interpreter
   488139493    0.14%      488  I2C/C2I adapters(0xba)
   282049228    0.08%      282  Benchmark.innerBenchmarkLoop
   231016018    0.07%      231  Queens.benchmark
    74020276    0.02%       74  InterpreterRuntime::frequency_counter_overflow_inner
    67723833    0.02%       67  [vdso]
    48024840    0.01%       48  MethodData::bci_to_dp
    47048824    0.01%       47  CompilationPolicy::method_back_branch_event
    42046591    0.01%       42  Method::is_constant_getter
    40829171    0.01%       40  clock_gettime@GLIBC_2.2.5
    40454022    0.01%       40  __tls_get_addr
    40028460    0.01%       40  LoopPredicate::apply
    35757685    0.01%       34  _raw_spin_unlock_irqrestore_[k]
    34145857    0.01%       34  G1ParScanThreadState::trim_queue_to_threshold
    34004650    0.01%       34  _dl_update_slotinfo
    32016985    0.01%       32  CompilationPolicy::call_event
    32008861    0.01%       32  CallPredicate::apply
    31042277    0.01%       31  java.lang.String.charAt
    29991747    0.01%       30  CodeHeap::find_blob
    29021756    0.01%       29  Method::is_accessor
    28086039    0.01%       28  __GI___pthread_mutex_unlock_usercnt
    26997226    0.01%       27  CodeCache::find_blob
    26013367    0.01%       26  Method::invocation_count
    25017670    0.01%       25  CompileBroker::compile_method
    24015480    0.01%       24  CompLevel CompilationPolicy::common<LoopPredicate>
    22014345    0.01%       22  JavaThread::pd_last_frame
    22007774    0.01%       22  pthread_mutex_lock@@GLIBC_2.2.5
    21007714    0.01%       21  jdk.internal.util.Preconditions.checkIndex
    19995049    0.01%       20  java.lang.StringLatin1.charAt
    19031793    0.01%       19  java.lang.String.isLatin1
    19016313    0.01%       19  SymbolTable::do_lookup
    19009324    0.01%       19  CompilationPolicy::compile
    19007354    0.01%       19  CompilationPolicy::method_invocation_event
    18025685    0.01%       18  DirectivesStack::getMatchingDirective
    18011884    0.01%       18  java.lang.StringLatin1.replace
    18008492    0.01%       18  CompilationPolicy::create_mdo
    18005575    0.01%       18  jdk.internal.util.ArraysSupport.signedHashCode
    17002902    0.00%       17  Method::backedge_count
    15706471    0.00%       15  __futex_abstimed_wait_common
    15228456    0.00%       15  os::javaTimeNanos
    15016064    0.00%       15  InstanceKlass::find_method_index
    14140316    0.00%       14  Mutex::lock_without_safepoint_check
    14033352    0.00%       14  java.nio.DirectByteBuffer.get
    14018537    0.00%       14  java.lang.String.checkIndex
    14014032    0.00%       14  CompilationPolicy::event
    14012352    0.00%       14  InvocationCounter::set_carry_on_overflow
    14010855    0.00%       14  bool CompilerOracle::has_option_value<double>
    12014115    0.00%       12  java.lang.String.length
    12013024    0.00%       12  CompileBroker::compilation_is_in_queue
    12009581    0.00%       12  jdk.internal.jimage.ImageStringsReader.stringFromByteBufferMatches
    12007353    0.00%       12  CompilationPolicy::highest_compile_level
    12003564    0.00%       12  Queens.verifyResult
    11991306    0.00%       12  CompLevel CompilationPolicy::common<CallPredicate>
    11989374    0.00%       12  SymbolTable::lookup_shared
    11005224    0.00%       11  __tls_get_addr_slow
    11005103    0.00%       11  DirectivesStack::release
    11003473    0.00%       11  java.lang.String.<init>
    11001392    0.00%       11  jdk.internal.jimage.ImageStringsReader.unmaskedHashCode
    10991963    0.00%       11  methodHandle::~methodHandle
    10007953    0.00%       10  jdk.internal.misc.ScopedMemoryAccess.getByteInternal
    10004244    0.00%       10  java.lang.String.coder
    10003622    0.00%       10  I2C/C2I adapters(0xbb)
    10003457    0.00%       10  InterpreterRuntime::frequency_counter_overflow
     9610271    0.00%        9  PerfLongVariant::sample
     9186134    0.00%        9  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
     9007312    0.00%        9  java.lang.String.equals
     9006980    0.00%        9  _invokeBasic
     9004572    0.00%        9  Method::highest_osr_comp_level
     9002921    0.00%        9  java.lang.StringLatin1.equals
     9001401    0.00%        9  JavaFrameAnchor::make_walkable
     8998702    0.00%        9  SymbolTable::lookup_only
     8997740    0.00%        9  java.util.RegularEnumSet.contains
     8051570    0.00%        8  clear_page_rep_[k]
     8003574    0.00%        8  Method::is_not_compilable
     7992724    0.00%        8  InstanceKlass::find_local_field
     7550432    0.00%        7  WatcherThread::sleep
     7319432    0.00%        7  syscall_enter_from_user_mode_[k]
     7155871    0.00%        7  __memset_avx2_unaligned_erms
     7010632    0.00%        7  java.util.Arrays.copyOfRangeByte
     7006943    0.00%        7  java.lang.AbstractStringBuilder.append
     7006932    0.00%        7  java.nio.Buffer.checkIndex
     7001502    0.00%        7  org.graalvm.collections.EconomicMapImpl.put
     7000450    0.00%        7  org.graalvm.collections.EconomicMapImpl.getHashIndex
     6998194    0.00%        7  java.util.ArrayList$Itr.next
     6996894    0.00%        7  jdk.graal.compiler.phases.common.CanonicalizerPhase.processNode
     6995320    0.00%        7  jdk.graal.compiler.options.OptionValues.get
     6324471    0.00%        6  __get_user_8_[k]
     6003841    0.00%        6  Method::is_not_osr_compilable
     6003112    0.00%        6  java.util.concurrent.ConcurrentHashMap.tabAt
     6001892    0.00%        6  jdk.graal.compiler.graph.Graph$NodeEventListener.event
     6000982    0.00%        6  ClassFileParser::parse_constant_pool_entries
     6000310    0.00%        6  java.util.Arrays.copyOf
     6000301    0.00%        6  frame::interpreter_frame_method
     5999261    0.00%        6  SystemDictionary::java_system_loader
     5995094    0.00%        6  CompilationPolicy::select_task
     5384741    0.00%        5  PlatformMonitor::wait
     5227202    0.00%        5  pthread_cond_timedwait@@GLIBC_2.3.2
     5038773    0.00%        5  void G1ScanCardClosure::do_oop_work<narrowOop>
     5031272    0.00%        5  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
     5027412    0.00%        5  do_anonymous_page_[k]
     5010542    0.00%        5  ClassFileParser::skip_over_field_signature
     5009512    0.00%        5  java.util.regex.Pattern$CharPropertyGreedy.match
     5003772    0.00%        5  CompileBroker::compile_queue
     5002940    0.00%        5  JVMCI::can_initialize_JVMCI
     5002821    0.00%        5  jdk.graal.compiler.graph.Graph.findDuplicate
     5002582    0.00%        5  java.lang.StringLatin1.indexOfChar
     5002500    0.00%        5  org.graalvm.collections.EconomicMapImpl.findHash
     5002321    0.00%        5  jdk.internal.misc.Unsafe.allocateUninitializedArray
     5002202    0.00%        5  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.forward
     5002090    0.00%        5  java.lang.String.hashCode
     4999832    0.00%        5  jdk.graal.compiler.phases.common.CanonicalizerPhase.tryCanonicalize
     4999524    0.00%        5  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     4998420    0.00%        5  ClassVerifier::verify_method
     4998221    0.00%        5  org.graalvm.collections.EconomicMapImpl.putHashEntry
     4998002    0.00%        5  jdk.graal.compiler.core.common.util.CompilationAlarm.checkProgress
     4996962    0.00%        5  java.util.regex.Matcher.reset
     4996350    0.00%        5  jdk.graal.compiler.graph.Graph.register
     4994870    0.00%        5  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
     4993881    0.00%        5  org.graalvm.collections.EconomicMapImpl.getValue
     4992420    0.00%        5  jdk.graal.compiler.lir.LIRIntrospection.visitEach
     4989370    0.00%        5  java.util.ArrayList.add
     4022650    0.00%        4  do_user_addr_fault_[k]
     4018841    0.00%        4  __alloc_pages_[k]
     4018760    0.00%        4  java.lang.String.getBytes
     4009381    0.00%        4  Symbol::decrement_refcount
     4008810    0.00%        4  jdk.internal.misc.Unsafe.getAddress
     4007362    0.00%        4  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
     4006230    0.00%        4  FieldLayout::reconstruct_layout
     4005841    0.00%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier
     4004891    0.00%        4  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     4004150    0.00%        4  update_get_addr
     4003500    0.00%        4  G1ParScanThreadState::steal_and_trim_queue
     4003473    0.00%        4  CompilerOracle::has_any_command_set
     4003320    0.00%        4  jdk.internal.misc.Unsafe.getByte
     4002790    0.00%        4  SymbolTable::do_add_if_needed
     4002712    0.00%        4  CompileBroker::compilation_is_prohibited
     4002601    0.00%        4  Method::bcp_from
     4002572    0.00%        4  jdk.vm.ci.hotspot.MetaspaceHandleObject.getMetaspacePointer
     4002283    0.00%        4  sun.reflect.generics.parser.SignatureParser.skipIdentifier
     4002001    0.00%        4  sun.reflect.generics.parser.SignatureParser.current
     4001820    0.00%        4  org.graalvm.collections.EconomicMapImpl.get
     4001531    0.00%        4  java.util.ArrayList$Itr.hasNext
     4001071    0.00%        4  java.util.HashMap.getNode
     4000831    0.00%        4  TypeArrayKlass::allocate_common
     4000291    0.00%        4  jni_GetObjectClass
     4000132    0.00%        4  jdk.graal.compiler.options.OptionKey.getValue
     4000003    0.00%        4  jdk.graal.compiler.graph.NodeIdAccessor.getNodeId
     3999764    0.00%        4  java.lang.StringLatin1.lastIndexOf
     3999573    0.00%        4  java.util.ArrayList.grow
     3998542    0.00%        4  jdk.internal.util.ArraysSupport.newLength
     3998481    0.00%        4  java.util.concurrent.ConcurrentHashMap.get
     3998120    0.00%        4  Klass::is_subclass_of
     3997951    0.00%        4  java.lang.ThreadLocal.set
     3997612    0.00%        4  java.util.concurrent.ConcurrentHashMap.transfer
     3996531    0.00%        4  jdk.graal.compiler.graph.NodeWorkList$QueueConsumingIterator.dropDeleted
     3996301    0.00%        4  Rewriter::scan_method
     3994650    0.00%        4  jdk.graal.compiler.graph.Node.clone
     3993653    0.00%        4  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
     3992300    0.00%        4  ClassVerifier::verify_invoke_instructions
     3991991    0.00%        4  sun.net.util.URLUtil.urlNoFragString
     3987601    0.00%        4  jdk.graal.compiler.nodes.cfg.ReversePostOrder.compute
     3939760    0.00%        4  futex_wake_[k]
     3211441    0.00%        3  ObjectSynchronizer::is_async_deflation_needed
     3209031    0.00%        3  __x64_sys_futex_[k]
     3190400    0.00%        3  VMError::is_error_reported
     3177902    0.00%        3  srso_safe_ret_[k]
     3170140    0.00%        3  AbsSeq::davg
     3162222    0.00%        3  syscall_exit_work_[k]
     3161910    0.00%        3  SuspendibleThreadSet::join
     3157882    0.00%        3  schedule_debug.constprop.0_[k]
     3148232    0.00%        3  G1Policy::estimate_used_young_bytes_locked
     3106052    0.00%        3  __audit_syscall_entry_[k]
     3078001    0.00%        3  WorkerThread::run
     3041302    0.00%        3  __rcu_read_unlock_[k]
     3036740    0.00%        3  frame::oops_interpreted_do
     3031432    0.00%        3  queue_work_on_[k]
     3017452    0.00%        3  java.lang.Long.<init>
     3017251    0.00%        3  ClassVerifier::generate_code_data
     3013881    0.00%        3  jdk.graal.compiler.nodes.util.GraphUtil.tryKillUnused
     3011850    0.00%        3  jdk.graal.compiler.hotspot.HotSpotGraalCompiler.compileMethod
     3008022    0.00%        3  java.io.FileOutputStream.write
     3005600    0.00%        3  java.lang.management.ManagementFactory$PlatformMBeanFinder.lambda$findSingleton$1
     3004992    0.00%        3  ConstantPool::klass_at_impl
     3004962    0.00%        3  I2C/C2I adapters(0xb)
     3004721    0.00%        3  java.util.regex.Pattern$BmpCharProperty.match
     3003900    0.00%        3  org.graalvm.collections.EconomicMapImpl.getHashTableSize
     3003220    0.00%        3  jdk.graal.compiler.debug.DebugContext.logAndIndent
     3002742    0.00%        3  org.graalvm.collections.EconomicMapImpl.find
     3002101    0.00%        3  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     3001550    0.00%        3  __memchr_avx2
     3001520    0.00%        3  java.lang.StringConcatHelper.mix
     3001500    0.00%        3  Method::bci_from
     3001481    0.00%        3  methodHandle::operator=
     3001480    0.00%        3  jdk.graal.compiler.debug.ScopeImpl.isLogEnabled
     3001460    0.00%        3  InstanceKlass::allocate_objArray
