--- Execution profile ---
Total samples       : 262518
unknown_Java        : 16746 (6.38%)
not_walkable_Java   : 810 (0.31%)

--- 11854908203 ns (4.51%), 11853 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 11525729756 ns (4.39%), 11524 samples
  [ 0] Queens.getRowColumn
  [ 1] [unknown_Java]

--- 8929511131 ns (3.40%), 8928 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 8107513899 ns (3.09%), 8107 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 5972007033 ns (2.27%), 5971 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 5914945932 ns (2.25%), 5914 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 5473075265 ns (2.08%), 5472 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4510826201 ns (1.72%), 4510 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4379666021 ns (1.67%), 4379 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4372728217 ns (1.67%), 4372 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 4252880505 ns (1.62%), 4252 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 4252451323 ns (1.62%), 4251 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3963648929 ns (1.51%), 3963 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3755666691 ns (1.43%), 3755 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 3699830083 ns (1.41%), 3699 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3694601184 ns (1.41%), 3694 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3374514961 ns (1.29%), 3374 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 3282656164 ns (1.25%), 3282 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 3073559707 ns (1.17%), 3073 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2766519960 ns (1.05%), 2766 samples
  [ 0] Queens.setRowColumn
  [ 1] [unknown_Java]

--- 2716106278 ns (1.03%), 2717 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2690269619 ns (1.02%), 2690 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2591350243 ns (0.99%), 2591 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2467341126 ns (0.94%), 2467 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2287318664 ns (0.87%), 2287 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2283342660 ns (0.87%), 2283 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2264474367 ns (0.86%), 2264 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2164387645 ns (0.82%), 2164 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2133366099 ns (0.81%), 2133 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2036644171 ns (0.78%), 2036 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1976344082 ns (0.75%), 1976 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1878458138 ns (0.72%), 1878 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1878317870 ns (0.72%), 1878 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1806149357 ns (0.69%), 1806 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1709281303 ns (0.65%), 1709 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1670281554 ns (0.64%), 1670 samples
  [ 0] Queens.placeQueen
  [ 1] [unknown_Java]

--- 1600207803 ns (0.61%), 1600 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1566273097 ns (0.60%), 1566 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1565197012 ns (0.60%), 1565 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1533217813 ns (0.58%), 1533 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1518471580 ns (0.58%), 1518 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1489280399 ns (0.57%), 1489 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1433096233 ns (0.55%), 1433 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1383285328 ns (0.53%), 1383 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1376122539 ns (0.52%), 1376 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1375300935 ns (0.52%), 1375 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1330192286 ns (0.51%), 1330 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1322280126 ns (0.50%), 1322 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1313163177 ns (0.50%), 1313 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1303221114 ns (0.50%), 1303 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1295152083 ns (0.49%), 1295 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1261138393 ns (0.48%), 1261 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1240248097 ns (0.47%), 1240 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1238247445 ns (0.47%), 1238 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1214168514 ns (0.46%), 1214 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1213170043 ns (0.46%), 1213 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1181211644 ns (0.45%), 1181 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1179196729 ns (0.45%), 1179 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1167220021 ns (0.44%), 1167 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1161209121 ns (0.44%), 1161 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1128190864 ns (0.43%), 1128 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1097184622 ns (0.42%), 1097 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1096121545 ns (0.42%), 1096 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1073211445 ns (0.41%), 1073 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1066086899 ns (0.41%), 1066 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1048175338 ns (0.40%), 1048 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1040121204 ns (0.40%), 1040 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1026144242 ns (0.39%), 1026 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 990062421 ns (0.38%), 990 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 989172136 ns (0.38%), 989 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 984178774 ns (0.37%), 984 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 972182400 ns (0.37%), 972 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 957220542 ns (0.36%), 957 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 913088090 ns (0.35%), 913 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 910075099 ns (0.35%), 910 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 909160845 ns (0.35%), 909 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 886191627 ns (0.34%), 886 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 884142369 ns (0.34%), 884 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 882177296 ns (0.34%), 882 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 855096548 ns (0.33%), 855 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 853165876 ns (0.32%), 853 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 844101336 ns (0.32%), 844 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 834009774 ns (0.32%), 834 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 830161778 ns (0.32%), 830 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 809165808 ns (0.31%), 809 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 779097958 ns (0.30%), 779 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 779086197 ns (0.30%), 779 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 768107276 ns (0.29%), 768 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 765090540 ns (0.29%), 765 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 746099851 ns (0.28%), 746 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 742087434 ns (0.28%), 742 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 738130127 ns (0.28%), 738 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 717079728 ns (0.27%), 717 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 714099042 ns (0.27%), 714 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 701072859 ns (0.27%), 701 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 684070114 ns (0.26%), 684 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 677079719 ns (0.26%), 677 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 658101503 ns (0.25%), 658 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 654109964 ns (0.25%), 654 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 640216960 ns (0.24%), 640 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
105684119269   40.25%   105667  Queens.getRowColumn
 92218129783   35.12%    92205  Queens.placeQueen
 44575094777   16.98%    44567  Queens.setRowColumn
 11755571166    4.48%    11753  java.util.Arrays.fill
  2724700133    1.04%     2724  Queens.queens
   810164868    0.31%      810  Interpreter
   609107910    0.23%      609  I2C/C2I adapters(0xba)
   227076119    0.09%      227  Benchmark.innerBenchmarkLoop
   180035421    0.07%      180  Queens.benchmark
    59499990    0.02%       59  [vdso]
    52043548    0.02%       52  LoopPredicate::apply
    46007883    0.02%       46  java.lang.String.charAt
    45017655    0.02%       45  CompilationPolicy::method_back_branch_event
    40037313    0.02%       40  InterpreterRuntime::frequency_counter_overflow_inner
    38024655    0.01%       38  CodeHeap::find_blob
    37015823    0.01%       37  java.lang.StringLatin1.charAt
    36985621    0.01%       37  _dl_update_slotinfo
    36142054    0.01%       36  G1ParScanThreadState::trim_queue_to_threshold
    33018412    0.01%       33  Method::is_constant_getter
    33013215    0.01%       33  Method::is_accessor
    32024997    0.01%       32  CompilationPolicy::call_event
    32012188    0.01%       32  Method::backedge_count
    32003668    0.01%       32  MethodData::bci_to_dp
    30009709    0.01%       30  Method::invocation_count
    27017513    0.01%       27  CompLevel CompilationPolicy::common<LoopPredicate>
    26780717    0.01%       26  _raw_spin_unlock_irqrestore_[k]
    26017509    0.01%       26  JavaThread::pd_last_frame
    24020609    0.01%       24  CallPredicate::apply
    23998176    0.01%       24  java.lang.AbstractStringBuilder.append
    23038627    0.01%       23  java.lang.StringLatin1.replace
    23023762    0.01%       23  CompilationPolicy::compile
    23006134    0.01%       23  CompileBroker::compile_method
    22279503    0.01%       21  __futex_abstimed_wait_common
    22012456    0.01%       22  jdk.internal.util.Preconditions.checkIndex
    21143985    0.01%       21  __tls_get_addr
    21037713    0.01%       21  java.lang.String.isLatin1
    21014218    0.01%       21  pthread_mutex_lock@@GLIBC_2.2.5
    21011046    0.01%       21  CompilationPolicy::highest_compile_level
    19996867    0.01%       20  java.lang.String.<init>
    19451217    0.01%       19  clock_gettime@GLIBC_2.2.5
    19088759    0.01%       19  Mutex::lock_without_safepoint_check
    19014995    0.01%       19  CodeCache::find_blob
    18993657    0.01%       19  java.lang.String.checkIndex
    18007173    0.01%       18  java.util.HashMap.putVal
    17394976    0.01%       17  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    17020108    0.01%       17  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier
    17014166    0.01%       17  jdk.internal.jimage.ImageStringsReader.unmaskedHashCode
    17011646    0.01%       17  CompilationPolicy::method_invocation_event
    16991926    0.01%       17  java.lang.String.length
    16014804    0.01%       16  java.nio.DirectByteBuffer.get
    15017222    0.01%       15  InstanceKlass::find_method_index
    15009402    0.01%       15  CompLevel CompilationPolicy::common<CallPredicate>
    15009361    0.01%       15  jdk.internal.jimage.ImageStringsReader.stringFromByteBufferMatches
    15006493    0.01%       15  java.lang.StringLatin1.indexOfChar
    14031999    0.01%       14  __GI___pthread_mutex_unlock_usercnt
    14013886    0.01%       14  java.util.concurrent.locks.AbstractQueuedSynchronizer.release
    14006016    0.01%       14  bool CompilerOracle::has_option_value<double>
    14004684    0.01%       14  InterpreterRuntime::ldc
    13057653    0.00%       13  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
    13010413    0.00%       13  SymbolTable::lookup_shared
    13005323    0.00%       13  com.sun.jna.Structure.deriveLayout
    13004836    0.00%       13  org.graalvm.collections.EconomicMapImpl.findHash
    13000082    0.00%       13  SymbolTable::do_lookup
    12004862    0.00%       12  InvocationCounter::set_carry_on_overflow
    12000313    0.00%       12  java.lang.String.coder
    11994570    0.00%       12  java.lang.String.equals
    11990283    0.00%       12  InstanceKlass::find_local_field
    11070424    0.00%       11  do_user_addr_fault_[k]
    11028892    0.00%       11  java.util.regex.Pattern$CharPropertyGreedy.match
    11025753    0.00%       11  CompilationPolicy::create_mdo
    11021053    0.00%       11  I2C/C2I adapters(0xbb)
    11008952    0.00%       11  InterpreterRuntime::frequency_counter_overflow
    11008895    0.00%       11  java.util.ArrayList.add
    11007525    0.00%       11  vframeStream::vframeStream
    11007255    0.00%       11  SystemDictionary::java_system_loader
    11005093    0.00%       11  DirectivesStack::release
    11003601    0.00%       11  jdk.internal.util.ArraysSupport.signedHashCode
    10105272    0.00%       10  __memset_avx2_unaligned_erms
    10010934    0.00%       10  com.sun.jna.Native.getNativeSize
    10007702    0.00%       10  _invokeBasic
    10005331    0.00%       10  Queens.verifyResult
    10003184    0.00%       10  java.lang.String.indexOf
    10001885    0.00%       10  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
    10001761    0.00%       10  java.util.Arrays.copyOfRangeByte
    10001052    0.00%       10  org.graalvm.collections.EconomicMapImpl.getHashIndex
     9997475    0.00%       10  java.lang.String.join
     9993054    0.00%       10  java.lang.Integer.parseInt
     9981190    0.00%       10  java.util.HashMap.hash
     9345736    0.00%        9  os::javaTimeNanos
     9003071    0.00%        9  Dictionary::find
     9002065    0.00%        9  CompileBroker::compilation_is_in_queue
     9001261    0.00%        9  Method::highest_osr_comp_level
     8988890    0.00%        9  CompilationPolicy::select_task
     8010141    0.00%        8  java.util.concurrent.ConcurrentHashMap.putVal
     8007393    0.00%        8  DirectivesStack::getMatchingDirective
     8005351    0.00%        8  Method::is_not_osr_compilable
     8001841    0.00%        8  java.util.ArrayList.grow
     7999313    0.00%        8  java.lang.StringLatin1.equals
     7998372    0.00%        8  jdk.graal.compiler.graph.Graph.findDuplicate
     7997992    0.00%        8  java.util.regex.Pattern$Branch.match
     7997892    0.00%        8  java.lang.StringLatin1.newString
     7997680    0.00%        8  java.util.Formatter$FormatSpecifier.print
     7997183    0.00%        8  java.util.Formatter.format
     7995243    0.00%        8  InstanceKlass::field
     7989751    0.00%        8  java.lang.AbstractStringBuilder.ensureCapacityInternal
     7988911    0.00%        8  java.lang.String.startsWith
     7047372    0.00%        7  charge_memcg_[k]
     7038183    0.00%        7  java.util.concurrent.locks.ReentrantLock.unlock
     7026512    0.00%        7  Method::is_not_compilable
     7017271    0.00%        7  java.lang.String.hashCode
     7006816    0.00%        7  MemAllocator::allocate
     7002834    0.00%        7  java.lang.reflect.Field.get
     7002801    0.00%        7  jdk.graal.compiler.phases.common.CanonicalizerPhase.tryCanonicalize
     7001421    0.00%        7  java.util.regex.Matcher.reset
     7000812    0.00%        7  java.util.ArrayList$Itr.next
     7000723    0.00%        7  jdk.internal.reflect.Reflection.verifyMemberAccess
     7000482    0.00%        7  frame::interpreter_frame_method
     6998952    0.00%        7  com.sun.jna.Structure.getNativeAlignment
     6998795    0.00%        7  com.sun.jna.Structure.getFieldList
     6318062    0.00%        6  __x64_sys_futex_[k]
     6042152    0.00%        6  clear_page_rep_[k]
     6008911    0.00%        6  java.util.regex.Matcher.<init>
     6004590    0.00%        6  java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock
     6003622    0.00%        6  CompilationPolicy::event
     6002692    0.00%        6  java.io.BufferedReader.implRead
     6002521    0.00%        6  java.lang.String.substring
     6002212    0.00%        6  jdk.internal.misc.ScopedMemoryAccess.getByteInternal
     6001912    0.00%        6  com.sun.jna.Structure.getFields
     6001723    0.00%        6  java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18
     6001622    0.00%        6  CompileBroker::compilation_is_prohibited
     6001004    0.00%        6  java.util.Formatter.parse
     6000950    0.00%        6  java.util.regex.Pattern$BmpCharPropertyGreedy.match
     5999913    0.00%        6  java.lang.String.getBytes
     5999040    0.00%        6  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.forward
     5997391    0.00%        6  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease
     5997002    0.00%        6  jdk.graal.compiler.util.json.JsonParser.next
     5996702    0.00%        6  java.util.Formatter$FormatSpecifier.<init>
     5996122    0.00%        6  java.util.regex.Matcher.search
     5995312    0.00%        6  org.graalvm.collections.EconomicMapImpl.put
     5995282    0.00%        6  InterpreterRuntime::anewarray
     5987002    0.00%        6  java.lang.Character.isWhitespace
     5984541    0.00%        6  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread
     5983081    0.00%        6  java.lang.Class.cast
     5330280    0.00%        5  __get_user_8_[k]
     5288242    0.00%        5  StatSamplerTask::task
     5061444    0.00%        5  G1ScanHRForRegionClosure::scan_heap_roots
     5055211    0.00%        5  queue_work_on_[k]
     5010622    0.00%        5  java.util.RegularEnumSet.contains
     5006540    0.00%        5  com.sun.jna.Structure.sortFields
     5005483    0.00%        5  jdk.vm.ci.hotspot.HotSpotSignature.parseSignature
     5005362    0.00%        5  ClassFileParser::parse_method
     5004512    0.00%        5  java.lang.StringLatin1.inflate
     5004432    0.00%        5  java.util.regex.Pattern$GroupTail.match
     5004422    0.00%        5  Method::bci_from
     5004192    0.00%        5  java.lang.Object.<init>
     5003201    0.00%        5  java.util.regex.Pattern$GroupHead.match
     5003011    0.00%        5  java.lang.reflect.AccessibleObject.verifyAccess
     5002162    0.00%        5  org.graalvm.collections.EconomicMapImpl.putHashEntry
     5002021    0.00%        5  JavaFrameAnchor::make_walkable
     5001880    0.00%        5  java.util.WeakHashMap.get
     4999202    0.00%        5  TypeArrayKlass::allocate_common
     4998912    0.00%        5  update_get_addr
     4997931    0.00%        5  java.lang.StringLatin1.lastIndexOf
     4997900    0.00%        5  java.lang.StringConcatHelper.newArray
     4997512    0.00%        5  java.util.concurrent.ConcurrentHashMap.transfer
     4995360    0.00%        5  jdk.graal.compiler.graph.NodeIdAccessor.getNodeId
     4993832    0.00%        5  org.graalvm.collections.EconomicMapImpl.find
     4991531    0.00%        5  java.util.ArrayList.get
     4989821    0.00%        5  java.util.HashMap$HashIterator.nextNode
     4989411    0.00%        5  ClassVerifier::verify_method
     4988530    0.00%        5  jdk.graal.compiler.options.OptionValues.get
     4239111    0.00%        4  srso_safe_ret_[k]
     4192742    0.00%        4  syscall_enter_from_user_mode_[k]
     4140581    0.00%        4  __audit_syscall_entry_[k]
     4083250    0.00%        4  void G1ScanCardClosure::do_oop_work<narrowOop>
     4040011    0.00%        4  HeapRegionManager::par_iterate
     4022800    0.00%        4  sun.reflect.generics.parser.SignatureParser.current
     4013391    0.00%        4  Symbol::as_klass_external_name
     4012951    0.00%        4  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>
     4012670    0.00%        4  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     4010440    0.00%        4  java.util.Formatter.<init>
     4009631    0.00%        4  methodHandle::~methodHandle
     4009311    0.00%        4  Symbol::decrement_refcount
     4007671    0.00%        4  ThreadInVMfromNative::ThreadInVMfromNative
     4004251    0.00%        4  ClassVerifier::verify_invoke_instructions
     4003971    0.00%        4  java.util.HashMap.put
     4003762    0.00%        4  jdk.graal.compiler.debug.DebugContext.isCounterEnabledSlow
     4003401    0.00%        4  InterpreterRuntime::resolve_invoke
     4002751    0.00%        4  jdk.graal.compiler.graph.NodeClass.valueNumber
     4002541    0.00%        4  java.util.AbstractCollection.addAll
     4002433    0.00%        4  java.util.HashMap$Node.<init>
     4002240    0.00%        4  InstanceKlass::allocate_objArray
     4002212    0.00%        4  clock_gettime@plt
     4001971    0.00%        4  java.lang.reflect.Field.set
     4001890    0.00%        4  java.lang.invoke.Invokers.checkCustomized
     4001350    0.00%        4  java.lang.StringCoding.countPositives
     4001040    0.00%        4  java.lang.Class.isArray
     4000890    0.00%        4  CompilerOracle::has_any_command_set
     4000820    0.00%        4  com.sun.jna.Structure.initializeFields
     4000693    0.00%        4  java.util.concurrent.ConcurrentHashMap.tabAt
