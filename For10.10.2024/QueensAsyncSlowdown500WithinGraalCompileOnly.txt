--- Execution profile ---
Total samples       : 347434
unknown_Java        : 22085 (6.36%)
not_walkable_Java   : 538 (0.15%)

--- 14901362139 ns (4.29%), 14899 samples
  [ 0] Queens.getRowColumn
  [ 1] [unknown_Java]

--- 14534948997 ns (4.18%), 14533 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 10801710277 ns (3.11%), 10800 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 10081616111 ns (2.90%), 10080 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 10029626333 ns (2.89%), 10028 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 9478502696 ns (2.73%), 9477 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 8794365760 ns (2.53%), 8793 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 7543007283 ns (2.17%), 7542 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 7450316667 ns (2.14%), 7449 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 7172693566 ns (2.06%), 7172 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6539974977 ns (1.88%), 6539 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 6493004138 ns (1.87%), 6492 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6300839374 ns (1.81%), 6300 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6043860255 ns (1.74%), 6043 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 5711884407 ns (1.64%), 5711 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4873864909 ns (1.40%), 4873 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4616610808 ns (1.33%), 4616 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4530621630 ns (1.30%), 4530 samples
  [ 0] Queens.setRowColumn
  [ 1] [unknown_Java]

--- 4234661445 ns (1.22%), 4234 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 4229726835 ns (1.22%), 4229 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4074885866 ns (1.17%), 4074 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 4043499838 ns (1.16%), 4043 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3964968542 ns (1.14%), 3964 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 3914527351 ns (1.13%), 3914 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3889565713 ns (1.12%), 3889 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3479453835 ns (1.00%), 3479 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3470509740 ns (1.00%), 3470 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 3392461529 ns (0.98%), 3392 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 3060480154 ns (0.88%), 3060 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 3033440348 ns (0.87%), 3033 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2962456206 ns (0.85%), 2962 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2774493531 ns (0.80%), 2774 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2750233092 ns (0.79%), 2750 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2542396581 ns (0.73%), 2542 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2510284993 ns (0.72%), 2510 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2497312448 ns (0.72%), 2497 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2439224413 ns (0.70%), 2439 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 2427137715 ns (0.70%), 2427 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2361611965 ns (0.68%), 2361 samples
  [ 0] java.util.Arrays.fill
  [ 1] Queens.queens
  [ 2] Queens.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2185395526 ns (0.63%), 2185 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2117273021 ns (0.61%), 2117 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2097136560 ns (0.60%), 2097 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2079283816 ns (0.60%), 2079 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2069341575 ns (0.60%), 2069 samples
  [ 0] Queens.placeQueen
  [ 1] [unknown_Java]

--- 2057249383 ns (0.59%), 2057 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2049311260 ns (0.59%), 2049 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1995245046 ns (0.57%), 1995 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1973267012 ns (0.57%), 1973 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1963304795 ns (0.56%), 1963 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1903266626 ns (0.55%), 1903 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1879318564 ns (0.54%), 1879 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1810339985 ns (0.52%), 1810 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1741325734 ns (0.50%), 1741 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1651161034 ns (0.48%), 1651 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1604254621 ns (0.46%), 1604 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1587310945 ns (0.46%), 1587 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1502186720 ns (0.43%), 1502 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1417183342 ns (0.41%), 1417 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1325300216 ns (0.38%), 1325 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1278210816 ns (0.37%), 1278 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1263224396 ns (0.36%), 1263 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1250178173 ns (0.36%), 1250 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1231318432 ns (0.35%), 1231 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1229254169 ns (0.35%), 1229 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1222106337 ns (0.35%), 1222 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1218165594 ns (0.35%), 1218 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1178239210 ns (0.34%), 1178 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1176162720 ns (0.34%), 1176 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1170205616 ns (0.34%), 1170 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1157134969 ns (0.33%), 1157 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1119311451 ns (0.32%), 1119 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1077143094 ns (0.31%), 1077 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1051284493 ns (0.30%), 1051 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1047130780 ns (0.30%), 1047 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1034148180 ns (0.30%), 1034 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1029282639 ns (0.30%), 1029 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1022194756 ns (0.29%), 1022 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1015126173 ns (0.29%), 1015 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1013144837 ns (0.29%), 1013 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 999125882 ns (0.29%), 999 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 993169673 ns (0.29%), 993 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 993161836 ns (0.29%), 993 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 974115833 ns (0.28%), 974 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 961116426 ns (0.28%), 961 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 951157095 ns (0.27%), 951 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 935034505 ns (0.27%), 935 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 924097121 ns (0.27%), 924 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 923112227 ns (0.27%), 923 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 894160445 ns (0.26%), 894 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 894101763 ns (0.26%), 894 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 881974671 ns (0.25%), 882 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 860214953 ns (0.25%), 860 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 856176700 ns (0.25%), 856 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 856103789 ns (0.25%), 856 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 853150304 ns (0.25%), 853 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 849084576 ns (0.24%), 849 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 843151876 ns (0.24%), 843 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 836155159 ns (0.24%), 836 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 815124256 ns (0.23%), 815 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 807114196 ns (0.23%), 807 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
159740236079   45.97%   159716  Queens.getRowColumn
111634421410   32.12%   111618  Queens.placeQueen
 55467284684   15.96%    55460  Queens.setRowColumn
 12893623085    3.71%    12891  java.util.Arrays.fill
  3025034364    0.87%     3024  Queens.queens
   540148501    0.16%      540  Interpreter
   510078729    0.15%      510  I2C/C2I adapters(0xba)
   255091104    0.07%      255  Benchmark.innerBenchmarkLoop
   191987901    0.06%      192  Queens.benchmark
    72734858    0.02%       71  _raw_spin_unlock_irqrestore_[k]
    67800462    0.02%       67  [vdso]
    51336450    0.01%       50  MethodData::bci_to_dp
    42076348    0.01%       41  CodeHeap::find_blob
    41024222    0.01%       41  Method::is_accessor
    40979219    0.01%       41  _dl_update_slotinfo
    40002152    0.01%       40  CompilationPolicy::method_back_branch_event
    38225174    0.01%       38  G1ParScanThreadState::trim_queue_to_threshold
    38010877    0.01%       38  InterpreterRuntime::frequency_counter_overflow_inner
    37029407    0.01%       37  LoopPredicate::apply
    36031704    0.01%       36  CallPredicate::apply
    34041851    0.01%       34  CompileBroker::compile_method
    30046531    0.01%       30  java.lang.StringLatin1.charAt
    30032656    0.01%       30  Method::backedge_count
    30028728    0.01%       30  CodeCache::find_blob
    29016368    0.01%       29  Method::is_constant_getter
    28010618    0.01%       28  CompilationPolicy::create_mdo
    27732507    0.01%       27  clock_gettime@GLIBC_2.2.5
    27038177    0.01%       27  java.lang.String.charAt
    25355862    0.01%       25  __tls_get_addr
    25011308    0.01%       25  CompilationPolicy::compile
    24042204    0.01%       24  JavaThread::pd_last_frame
    24009936    0.01%       24  Method::invocation_count
    22035829    0.01%       22  java.lang.String.isLatin1
    22012944    0.01%       22  CompilationPolicy::method_invocation_event
    21051234    0.01%       21  pthread_mutex_lock@@GLIBC_2.2.5
    20007386    0.01%       20  CompLevel CompilationPolicy::common<LoopPredicate>
    19437216    0.01%       19  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    19336497    0.01%       19  os::javaTimeNanos
    19009853    0.01%       19  CompilationPolicy::call_event
    18160048    0.01%       17  __futex_abstimed_wait_common
    18043141    0.01%       18  java.lang.String.checkIndex
    18014805    0.01%       18  DirectivesStack::getMatchingDirective
    17017607    0.00%       17  jdk.internal.jimage.ImageStringsReader.stringFromByteBufferMatches
    16995433    0.00%       17  SymbolTable::do_lookup
    16467696    0.00%       16  Mutex::lock_without_safepoint_check
    16009146    0.00%       16  DirectivesStack::release
    16008283    0.00%       16  CompLevel CompilationPolicy::common<CallPredicate>
    15425500    0.00%       15  bool CompilerOracle::has_option_value<double>
    14062372    0.00%       13  SystemDictionary::java_system_loader
    14021752    0.00%       14  java.lang.String.coder
    14009966    0.00%       14  java.lang.String.length
    13166523    0.00%       13  __GI___pthread_mutex_unlock_usercnt
    13012743    0.00%       13  java.nio.DirectByteBuffer.get
    13003195    0.00%       13  jdk.internal.jimage.ImageStringsReader.unmaskedHashCode
    13002245    0.00%       13  SymbolTable::lookup_shared
    12003483    0.00%       12  CompilationPolicy::event
    11015262    0.00%       11  InvocationCounter::set_carry_on_overflow
    11006844    0.00%       11  java.util.regex.Pattern$CharPropertyGreedy.match
    11005193    0.00%       11  jdk.internal.misc.ScopedMemoryAccess.getByteInternal
    10999932    0.00%       11  Queens.verifyResult
    10999743    0.00%       11  org.graalvm.collections.EconomicMapImpl.findHash
    10999632    0.00%       11  InstanceKlass::find_local_field
    10975412    0.00%       11  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
    10759822    0.00%       10  __get_user_8_[k]
    10014182    0.00%       10  org.graalvm.collections.EconomicMapImpl.getHashIndex
    10007163    0.00%       10  CompileBroker::compilation_is_in_queue
     9975393    0.00%       10  jdk.graal.compiler.phases.common.util.EconomicSetNodeEventListener.changed
     9015743    0.00%        9  java.util.Arrays.copyOfRangeByte
     9013991    0.00%        9  java.lang.String.<init>
     9012272    0.00%        9  InstanceKlass::find_method_index
     9008504    0.00%        9  java.lang.StringLatin1.equals
     9007813    0.00%        9  jdk.internal.util.ArraysSupport.signedHashCode
     9005533    0.00%        9  java.lang.StringLatin1.replace
     9000442    0.00%        9  methodHandle::~methodHandle
     8999684    0.00%        9  java.util.ArrayList$Itr.next
     8115573    0.00%        8  __memset_avx2_unaligned_erms
     8021581    0.00%        8  frame::interpreter_frame_method
     8016182    0.00%        8  java.util.ArrayList.add
     8012494    0.00%        8  java.util.HashMap.getNode
     8007603    0.00%        8  CompilationPolicy::highest_compile_level
     8004471    0.00%        8  I2C/C2I adapters(0xb)
     8002811    0.00%        8  java.lang.AbstractStringBuilder.append
     7012321    0.00%        7  org.graalvm.collections.EconomicMapImpl.get
     7011761    0.00%        7  Method::is_not_compilable
     7010673    0.00%        7  java.lang.String.join
     7008712    0.00%        7  TypeArrayKlass::allocate_common
     7008124    0.00%        7  CompileBroker::compile_queue
     7004990    0.00%        7  java.lang.String.equals
     7004433    0.00%        7  JavaFrameAnchor::make_walkable
     7002472    0.00%        7  Dictionary::find
     7001214    0.00%        7  jdk.internal.misc.Unsafe.getByte
     6998562    0.00%        7  java.util.RegularEnumSet.contains
     6998322    0.00%        7  org.graalvm.collections.EconomicMapImpl.put
     6993703    0.00%        7  update_get_addr
     6992781    0.00%        7  jdk.internal.org.objectweb.asm.ByteVector.putUTF8
     6989672    0.00%        7  InterpreterRuntime::frequency_counter_overflow
     6506062    0.00%        6  WatcherThread::sleep
     6287580    0.00%        6  futex_wake_[k]
     6201081    0.00%        6  syscall_enter_from_user_mode_[k]
     6164131    0.00%        6  HeapRegionManager::par_iterate
     6072832    0.00%        6  Method::bcp_from
     6043251    0.00%        6  __do_softirq_[k]
     6017222    0.00%        6  sun.reflect.generics.parser.SignatureParser.skipIdentifier
     6014221    0.00%        6  jdk.internal.util.Preconditions.checkIndex
     6005093    0.00%        6  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier
     6003242    0.00%        6  CompileBroker::compilation_is_prohibited
     6002840    0.00%        6  __tls_get_addr_slow
     6002251    0.00%        6  I2C/C2I adapters(0xbb)
     5999270    0.00%        6  java.lang.StringLatin1.indexOfChar
     5999190    0.00%        6  java.lang.Math.max
     5402081    0.00%        5  Monitor::wait_without_safepoint_check
     5331891    0.00%        5  __condvar_dec_grefs
     5234251    0.00%        5  futex_q_lock_[k]
     5187171    0.00%        5  ___pthread_mutex_unlock
     5030060    0.00%        5  SpinPause
     5026342    0.00%        5  jdk.graal.compiler.hotspot.HotSpotGraalCompiler.compileMethod
     5016841    0.00%        5  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     5015720    0.00%        5  java.lang.StringLatin1.indexOf
     5013831    0.00%        5  clear_page_rep_[k]
     5008231    0.00%        5  _invokeBasic
     5003992    0.00%        5  jdk.graal.compiler.phases.common.CanonicalizerPhase.tryCanonicalize
     5003772    0.00%        5  java.util.concurrent.ConcurrentHashMap.putVal
     5003671    0.00%        5  jdk.graal.compiler.graph.NodeWorkList$QueueConsumingIterator.dropDeleted
     5003211    0.00%        5  Method::is_not_osr_compilable
     5002921    0.00%        5  JVMCI::can_initialize_JVMCI
     5002594    0.00%        5  java.lang.String.substring
     5001720    0.00%        5  jdk.graal.compiler.debug.ScopeImpl.<init>
     4997913    0.00%        5  ClassVerifier::verify_method
     4994253    0.00%        5  jdk.internal.misc.ScopedMemoryAccess.getByte
     4315130    0.00%        4  VMError::is_error_reported
     4169911    0.00%        4  os::elapsed_counter
     4050081    0.00%        4  vmacache_find_[k]
     4033951    0.00%        4  G1ScanHRForRegionClosure::scan_heap_roots
     4019241    0.00%        4  do_user_addr_fault_[k]
     4016880    0.00%        4  java.lang.Character.codePointBefore
     4013841    0.00%        4  java.util.HashMap$ValueSpliterator.forEachRemaining
     4008872    0.00%        4  java.nio.DirectByteBuffer.ix
     4008733    0.00%        4  jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.runtime
     4006880    0.00%        4  jdk.vm.ci.hotspot.HotSpotSignature.parseSignature
     4006230    0.00%        4  org.graalvm.collections.EconomicMapImpl.find
     4006201    0.00%        4  jdk.graal.compiler.graph.NodeBitMap.mark
     4005623    0.00%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier
     4004760    0.00%        4  frame::interpreter_frame_bci
     4004431    0.00%        4  java.lang.StringConcatHelper.prepend
     4004240    0.00%        4  Unsafe_GetLong
     4003840    0.00%        4  java.lang.String.checkBoundsBeginEnd
     4003801    0.00%        4  jdk.vm.ci.hotspot.HotSpotConstantPool.getEntryAt
     4003160    0.00%        4  jdk.internal.loader.BuiltinClassLoader.defineClass
     4003061    0.00%        4  InstanceKlass::allocate_objArray
     4002752    0.00%        4  java.lang.String.indexOf
     4002442    0.00%        4  ClassFileParser::parse_constant_pool
     4001832    0.00%        4  java.util.concurrent.ConcurrentHashMap.computeIfAbsent
     4001751    0.00%        4  java.util.regex.Matcher.reset
     4000951    0.00%        4  jdk.graal.compiler.graph.Graph.fireNodeEvent
     4000280    0.00%        4  java.util.concurrent.ConcurrentHashMap.tabAt
     4000190    0.00%        4  java.util.Arrays.copyOf
     4000131    0.00%        4  org.graalvm.collections.EconomicMapImpl.getKey
     3999821    0.00%        4  jdk.internal.util.ArraysSupport.vectorizedHashCode
     3999460    0.00%        4  jdk.graal.compiler.graph.Graph.register
     3999373    0.00%        4  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.getInput
     3999142    0.00%        4  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.processInputs
     3998822    0.00%        4  jdk.graal.compiler.phases.common.CanonicalizerPhase.processNode
     3998490    0.00%        4  java.lang.StringLatin1.newString
     3998140    0.00%        4  jdk.internal.util.ArraysSupport.mismatch
     3998073    0.00%        4  java.nio.Buffer.checkIndex
     3997423    0.00%        4  ClassVerifier::generate_code_data
     3997423    0.00%        4  methodHandle::operator=
     3996971    0.00%        4  java.util.regex.Pattern$BmpCharProperty.match
     3996461    0.00%        4  jdk.internal.loader.BuiltinClassLoader.findLoadedModule
     3996410    0.00%        4  ClassFileParser::parse_method
     3995550    0.00%        4  jdk.graal.compiler.graph.Graph.withNodeSourcePosition
     3994551    0.00%        4  jdk.graal.compiler.graph.Graph.findDuplicate
     3986251    0.00%        4  jdk.graal.compiler.graph.Edges.getNodeUnsafe
     3250931    0.00%        3  __x64_sys_futex_[k]
     3230013    0.00%        3  PeriodicTask::real_time_tick
     3216810    0.00%        3  StatSamplerTask::task
     3146321    0.00%        3  G1Policy::estimate_used_young_bytes_locked
     3136192    0.00%        3  G1PrimaryConcurrentRefineThread::maybe_deactivate
     3082771    0.00%        3  srso_safe_ret_[k]
     3059621    0.00%        3  __GI___pthread_mutex_trylock
     3030100    0.00%        3  java.lang.String.getBytes
     3026152    0.00%        3  HandleMark::initialize
     3026082    0.00%        3  queue_work_on_[k]
     3025510    0.00%        3  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceMirrorKlass, narrowOop>
     3023663    0.00%        3  jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromMetaspace
     3023430    0.00%        3  void G1ScanCardClosure::do_oop_work<narrowOop>
     3020230    0.00%        3  LinkResolver::resolve_static_call
     3017450    0.00%        3  jdk.graal.compiler.printer.GraalDebugHandlersFactory.createHandlers
     3016350    0.00%        3  jdk.graal.compiler.hotspot.CompilationTask.runCompilation
     3014061    0.00%        3  resource_allocate_bytes
     3013290    0.00%        3  MemAllocator::allocate
     3012870    0.00%        3  ObjArrayAllocator::initialize
     3012010    0.00%        3  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     3010651    0.00%        3  ClassFileParser::skip_over_field_signature
     3009531    0.00%        3  java.util.regex.Matcher.match
     3009191    0.00%        3  java.lang.Long.valueOf
     3007601    0.00%        3  java.io.FileOutputStream.write
     3007322    0.00%        3  jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMethodPointer
     3006861    0.00%        3  java.lang.Object.getClass
     3006182    0.00%        3  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
