--- Execution profile ---
Total samples       : 329681
unknown_Java        : 30389 (9.22%)
not_walkable_Java   : 4298 (1.30%)
deoptimization      : 111 (0.03%)

--- 12456573314 ns (3.78%), 12454 samples
  [ 0] Queens.getRowColumn
  [ 1] [unknown_Java]

--- 9594459508 ns (2.91%), 9593 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 8963437392 ns (2.72%), 8962 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 7592738868 ns (2.30%), 7592 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6742199522 ns (2.04%), 6741 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 6000793225 ns (1.82%), 6000 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 5789034774 ns (1.76%), 5788 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 5289953744 ns (1.60%), 5289 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4732587360 ns (1.44%), 4732 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 4700821666 ns (1.43%), 4700 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 4168649156 ns (1.26%), 4168 samples
  [ 0] Interpreter
  [ 1] [not_walkable_Java]

--- 3734690364 ns (1.13%), 3734 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 3093392497 ns (0.94%), 3093 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 3022538410 ns (0.92%), 3022 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2940446976 ns (0.89%), 2940 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2737530438 ns (0.83%), 2737 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2609252406 ns (0.79%), 2609 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2573270955 ns (0.78%), 2573 samples
  [ 0] Queens.placeQueen
  [ 1] [unknown_Java]

--- 2560312357 ns (0.78%), 2560 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 2496397563 ns (0.76%), 2496 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 2333415511 ns (0.71%), 2333 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2318337796 ns (0.70%), 2318 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2266267130 ns (0.69%), 2266 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 2199321502 ns (0.67%), 2199 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2172443232 ns (0.66%), 2172 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 2150344941 ns (0.65%), 2150 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1964335559 ns (0.60%), 1964 samples
  [ 0] Queens.setRowColumn
  [ 1] [unknown_Java]

--- 1913285745 ns (0.58%), 1913 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1865208033 ns (0.57%), 1865 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1853314725 ns (0.56%), 1853 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1630268380 ns (0.49%), 1630 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1573232190 ns (0.48%), 1573 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1498402499 ns (0.45%), 1498 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1438280485 ns (0.44%), 1438 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1430260767 ns (0.43%), 1430 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1418269492 ns (0.43%), 1418 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1309178003 ns (0.40%), 1309 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1262192123 ns (0.38%), 1262 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1224049933 ns (0.37%), 1224 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 1223150084 ns (0.37%), 1223 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1217632493 ns (0.37%), 1217 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1159167789 ns (0.35%), 1159 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1143233305 ns (0.35%), 1143 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1143171352 ns (0.35%), 1143 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1117140940 ns (0.34%), 1117 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1107256184 ns (0.34%), 1107 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1098215224 ns (0.33%), 1098 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1090176272 ns (0.33%), 1090 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1088183411 ns (0.33%), 1088 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1066163395 ns (0.32%), 1066 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1042188481 ns (0.32%), 1042 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1034230861 ns (0.31%), 1034 samples
  [ 0] I2C/C2I adapters(0xbb)
  [ 1] [unknown_Java]

--- 1032084767 ns (0.31%), 1032 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1024209549 ns (0.31%), 1024 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1003350516 ns (0.30%), 1003 samples
  [ 0] I2C/C2I adapters(0xb)
  [ 1] [unknown_Java]

--- 940127719 ns (0.29%), 940 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 934145835 ns (0.28%), 934 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 867093005 ns (0.26%), 867 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 830165836 ns (0.25%), 830 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 806103309 ns (0.24%), 806 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 774126961 ns (0.23%), 774 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 748181899 ns (0.23%), 748 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 733147469 ns (0.22%), 733 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 717088486 ns (0.22%), 717 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 705104387 ns (0.21%), 705 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 705067021 ns (0.21%), 705 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 686179885 ns (0.21%), 686 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 676769865 ns (0.21%), 677 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 676094728 ns (0.21%), 676 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 661017345 ns (0.20%), 661 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 659095790 ns (0.20%), 659 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 657166114 ns (0.20%), 657 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 652125126 ns (0.20%), 652 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 618999269 ns (0.19%), 619 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 615056625 ns (0.19%), 615 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 603103913 ns (0.18%), 603 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 600049542 ns (0.18%), 600 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 597096525 ns (0.18%), 597 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 589025523 ns (0.18%), 589 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 571093115 ns (0.17%), 571 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.queens
  [ 9] Queens.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 564122713 ns (0.17%), 564 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 562138988 ns (0.17%), 562 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 560096412 ns (0.17%), 560 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 556116533 ns (0.17%), 556 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 549072552 ns (0.17%), 549 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 530061223 ns (0.16%), 530 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 515098174 ns (0.16%), 515 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 515095167 ns (0.16%), 515 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 512039648 ns (0.16%), 512 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 511186018 ns (0.16%), 511 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 508104734 ns (0.15%), 508 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.queens
  [ 5] Queens.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 499057711 ns (0.15%), 499 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.queens
  [ 6] Queens.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 497117202 ns (0.15%), 497 samples
  [ 0] Queens.setRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 485858149 ns (0.15%), 486 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 484128907 ns (0.15%), 484 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.queens
  [ 8] Queens.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 479076255 ns (0.15%), 479 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.placeQueen
  [ 7] Queens.placeQueen
  [ 8] Queens.placeQueen
  [ 9] Queens.queens
  [10] Queens.benchmark
  [11] Benchmark.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 475068350 ns (0.14%), 475 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 458071172 ns (0.14%), 458 samples
  [ 0] Queens.getRowColumn
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 442085789 ns (0.13%), 442 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.queens
  [ 4] Queens.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 441109657 ns (0.13%), 441 samples
  [ 0] Queens.placeQueen
  [ 1] Queens.placeQueen
  [ 2] Queens.placeQueen
  [ 3] Queens.placeQueen
  [ 4] Queens.placeQueen
  [ 5] Queens.placeQueen
  [ 6] Queens.queens
  [ 7] Queens.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
103582064411   31.41%   103566  Queens.getRowColumn
 68354538437   20.73%    68344  Queens.placeQueen
 31367228877    9.51%    31362  Queens.setRowColumn
  4190642812    1.27%     4190  Interpreter
  2338693077    0.71%     2338  I2C/C2I adapters(0xb)
  1820664561    0.55%     1820  jdk.graal.compiler.debug.DebugContext.isCounterEnabledSlow
  1706278781    0.52%     1706  java.util.Arrays.fill
  1502399838    0.46%     1502  I2C/C2I adapters(0xbb)
  1458594324    0.44%     1459  jdk.graal.compiler.graph.NodeIdAccessor.getNodeId
  1389301213    0.42%     1389  jdk.graal.compiler.phases.BasePhase.apply
  1296346849    0.39%     1296  jdk.graal.compiler.phases.common.CanonicalizerPhase.tryCanonicalize
  1201213924    0.36%     1201  itable stub
   964251489    0.29%      964  Queens.queens
   801334512    0.24%      801  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.rpoInnerLoopsFirst
   720237645    0.22%      720  org.graalvm.collections.EconomicMapImpl.findLinear
   650273484    0.20%      650  jdk.graal.compiler.nodes.cfg.ReversePostOrder.compute
   537375158    0.16%      537  InstanceKlass::find_method_index
   471059591    0.14%      471  jdk.graal.compiler.core.common.type.AbstractObjectStamp.join0
   445984905    0.14%      446  java.util.ArrayList.add
   440191626    0.13%      440  jdk.graal.compiler.core.common.util.CompilationAlarm.checkProgress
   422079126    0.13%      422  jdk.graal.compiler.phases.common.CanonicalizerPhase.processNode
   400092445    0.12%      400  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.perBasicBlockFrequencyAction
   385154621    0.12%      385  jdk.graal.compiler.nodes.IfNode.simplify
   381091695    0.12%      381  I2C/C2I adapters(0xbbb)
   373995178    0.11%      374  jdk.graal.compiler.nodes.loop.LoopFragment.computeNodes
   371976403    0.11%      372  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.forward
   358063741    0.11%      358  jdk.graal.compiler.lir.LIRIntrospection.visitEach
   337925464    0.10%      338  jdk.graal.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
   334008059    0.10%      334  java.util.ArrayList$Itr.next
   328130436    0.10%      328  java.util.RegularEnumSet.contains
   295067379    0.09%      295  I2C/C2I adapters(0xba)
   295043153    0.09%      295  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
   289105247    0.09%      289  java.util.concurrent.ConcurrentHashMap.computeIfAbsent
   286046098    0.09%      286  java.lang.Object.<init>
   284122707    0.09%      284  jdk.graal.compiler.lir.alloc.lsra.IntervalWalker.walkTo
   265860683    0.08%      266  jdk.graal.compiler.nodes.extended.SwitchNode.probability
   262054663    0.08%      262  jdk.graal.compiler.phases.common.LoweringPhase.process
   257037185    0.08%      257  jdk.graal.compiler.phases.graph.ReentrantNodeIterator.apply
   244017455    0.07%      244  jdk.graal.compiler.graph.Node.isAlive
   240155758    0.07%      240  jdk.graal.compiler.java.BytecodeParser.iterateBytecodesForBlock
   239131117    0.07%      239  org.graalvm.collections.EconomicMapImpl.find
   232727816    0.07%      233  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
   231046207    0.07%      231  jdk.graal.compiler.nodes.PiNode.canonical
   230115856    0.07%      230  jdk.vm.ci.hotspot.HotSpotVMConfig.config
   227971463    0.07%      228  jdk.graal.compiler.debug.DebugContext.isLogEnabled
   221995197    0.07%      222  jdk.graal.compiler.graph.NodeUsageIterator.next
   220919470    0.07%      221  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.next
   214012738    0.06%      214  jdk.graal.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
   211996529    0.06%      212  jdk.graal.compiler.lir.LIRFrameState.visitValues
   208832710    0.06%      208  G1ParScanThreadState::trim_queue_to_threshold
   207107989    0.06%      207  jdk.graal.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
   206195031    0.06%      206  jdk.graal.compiler.java.BciBlockMapping.computeBlockOrder
   206082661    0.06%      206  jdk.graal.compiler.graph.NodeWorkList$QueueConsumingIterator.dropDeleted
   205995431    0.06%      206  jdk.graal.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow
   204993866    0.06%      205  jdk.graal.compiler.graph.NodeMap.set
   204120801    0.06%      204  jdk.graal.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lowerWithoutDelegation
   203039184    0.06%      203  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.processInputs
   199035469    0.06%      199  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.hasNext
   198006850    0.06%      198  org.graalvm.collections.EconomicMapImpl.get
   196006298    0.06%      196  java.lang.StringLatin1.lastIndexOf
   194084445    0.06%      194  ConstantPool::klass_at_impl
   193080268    0.06%      193  CodeHeap::find_blob
   188036980    0.06%      188  jdk.graal.compiler.nodes.ValueNode.graph
   187057711    0.06%      187  jdk.graal.compiler.debug.DebugContext.log
   186088595    0.06%      186  jdk.graal.compiler.graph.Graph.findDuplicate
   185931571    0.06%      186  jdk.graal.compiler.graph.NodeBitMap.isMarked
   185076017    0.06%      185  org.graalvm.collections.EconomicMapImpl.put
   185065042    0.06%      185  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.compute
   184982787    0.06%      185  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.getBlocks
   181111346    0.05%      181  jdk.graal.compiler.lir.alloc.lsra.Range.intersectsAt
   180089137    0.05%      180  CodeCache::find_blob
   178960650    0.05%      179  jdk.graal.compiler.lir.LIRValueUtil.stripCast
   178012417    0.05%      178  jdk.graal.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets
   174167388    0.05%      174  jdk.graal.compiler.java.BytecodeParser.createTarget
   174025278    0.05%      174  jdk.graal.compiler.graph.NodeClass.dataEquals
   172963422    0.05%      173  java.util.Arrays.copyOf
   169058967    0.05%      169  jdk.graal.compiler.java.BytecodeParser.appendInvoke
   169058281    0.05%      169  InstanceKlass::allocate_objArray
   167939453    0.05%      168  jdk.graal.compiler.graph.NodeUsageIterable.iterator
   167041288    0.05%      167  jdk.graal.compiler.nodes.FrameState.<init>
   166997991    0.05%      167  java.util.ArrayList$Itr.hasNext
   166047926    0.05%      166  jdk.graal.compiler.lir.dfa.LocationMarker.processBlock
   165170323    0.05%      165  G1CodeRootSet::contains
   163047537    0.05%      163  jdk.graal.compiler.nodes.AbstractBeginNode$BlockNodeIterator.next
   161960845    0.05%      162  java.util.regex.Pattern.compile
   158049284    0.05%      158  org.graalvm.collections.EconomicMapImpl.getHashIndex
   157055977    0.05%      157  java.lang.Class.isInstance
   157044731    0.05%      157  jdk.vm.ci.code.ValueUtil.asRegister
   155066235    0.05%      155  jdk.graal.compiler.options.OptionValues.get
   155010060    0.05%      155  java.util.ArrayList.elementData
   153071101    0.05%      153  jdk.graal.compiler.graph.Graph.register
   146807559    0.04%      147  java.util.regex.Matcher.reset
   146020195    0.04%      146  jdk.internal.util.Preconditions.checkIndex
   146015250    0.04%      146  org.graalvm.collections.EconomicMapImpl.compareKeys
   145065377    0.04%      145  jdk.graal.compiler.graph.NodeClass$3.iterator
   145042620    0.04%      145  jdk.graal.compiler.phases.common.util.EconomicSetNodeEventListener.changed
   145000261    0.04%      145  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.getInput
   144982355    0.04%      145  org.graalvm.collections.EconomicMapImpl.findHash
   144062371    0.04%      144  jdk.graal.compiler.graph.Graph$NodeEventListener.event
   142899982    0.04%      143  CompilationPolicy::select_task
   140291549    0.04%      140  __tls_get_addr
   139977383    0.04%      140  jdk.graal.compiler.core.common.cfg.BlockMap.get
   139366891    0.04%      137  _raw_spin_unlock_irqrestore_[k]
   138967196    0.04%      139  jdk.graal.compiler.graph.NodeClass$RawEdgesIterator.<init>
   137003046    0.04%      137  java.lang.Object.getClass
   136022113    0.04%      136  jdk.graal.compiler.debug.DebugContext.isTimerEnabledSlow
   135974711    0.04%      136  I2C/C2I adapters(0xbba)
   135973899    0.04%      136  jdk.graal.compiler.graph.NodeUsageIterator.advance
   134033707    0.04%      134  jdk.graal.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
   132978878    0.04%      133  java.util.ArrayList.grow
   132913038    0.04%      133  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
   132077211    0.04%      132  jdk.graal.compiler.nodes.cfg.HIRBlock.assignPredecessorsAndSuccessors
   132075460    0.04%      132  jdk.graal.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
   132057284    0.04%      132  jdk.graal.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
   131022452    0.04%      131  jdk.graal.compiler.core.common.Fields.getCount
   129081020    0.04%      129  jdk.graal.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lowerInvoke
   128099200    0.04%      128  jdk.graal.compiler.graph.NodeList.<init>
   128091438    0.04%      128  jdk.graal.compiler.nodes.IfNode.removeOrMaterializeIf
   128071246    0.04%      128  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.computeDominators
   128031640    0.04%      128  Benchmark.innerBenchmarkLoop
   127052755    0.04%      127  jdk.graal.compiler.core.gen.NodeLIRBuilder.doBlock
   126907002    0.04%      127  jdk.graal.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
   126043815    0.04%      126  jdk.graal.compiler.debug.ScopeImpl.updateFlags
   126025067    0.04%      126  jdk.graal.compiler.debug.ScopeImpl.log
   125058864    0.04%      125  java.lang.String.length
   125048971    0.04%      125  jdk.graal.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
   124988495    0.04%      125  jdk.graal.compiler.graph.NodeMap.get
   124022367    0.04%      124  jdk.graal.compiler.debug.ScopeImpl.scope
   123949708    0.04%      124  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks
   123070283    0.04%      123  jdk.graal.compiler.graph.Node.updatePredecessor
   122964453    0.04%      123  jdk.vm.ci.hotspot.HotSpotCompiledCodeStream.writeSites
   122031156    0.04%      122  jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.runtime
   121967836    0.04%      122  jdk.graal.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
   121076369    0.04%      121  jdk.graal.compiler.debug.DebugContext.logAndIndent
   121073628    0.04%      121  jdk.graal.compiler.phases.graph.ReentrantBlockIterator.apply
   121024990    0.04%      121  java.lang.invoke.DirectMethodHandle.allocateInstance
   121016366    0.04%      121  jdk.graal.compiler.phases.common.CanonicalizerPhase.tryInferStamp
   120926600    0.04%      121  jdk.graal.compiler.nodes.calc.AddNode.canonical
   120074762    0.04%      120  InstanceKlass::array_klass
   120012275    0.04%      120  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.processStack
   120005880    0.04%      120  jdk.graal.compiler.phases.PhaseSuite.notApplicableTo
   119043600    0.04%      119  java.lang.StringLatin1.equals
   118056388    0.04%      118  jdk.graal.compiler.core.common.type.IntegerStamp$2.foldStampImpl
   118015307    0.04%      118  jdk.graal.compiler.lir.RedundantMoveElimination$Optimization.eliminateMoves
   118006698    0.04%      118  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation
   117077338    0.04%      117  jdk.graal.compiler.phases.common.inlining.InliningUtil.updateSourcePosition
   117027117    0.04%      117  jdk.graal.compiler.graph.NodeClass.valueNumber
   117015901    0.04%      117  java.util.ArrayList.<init>
   116049653    0.04%      116  java.util.ArrayDeque.pollFirst
   115075110    0.03%      115  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
   115048642    0.03%      115  jdk.graal.compiler.debug.ScopeImpl.<init>
   115034032    0.03%      115  InterpreterRuntime::frequency_counter_overflow_inner
   114035940    0.03%      114  jdk.graal.compiler.lir.phases.LIRPhase.apply
   113960347    0.03%      114  I2C/C2I adapters(0xbbbb)
   113957412    0.03%      114  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault
   113026213    0.03%      113  java.lang.String.equals
   113011934    0.03%      113  jdk.internal.misc.Unsafe.allocateInstance
   112080597    0.03%      112  jdk.graal.compiler.lir.alloc.lsra.LinearScanWalker.isRegisterInRange
   112027210    0.03%      112  jdk.graal.compiler.nodes.PiNode.guardTrySkipPi
   111998442    0.03%      112  jdk.graal.compiler.graph.Graph.withNodeSourcePosition
   109998376    0.03%      110  jdk.graal.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
   109070723    0.03%      109  jdk.graal.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
   109052894    0.03%      109  jdk.graal.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
   109047297    0.03%      109  java.util.ArrayDeque.addLast
   109045931    0.03%      109  jdk.graal.compiler.graph.TypedGraphNodeIterator.forward
   109021936    0.03%      109  jdk.graal.compiler.nodes.loop.LoopFragment.markFloating
   108024314    0.03%      108  jdk.graal.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper
   107002244    0.03%      107  jdk.graal.compiler.debug.DebugContext.scope
   106028534    0.03%      106  java.lang.invoke.Invokers$Holder.linkToTargetMethod
   105997633    0.03%      106  jdk.graal.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewStamp
   105057261    0.03%      105  jdk.graal.compiler.hotspot.HotSpotDebugInfoBuilder.verifyFrameState
   105014993    0.03%      105  InterpreterRuntime::anewarray
   104999375    0.03%      105  jdk.graal.compiler.lir.RedundantMoveElimination$Optimization.updateState
   104004941    0.03%      104  jdk.graal.compiler.virtual.phases.ea.EffectsClosure.processBlock
   103995842    0.03%      104  jdk.graal.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
   103099792    0.03%      103  InterpreterRuntime::ldc
   103042028    0.03%      103  java.lang.String.lastIndexOf
   103036202    0.03%      103  jdk.graal.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions
   103028977    0.03%      103  MethodData::bci_to_dp
   103000241    0.03%      103  jdk.graal.compiler.java.FrameStateBuilder.create
   102984422    0.03%      103  jdk.graal.compiler.graph.Position.get
   101960908    0.03%      102  jdk.graal.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
   101078805    0.03%      101  jdk.graal.compiler.core.gen.DebugInfoBuilder.build
   101049075    0.03%      101  InvocationCounter::set_carry_on_overflow
   100947583    0.03%      101  jdk.vm.ci.hotspot.HotSpotCompiledCodeStream.beforeWrite
   100080749    0.03%      100  Dictionary::find_class
    99949181    0.03%      100  jdk.graal.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
    99030887    0.03%       99  jdk.graal.compiler.core.common.alloc.BasicBlockOrderUtils.findAndMarkMostLikelySuccessor
    99021708    0.03%       99  jdk.graal.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue
    99020174    0.03%       99  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
    97815086    0.03%       98  jdk.graal.compiler.phases.schedule.SchedulePhase$Instance.checkLatestEarliestRelation
    97084193    0.03%       97  jdk.graal.compiler.java.BytecodeParser.processBlock
    96978672    0.03%       97  jdk.graal.compiler.graph.NodeUsageIterator.<init>
    96973250    0.03%       97  jdk.graal.compiler.hotspot.HotSpotCompiledCodeBuilder.getSortedSites
    96922090    0.03%       97  jdk.graal.compiler.phases.common.DominatorBasedGlobalValueNumberingPhase$GVNVisitor.enter
    95042191    0.03%       95  jdk.graal.compiler.debug.DebugContext.enterScope
    94986226    0.03%       95  jdk.graal.compiler.core.phases.BaseTier.run
    94036039    0.03%       94  org.graalvm.collections.EconomicMapImpl.putHashEntry
    94024390    0.03%       94  jdk.graal.compiler.lir.amd64.phases.StackMoveOptimizationPhase$Closure.process
    94022709    0.03%       94  jdk.graal.compiler.nodes.util.GraphUtil.killAllWithUnusedFloatingInputs
