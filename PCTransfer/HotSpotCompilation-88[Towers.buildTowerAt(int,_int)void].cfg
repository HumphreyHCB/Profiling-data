begin_compilation
  name " HotSpotCompilation-88[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-88[Towers.buildTowerAt(int, int)]"
  date 1731420414149
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i40 v29 v58 ?73 ?74 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v29 v117 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06663020690912405
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v31 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j78 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j109 
=== Usages ===
v179 v180 
=== Predecessor ===
v128 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j109  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
j109 v111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
=== Succesors ===
next: j110 
=== Usages ===
j85 v181 v182 a99 v183 v184 v185 
=== Predecessor ===
j78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - #next: j110  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v180 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
v86 
=== Predecessor ===
j109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v180 lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j85 j134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j109 
y: j84 
=== Succesors ===
=== Usages ===
v86 v111 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j109 y: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j110 
y: j85 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j110 y: j85  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139975517536256 shift: 0)
stampKind: Klass*(compressed base: 139975517536256 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a89 a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?73 ?73 v61 ?74 ?75 ?75 v59 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?73 v61 ?74 ?75 v59 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
j110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v176 a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v77 
=== Succesors ===
next: v176 
=== Usages ===
v176 a107 
=== Predecessor ===
v87 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v77 #next: v176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-31857|0xffffffffffff838f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a89 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a89 #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
value: j85 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - value: j85 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v183 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v183 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
value: j93 
stateAfter: - 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - value: j93 stateAfter: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: v174 
stateAfter: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: v174 stateAfter: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - value: i10 stateAfter: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: j94 
stateAfter: - 
=== Succesors ===
next: a99 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: j94 stateAfter: - #next: a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j109 
=== Succesors ===
next: v100 
=== Usages ===
a107 
=== Predecessor ===
v118 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j109 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
a99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v92 
values: a89 a99 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: a89 a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v100 
=== Succesors ===
next: v68 
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v100 #next: v68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a67 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a107 
=== Succesors ===
next: v35 
=== Usages ===
v58 ?53 v59 
=== Predecessor ===
v68 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a107 #next: v35  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.<init>(int)>
=== Inputs ===
arguments: a67 i3 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a67 i3  <|@  <|@
tid a50 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?53 ?73 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a50 
materializedValue: a67 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a50 materializedValue: a67  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a50 a1 i2 - i3 
virtualObjectMappings: ?53 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a50 a1 i2 - i3 virtualObjectMappings: ?53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?73 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?73 #next: v38  <|@  <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a67 i2 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a67 i2  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v59 
stateDuring: ?74 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v59 stateDuring: ?74 #next: v6  <|@  <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?57 ?75 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i40 i25 
=== Succesors ===
=== Usages ===
?9 v11 v60 ?75 ?76 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i40 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 14.008207934336522
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i48 v14 v26 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.07138671875000002
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j130 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j130 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j153 
=== Usages ===
v186 v187 
=== Predecessor ===
v171 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j153  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j153 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: j154 
=== Usages ===
j134 v188 v189 a144 v190 v191 v192 
=== Predecessor ===
j130 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: j154  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
v135 
=== Predecessor ===
j153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j153 
y: j84 
=== Succesors ===
=== Usages ===
v135 v155 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j153 y: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j154 
y: j134 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j154 y: j134  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
j154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i48 
=== Succesors ===
=== Usages ===
v178 a138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v77 
=== Succesors ===
next: v178 
=== Usages ===
v178 a151 
=== Predecessor ===
v136 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v77 #next: v178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-42865|0xffffffffffff588f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a138 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a138 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: j134 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: j134 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v190 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v190 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: j93 
stateAfter: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: j93 stateAfter: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
lastLocationAccess: - 
value: v174 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 lastLocationAccess: - value: v174 stateAfter: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - value: i10 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
lastLocationAccess: - 
value: j94 
stateAfter: - 
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 lastLocationAccess: - value: j94 stateAfter: - #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j153 
=== Succesors ===
next: v145 
=== Usages ===
a151 
=== Predecessor ===
v161 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j153 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v141 
values: a138 a144 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v141 values: a138 a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v145 
=== Succesors ===
next: v71 
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v145 #next: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a151 
=== Succesors ===
next: v19 
=== Usages ===
v60 ?57 v61 
=== Predecessor ===
v71 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a151 #next: v19  <|@  <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.<init>(int)>
=== Inputs ===
arguments: a70 i48 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a70 i48  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a54 
materializedValue: a70 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a54 materializedValue: a70  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a54 a1 i2 - i48 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a54 a1 i2 - i48 virtualObjectMappings: ?57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v60 
stateDuring: ?75 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
a70 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v60 stateDuring: ?75 #next: v22  <|@  <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a70 i2 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a70 i2  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i48 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v61 
stateDuring: ?76 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v61 stateDuring: ?76 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i48 
y: i24 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i48 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v45 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v45 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i40 v29 v58 ?73 ?74 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v29 v117 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06663020690912405
stamp: void
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v31 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j78 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j78 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j109 
=== Usages ===
v179 v180 
=== Predecessor ===
v128 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j109  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
j109 v111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
=== Succesors ===
next: j110 
=== Usages ===
j85 v181 v182 a99 v183 v184 v185 
=== Predecessor ===
j78 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - #next: j110  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j78 
index: - 
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j78 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v180 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
v86 
=== Predecessor ===
j109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v180 lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j85 j134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j109 
y: j84 
=== Succesors ===
=== Usages ===
v86 v111 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j109 y: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j110 
y: j85 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j110 y: j85  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139975517536256 shift: 0)
stampKind: Klass*(compressed base: 139975517536256 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j93 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a89 a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?73 ?73 v61 ?74 ?75 ?75 v59 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?73 v61 ?74 ?75 v59 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
j110 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a89 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a89  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v176 a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v77 
=== Succesors ===
next: v176 
=== Usages ===
v176 a107 
=== Predecessor ===
v87 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v77 #next: v176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-31857|0xffffffffffff838f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a89 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
a89 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a89 #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v176 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
lastLocationAccess: - 
value: j85 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 lastLocationAccess: - value: j85 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v3|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v183 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v183 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result [v3|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v181 
lastLocationAccess: - 
value: j93 
stateAfter: - 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v181 lastLocationAccess: - value: j93 stateAfter: - #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v3|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: v174 
stateAfter: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: v174 stateAfter: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v3|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - value: i10 stateAfter: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v3|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j109 
index: - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: j94 
stateAfter: - 
=== Succesors ===
next: a99 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: j94 stateAfter: - #next: a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a99 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j109 
=== Succesors ===
next: v100 
=== Usages ===
a107 
=== Predecessor ===
v118 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j109 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
a99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v92 
values: a89 a99 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v92 values: a89 a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v100 
=== Succesors ===
next: v68 
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v100 #next: v68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a67 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a107 
=== Succesors ===
next: v35 
=== Usages ===
v58 ?53 v59 
=== Predecessor ===
v68 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a107 #next: v35  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.<init>(int)>
=== Inputs ===
arguments: a67 i3 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a67 i3  <|@  <|@
tid a50 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?53 ?73 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?53 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a50 
materializedValue: a67 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a50 materializedValue: a67  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a50 a1 i2 - i3 
virtualObjectMappings: ?53 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a50 a1 i2 - i3 virtualObjectMappings: ?53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?73 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?73 #next: v38  <|@  <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a67 i2 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a67 i2  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v59 
stateDuring: ?74 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v59 stateDuring: ?74 #next: v6  <|@  <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?57 ?75 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i48 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i40 i25 
=== Succesors ===
=== Usages ===
?9 v11 v60 ?75 ?76 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i40 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 14.008207934336522
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i48 v14 v26 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.07138671875000002
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j130 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j130 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j153 
=== Usages ===
v186 v187 
=== Predecessor ===
v171 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j153  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j153 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: j154 
=== Usages ===
j134 v188 v189 a144 v190 v191 v192 
=== Predecessor ===
j130 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: j154  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
v135 
=== Predecessor ===
j153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j153 
y: j84 
=== Succesors ===
=== Usages ===
v135 v155 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j153 y: j84  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j154 
y: j134 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j154 y: j134  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v136 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
j154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v136 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i48 
=== Succesors ===
=== Usages ===
v178 a138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?9 
arguments: v77 
=== Succesors ===
next: v178 
=== Usages ===
v178 a151 
=== Predecessor ===
v136 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?9 arguments: v77 #next: v178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-42865|0xffffffffffff588f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a138 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a138 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: j134 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: j134 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v12|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v190 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v190 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: j93 
stateAfter: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: j93 stateAfter: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
lastLocationAccess: - 
value: v174 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 lastLocationAccess: - value: v174 stateAfter: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - value: i10 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v12|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j153 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
lastLocationAccess: - 
value: j94 
stateAfter: - 
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 lastLocationAccess: - value: j94 stateAfter: - #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j153 
=== Succesors ===
next: v145 
=== Usages ===
a151 
=== Predecessor ===
v161 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j153 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a151 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v141 
values: a138 a144 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v141 values: a138 a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: 0]
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v140 v145 
=== Succesors ===
next: v71 
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v140 v145 #next: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a151 
=== Succesors ===
next: v19 
=== Usages ===
v60 ?57 v61 
=== Predecessor ===
v71 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a151 #next: v19  <|@  <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.<init>(int)>
=== Inputs ===
arguments: a70 i48 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a70 i48  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a54 
materializedValue: a70 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a54 materializedValue: a70  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a54 a1 i2 - i48 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a54 a1 i2 - i48 virtualObjectMappings: ?57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 12]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v60 
stateDuring: ?75 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
a70 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v60 stateDuring: ?75 #next: v22  <|@  <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a70 i2 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a70 i2  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i48 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v61 
stateDuring: ?76 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v61 stateDuring: ?76 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i48 
y: i24 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i48 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v44 v45 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v44 v45 #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[[116, 118[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 10[[46, 47[[52, 55[[96, 97[[102, 105[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[44, 47[[50, 55[[94, 97[[100, 105[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[46, 47[[54, 55[[96, 97[[104, 105[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[42, 47[[48, 55[[92, 97[[98, 105[[114, 116[[140, 142[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 124[[136, 150[6 MustHaveRegister 48 ShouldHaveRegister 98 ShouldHaveRegister 109 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 124[[136, 150[8 MustHaveRegister 52 ShouldHaveRegister 102 ShouldHaveRegister 109 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [10, 56[[136, 150[10 MustHaveRegister 12 MustHaveRegister 44 ShouldHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [16, 36[16 MustHaveRegister 18 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q rax|q [144, 149[144 MustHaveRegister 146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v3|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [40, 50[42 ShouldHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v2|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v18|d [60, 106[[110, 124[62 MustHaveRegister 94 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [66, 86[66 MustHaveRegister 68 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [68, 74[68 MustHaveRegister 70 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q rax|q [118, 123[118 MustHaveRegister 120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v12|q [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [90, 100[92 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v11|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [112, 114[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[[116, 118[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 10[[46, 47[[52, 55[[96, 97[[102, 105[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[44, 47[[50, 55[[94, 97[[100, 105[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[46, 47[[54, 55[[96, 97[[104, 105[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[42, 47[[48, 55[[92, 97[[98, 105[[114, 116[[140, 142[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 40[6 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 40[8 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 45[10 MustHaveRegister 12 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [16, 36[16 MustHaveRegister 18 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [144, 149[144 MustHaveRegister 146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q v3|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v8|q [40, 45[42 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v18|d [60, 95[62 MustHaveRegister 94 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [66, 86[66 MustHaveRegister 68 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [68, 74[68 MustHaveRegister 70 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [118, 123[118 MustHaveRegister 120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|q [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v16|q [90, 95[92 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[r10|d]" v18|d v11|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [112, 114[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[vstack:1|q]" v0|q v0|q [40, 45[ "SpillInDominator"
  v22|d DWORD "[vstack:0|d]" v1|d v1|d [40, 43[ "SpillInDominator"
  v23|d DWORD "[vstack:4|d]" v2|d v2|d [45, 56[[136, 150[56 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:3|q]" v9|q v9|q [45, 50[50 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:1|q]" v0|q v0|q [45, 60[48 ShouldHaveRegister  "SpillInDominator"
  v26|d DWORD "[vstack:0|d]" v1|d v1|d [43, 60[52 ShouldHaveRegister  "SpillInDominator"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [60, 90[ "SpillInDominator"
  v28|q QWORD "[vstack:1|q]" v0|q v0|q [60, 90[ "SpillInDominator"
  v29|d DWORD "[vstack:7|d]" v11|d v11|d [95, 106[[110, 124[106 ShouldHaveRegister  "OneSpillStore"
  v30|q QWORD "[vstack:1|q]" v0|q v0|q [90, 95[ "SpillInDominator"
  v31|d DWORD "[vstack:0|d]" v1|d v1|d [90, 93[ "SpillInDominator"
  v32|q QWORD "[vstack:6|q]" v17|q v17|q [95, 100[100 ShouldHaveRegister  "OneSpillStore"
  v33|q QWORD "[vstack:1|q]" v0|q v0|q [95, 124[[136, 150[98 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
  v34|d DWORD "[vstack:0|d]" v1|d v1|d [93, 124[[136, 150[102 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = STACKMOVE (input: v22|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v21|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = STACKMOVE (input: v31|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = STACKMOVE (input: v30|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[[116, 118[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 10[[46, 47[[52, 55[[96, 97[[102, 105[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[44, 47[[50, 55[[94, 97[[100, 105[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[46, 47[[54, 55[[96, 97[[104, 105[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[42, 47[[48, 55[[92, 97[[98, 105[[114, 116[[140, 142[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 40[6 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 40[8 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 45[10 MustHaveRegister 12 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [16, 36[16 MustHaveRegister 18 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [144, 149[144 MustHaveRegister 146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q v3|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v8|q [40, 45[42 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v18|d [60, 95[62 MustHaveRegister 94 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [66, 86[66 MustHaveRegister 68 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [68, 74[68 MustHaveRegister 70 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [118, 123[118 MustHaveRegister 120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|q [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v16|q [90, 95[92 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[r10|d]" v18|d v11|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [112, 114[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[vstack:1|q]" v0|q v0|q [40, 45[ "SpillInDominator"
  v22|d DWORD "[vstack:0|d]" v1|d v1|d [40, 43[ "SpillInDominator"
  v23|d DWORD "[vstack:4|d]" v2|d v2|d [45, 56[[136, 150[56 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:3|q]" v9|q v9|q [45, 50[50 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:1|q]" v0|q v0|q [45, 60[48 ShouldHaveRegister  "SpillInDominator"
  v26|d DWORD "[vstack:0|d]" v1|d v1|d [43, 60[52 ShouldHaveRegister  "SpillInDominator"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [60, 90[ "SpillInDominator"
  v28|q QWORD "[vstack:1|q]" v0|q v0|q [60, 90[ "SpillInDominator"
  v29|d DWORD "[vstack:7|d]" v11|d v11|d [95, 106[[110, 124[106 ShouldHaveRegister  "OneSpillStore"
  v30|q QWORD "[vstack:1|q]" v0|q v0|q [90, 95[ "SpillInDominator"
  v31|d DWORD "[vstack:0|d]" v1|d v1|d [90, 93[ "SpillInDominator"
  v32|q QWORD "[vstack:6|q]" v17|q v17|q [95, 100[100 ShouldHaveRegister  "OneSpillStore"
  v33|q QWORD "[vstack:1|q]" v0|q v0|q [95, 124[[136, 150[98 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
  v34|d DWORD "[vstack:0|d]" v1|d v1|d [93, 124[[136, 150[102 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = STACKMOVE (input: v22|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v21|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [v16|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = STACKMOVE (input: v31|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = STACKMOVE (input: v30|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [v14|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [v6|QWORD[.]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[[116, 118[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 10[[46, 47[[52, 55[[96, 97[[102, 105[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[44, 47[[50, 55[[94, 97[[100, 105[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[46, 47[[54, 55[[96, 97[[104, 105[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v9|q [0, 6[[42, 47[[48, 55[[92, 97[[98, 105[[114, 116[[140, 142[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[46, 47[[54, 55[[96, 97[[104, 105[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 40[6 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 40[8 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 45[10 MustHaveRegister 12 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [16, 36[16 MustHaveRegister 18 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 24[18 MustHaveRegister 20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [144, 149[144 MustHaveRegister 146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q v3|q [36, 39[36 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q v8|q [40, 45[42 ShouldHaveRegister  "OneSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v2|d [56, 59[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v18|d [60, 95[62 MustHaveRegister 94 ShouldHaveRegister  "OneSpillStore"
  v12|q QWORD "[r11|q]" v12|q -1 [66, 86[66 MustHaveRegister 68 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r8|q]" v13|q -1 [68, 74[68 MustHaveRegister 70 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [118, 123[118 MustHaveRegister 120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q v12|q [86, 89[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q v16|q [90, 95[92 ShouldHaveRegister  "OneSpillStore"
  v18|d DWORD "[r10|d]" v18|d v11|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [112, 114[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[vstack:1|q]" v0|q v0|q [40, 45[ "SpillInDominator"
  v22|d DWORD "[vstack:0|d]" v1|d v1|d [40, 43[ "SpillInDominator"
  v23|d DWORD "[vstack:4|d]" v2|d v2|d [45, 56[[136, 150[56 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:3|q]" v9|q v9|q [45, 50[50 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:1|q]" v0|q v0|q [45, 60[48 ShouldHaveRegister  "SpillInDominator"
  v26|d DWORD "[vstack:0|d]" v1|d v1|d [43, 60[52 ShouldHaveRegister  "SpillInDominator"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [60, 90[ "SpillInDominator"
  v28|q QWORD "[vstack:1|q]" v0|q v0|q [60, 90[ "SpillInDominator"
  v29|d DWORD "[vstack:7|d]" v11|d v11|d [95, 106[[110, 124[106 ShouldHaveRegister  "OneSpillStore"
  v30|q QWORD "[vstack:1|q]" v0|q v0|q [90, 95[ "SpillInDominator"
  v31|d DWORD "[vstack:0|d]" v1|d v1|d [90, 93[ "SpillInDominator"
  v32|q QWORD "[vstack:6|q]" v17|q v17|q [95, 100[100 ShouldHaveRegister  "OneSpillStore"
  v33|q QWORD "[vstack:1|q]" v0|q v0|q [95, 124[[136, 150[98 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
  v34|d DWORD "[vstack:0|d]" v1|d v1|d [93, 124[[136, 150[102 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = STACKMOVE (input: v22|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = STACKMOVE (input: v21|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [v17|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = STACKMOVE (input: v31|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = STACKMOVE (input: v30|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v3|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction v4|QWORD = LEA address: [v3|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: v4|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: v4|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [v3|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [v3|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [v3|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [v3|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [v3|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction v8|QWORD[.] = MOVE input: v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v9|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction v10|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v12|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction v13|QWORD = LEA address: [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [v12|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [v12|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction v16|QWORD[.] = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: v0|QWORD[.] v17|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction v18|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction rsi|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  118  <|@ instruction v14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v11|DWORD 
>@ <|@ instruction NULLCHECK address: [v14|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  138  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOVE input: v20|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  144  <|@ instruction v6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v6|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:3|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = DEC value: vstack:4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction r10|DWORD = DEC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   18  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   20  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   28  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   32  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   34  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:3|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = DEC value: vstack:4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr   78  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  106  <|@ instruction r10|DWORD = DEC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  148  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction vstack:3|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:3|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: vstack:4|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction vstack:6|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: vstack:7|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction vstack:7|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: vstack:1|QWORD[.] vstack:0|DWORD - vstack:7|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction vstack:4|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: vstack:1|QWORD[.] vstack:0|DWORD vstack:4|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [16, 153[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [14, 153[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [66, 72[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [26, 78[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [138, 144[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [98, 150[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [16, 153[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [14, 153[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:48|q]" vstack:3|q -1 [66, 72[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:32|d]" vstack:4|d -1 [26, 78[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:48|q]" vstack:6|q -1 [138, 144[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [98, 150[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B11" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589465633063285730
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 4 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 12 <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 4 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 12 <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 4 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 12 <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 4 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 12 <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B12" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   14  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD <|@ <|@
      nr   22  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606498196772955049
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 4 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3 <|@ <|@
      nr   46  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   50  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4606582267250002308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   78  <|@ instruction rcx|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr   90  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   92  <|@ instruction r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622956306705407861
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3 <|@ <|@
      nr  118  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  122  <|@ instruction MOV x: [r11|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV x: [r11|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623024657095818462
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 12]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 10 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 16]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr  150  <|@ instruction r10|DWORD = DEC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623550097577363830
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593413270635721815
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr   98  <|@ instruction stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: stack:40|QWORD[.] stack:28|DWORD - stack:32|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:2] <|@ <|@
      nr  106  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 12 <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4576534132312078016
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   26  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rax:0, stack:8]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: stack:40|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000974e7f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec2841817f20000000000f8577020000c5f8c6c000c5f8c6c000c5f8c6c00048896c242085c90f8cfb010000c5f8c6c002c5f8c6c002c5f8c6c0024889742408895424144d8b97b80100004d8d5a184d3b9fc80100000f87f7010000c5f8c6c004c5f8c6c004c5f8c6c0044d899fb8010000410f0d8ad800000049c7020100000041c74208addeadde41c7420c0000000049c7421000000000c5f8c6c005c5f8c6c005c5f8c6c005498bf28bd1894c24104c891424e8000000000f1f8400000000000faef8c5f8c6c005c5f8c6c005c5f8c6c0050faef8488b742408488b14248b4c241490e8000000000f1f8400000000008b4c2410ffc9448bd1e9d20000006690c5f8c6c007c5f8c6c007c5f8c6c0074d8b9fb80100004d8d4318660f1f4400004d3b87c80100000f87c1000000c5f8c6c009c5f8c6c009c5f8c6c0094d8987b8010000410f0d8bd800000049c7030100000041c74308addeadde41c7430c0000000049c7431000000000c5f8c6c00ac5f8c6c00ac5f8c6c00a498bf3418bd244895424104c891c24666690e8000000000f1f8400000000000faef8c5f8c6c00ac5f8c6c00ac5f8c6c00a0faef8488b742408488b14248b4c241490e8000000000f1f840000000000448b54241041ffcac5f8c6c006c5f8c6c006c5f8c6c006904585d20f8d17ffffffe937000000c5f8c6c008c5f8c6c008c5f8c6c008448954241048beaddeaddeaddeaddee8000000000f1f84000000000085004c8bd86690e945ffffffc5f8c6c00cc5f8c6c00cc5f8c6c00c488b6c24204883c428666690493ba7500400000f8748000000c5f877c3c5f8c6c003c5f8c6c003c5f8c6c003894c241048beaddeaddeaddeaddee8000000000f1f84000000000085004c8bd0e912feffff48896c2420e800000000e97afdfffff4488d0da4ffffff49898f68040000e918fdfffff441c787840400008f58ffff49c787900400000000000090e8000000000f1f84000000000041c787840400008f83ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD  <||@
  Comment 98 6 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 106 block B2 null  <||@
  Comment 106 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 -1 GTMARKER markerId: 2  <||@
  Comment 121 14 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 126 16 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 130 18 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 137 20 r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD  <||@
  Comment 141 22 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 154 block B4 null  <||@
  Comment 154 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 -1 GTMARKER markerId: 4  <||@
  Comment 169 42 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 176 44 AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3  <||@
  Comment 184 46 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 191 48 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 191 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 199 50 MOV x: [r10|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 207 52 MOV x: [r10|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 215 54 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 215 56 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 215 block B5 null  <||@
  Comment 215 58 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 215 -1 GTMARKER markerId: 5  <||@
  Comment 230 60 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 233 62 rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 235 64 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 239 66 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 243 68 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 243 {HotSpotMethod<Towers$TowersDisk.<init>(int)>}  <||@
  Comment 243 INVOKESPECIAL  <||@
  Comment 248 [stack:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD     |-  |stack:32|DWORD 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |   |                 <||@
  Comment 256 -1 GTMARKER markerId: 5  <||@
  Comment 277 70 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 72 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 286 74 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 290 76 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 291 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 291 INVOKESPECIAL  <||@
  Comment 296 [stack:8]at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 304 78 rcx|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 310 80 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 313 82 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 318 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 318 88 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 -1 GTMARKER markerId: 7  <||@
  Comment 335 90 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 342 92 r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD  <||@
  Comment 346 94 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 365 block B9 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 365 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 -1 GTMARKER markerId: 9  <||@
  Comment 380 114 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 387 116 AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3  <||@
  Comment 395 118 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 402 120 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 402 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 410 122 MOV x: [r11|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 418 124 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 426 126 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 426 128 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 426 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 426 130 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 426 -1 GTMARKER markerId: 10  <||@
  Comment 441 132 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 444 134 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 447 136 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 452 138 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 456 140 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 459 {HotSpotMethod<Towers$TowersDisk.<init>(int)>}  <||@
  Comment 459 INVOKESPECIAL  <||@
  Comment 464 [stack:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD     |-  |stack:32|DWORD 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |   |                 <||@
  Comment 472 -1 GTMARKER markerId: 10  <||@
  Comment 493 142 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 498 144 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 502 146 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 506 148 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 507 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 507 INVOKESPECIAL  <||@
  Comment 512 [stack:8]at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 520 150 r10|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 528 152 JUMP ~outgoingValues: [] destination: B10 -> B6  <||@
  Comment 528 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 528 84 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 528 -1 GTMARKER markerId: 6  <||@
  Comment 543 86 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD  <||@
  Comment 558 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 558 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 -1 GTMARKER markerId: 8  <||@
  Comment 573 98 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 578 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 578 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 588 102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2]  <||@
  Comment 588 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 593 [stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 601 104 NULLCHECK address: [rax|QWORD[.]] state [bci:2]  <||@
  Comment 601 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 603 106 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 606 110 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 613 block B12 null  <||@
  Comment 613 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 613 -1 GTMARKER markerId: 12  <||@
  Comment 628 160 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 640 POLL_RETURN_FAR  <||@
  Comment 657 block B3 null  <||@
  Comment 657 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 657 -1 GTMARKER markerId: 3  <||@
  Comment 672 26 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 676 28 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 676 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 686 30 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 686 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 691 [stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 699 32 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 699 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 699 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 701 34 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 704 38 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 714 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 768 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 773 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 803 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 808 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 816 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 816 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 822 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-88[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-88[Towers.buildTowerAt(int, int)]"
  date 1731420414259
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f4ef70c3960 448b560849bc000000974e7f00004d03d44d33e4493bc20f8503a7f8ff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec2841817f20000000000f8577020000c5f8c6c000c5f8c6c000c5f8c6c00048896c242085c90f8cfb010000c5f8c6c002c5f8c6c002c5f8c6c0024889742408895424144d8b97b80100004d8d5a184d3b9fc80100000f87f7010000c5f8c6c004c5f8c6c004c5f8c6c0044d899fb8010000410f0d8ad800000049c7020100000041c742083044000141c7420c0000000049c7421000000000c5f8c6c005c5f8c6c005c5f8c6c005498bf28bd1894c24104c891424e828a9f8ff0f1f8400c80200000faef8c5f8c6c005c5f8c6c005c5f8c6c0050faef8488b742408488b14248b4c241490e8f8a8f8ff0f1f8400f80200018b4c2410ffc9448bd1e9d20000006690c5f8c6c007c5f8c6c007c5f8c6c0074d8b9fb80100004d8d4318660f1f4400004d3b87c80100000f87c1000000c5f8c6c009c5f8c6c009c5f8c6c0094d8987b8010000410f0d8bd800000049c7030100000041c743083044000141c7430c0000000049c7431000000000c5f8c6c00ac5f8c6c00ac5f8c6c00a498bf3418bd244895424104c891c24666690e850a8f8ff0f1f8400a00300020faef8c5f8c6c00ac5f8c6c00ac5f8c6c00a0faef8488b742408488b14248b4c241490e820a8f8ff0f1f8400d0030003448b54241041ffcac5f8c6c006c5f8c6c006c5f8c6c006904585d20f8d17ffffffe937000000c5f8c6c008c5f8c6c008c5f8c6c008448954241048be304400984e7f0000e8cfbeffff0f1f84000000000085004c8bd86690e945ffffffc5f8c6c00cc5f8c6c00cc5f8c6c00c488b6c24204883c428666690493ba7500400000f8748000000c5f877c3c5f8c6c003c5f8c6c003c5f8c6c003894c241048be304400984e7f0000e86dbeffff0f1f84000000000085004c8bd0e912feffff48896c2420e8f105f7ffe97afdfffff4488d0da4ffffff49898f68040000e9b813f9fff441c787840400008f58ffff49c787900400000000000090e81505f9ff0f1f84000000000041c787840400008f83ffff49c7879004000000000000e8f204f9ff0f1f840000000000e86b04fffff4e88502f9fff4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a7a3f0a slotKind: QWORD  <||@
  Comment 98 6 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06663020690912405 condition: < trueDestination: B0 -> B12 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 106 block B2 null  <||@
  Comment 106 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 -1 GTMARKER markerId: 2  <||@
  Comment 121 14 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 126 16 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 130 18 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 137 20 r11|QWORD = LEA address: [r10|QWORD + 24] size: QWORD  <||@
  Comment 141 22 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 154 block B4 null  <||@
  Comment 154 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 -1 GTMARKER markerId: 4  <||@
  Comment 169 42 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 176 44 AMD64PREFETCH ~address: [r10|QWORD + 216] instr: 3  <||@
  Comment 184 46 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 191 48 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 191 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 199 50 MOV x: [r10|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 207 52 MOV x: [r10|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 215 54 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 215 56 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 215 block B5 null  <||@
  Comment 215 58 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 215 -1 GTMARKER markerId: 5  <||@
  Comment 230 60 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 233 62 rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 235 64 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 239 66 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 243 68 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 243 {HotSpotMethod<Towers$TowersDisk.<init>(int)>}  <||@
  Comment 243 INVOKESPECIAL  <||@
  Comment 248 [stack:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD     |-  |stack:32|DWORD 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |   |                 <||@
  Comment 256 -1 GTMARKER markerId: 5  <||@
  Comment 277 70 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 72 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 286 74 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 290 76 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 291 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 291 INVOKESPECIAL  <||@
  Comment 296 [stack:8]at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 304 78 rcx|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 310 80 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 313 82 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 318 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 318 88 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 -1 GTMARKER markerId: 7  <||@
  Comment 335 90 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 342 92 r8|QWORD = LEA address: [r11|QWORD + 24] size: QWORD  <||@
  Comment 346 94 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 365 block B9 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 365 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 -1 GTMARKER markerId: 9  <||@
  Comment 380 114 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 387 116 AMD64PREFETCH ~address: [r11|QWORD + 216] instr: 3  <||@
  Comment 395 118 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 402 120 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 402 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 410 122 MOV x: [r11|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 418 124 MOV x: [r11|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 426 126 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 426 128 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 426 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 426 130 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 426 -1 GTMARKER markerId: 10  <||@
  Comment 441 132 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 444 134 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 447 136 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 452 138 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 456 140 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.<init>(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 459 {HotSpotMethod<Towers$TowersDisk.<init>(int)>}  <||@
  Comment 459 INVOKESPECIAL  <||@
  Comment 464 [stack:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD     |-  |stack:32|DWORD 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |   |                 <||@
  Comment 472 -1 GTMARKER markerId: 10  <||@
  Comment 493 142 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 498 144 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 502 146 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 506 148 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 507 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 507 INVOKESPECIAL  <||@
  Comment 512 [stack:8]at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 520 150 r10|DWORD = DEC value: stack:32|DWORD size: DWORD  <||@
  Comment 528 152 JUMP ~outgoingValues: [] destination: B10 -> B6  <||@
  Comment 528 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 528 84 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 528 -1 GTMARKER markerId: 6  <||@
  Comment 543 86 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.07138671875000002 condition: < trueDestination: B6 -> B12 falseDestination: B6 -> B7 size: DWORD  <||@
  Comment 558 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 558 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 -1 GTMARKER markerId: 8  <||@
  Comment 573 98 stack:32|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 578 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 578 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 588 102 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:2]  <||@
  Comment 588 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 593 [stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 601 104 NULLCHECK address: [rax|QWORD[.]] state [bci:2]  <||@
  Comment 601 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 603 106 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 606 110 JUMP ~outgoingValues: [] destination: B8 -> B10  <||@
  Comment 613 block B12 null  <||@
  Comment 613 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 613 -1 GTMARKER markerId: 12  <||@
  Comment 628 160 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 640 POLL_RETURN_FAR  <||@
  Comment 657 block B3 null  <||@
  Comment 657 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 657 -1 GTMARKER markerId: 3  <||@
  Comment 672 26 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 676 28 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 676 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 686 30 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 686 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f4ef70bfa80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 691 [stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 699 32 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 699 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 699 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 701 34 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 704 38 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 714 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 768 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 773 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1               |2  |3              
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD   <||@
  Comment 803 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 808 [rax:0, stack:8]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 816 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 816 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 822 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 822 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
