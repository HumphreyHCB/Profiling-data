begin_compilation
  name " HotSpotCompilation-84[Towers.moveTopDisk(int, int)]"
  method "HotSpotCompilation-84[Towers.moveTopDisk(int, int)]"
  date 1731331201344
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a6  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 v17 ?25 ?24 v18 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 3]
referencedType: [null]
returnStamp: a# Towers$TowersDisk
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.popDiskFrom(int)>
=== Inputs ===
arguments: a1 i2 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveTopDisk(int, int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 - i3 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
bci: 3
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 3]
polymorphic: false
stamp: a# Towers$TowersDisk
targetMethod: Direct#Towers.popDiskFrom
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v17 
stateDuring: ?24 
=== Succesors ===
next: v9 
=== Usages ===
v18 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v17 stateDuring: ?24 #next: v9  <|@  <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 7]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a6 i3 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a6 i3  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveTopDisk(int, int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
bci: 7
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 7]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v18 
stateDuring: ?25 
=== Succesors ===
next: i26 
=== Usages ===
=== Predecessor ===
a6 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v18 stateDuring: ?25 #next: i26  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i26 v22 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.movesDone
memoryOrder: PLAIN
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 12]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v27 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
i13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v27 lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 16]
stamp: i32
=== Inputs ===
x: i26 
y: i12 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i26 y: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Towers.movesDone
location: Towers.movesDone
memoryOrder: PLAIN
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v27 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
i26 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v27 lastLocationAccess: - value: i13 stateAfter: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a6  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 v17 ?25 ?24 v18 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 3]
referencedType: [null]
returnStamp: a# Towers$TowersDisk
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.popDiskFrom(int)>
=== Inputs ===
arguments: a1 i2 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveTopDisk(int, int)>
localsSize: 3
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 - i3 
=== Succesors ===
=== Usages ===
a6 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 3
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 3]
polymorphic: false
stamp: a# Towers$TowersDisk
targetMethod: Direct#Towers.popDiskFrom
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v17 
stateDuring: ?24 
=== Succesors ===
next: v9 
=== Usages ===
v18 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v17 stateDuring: ?24 #next: v9  <|@  <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 7]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>
=== Inputs ===
arguments: a1 a6 i3 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a6 i3  <|@  <|@
tid ?25 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveTopDisk(int, int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
bci: 7
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 7]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.pushDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v18 
stateDuring: ?25 
=== Succesors ===
next: i26 
=== Usages ===
=== Predecessor ===
a6 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v18 stateDuring: ?25 #next: i26  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i26 v22 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.movesDone
memoryOrder: PLAIN
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 12]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v27 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
i13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v27 lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 16]
stamp: i32
=== Inputs ===
x: i26 
y: i12 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i26 y: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Towers.movesDone
location: Towers.movesDone
memoryOrder: PLAIN
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v27 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
i26 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v27 lastLocationAccess: - value: i13 stateAfter: - #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveTopDisk(int, int) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[16, 18[[26, 27[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 10[[16, 17[[24, 27[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[14, 17[[22, 27[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[16, 17[[26, 27[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[12, 17[[20, 27[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 28[6 MustHaveRegister 12 ShouldHaveRegister 20 ShouldHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 14[8 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [10, 24[10 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rax|- [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[16, 18[[26, 27[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 10[[16, 17[[24, 27[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[14, 17[[22, 27[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[16, 17[[26, 27[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[12, 17[[20, 27[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 11[6 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 14[8 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 15[10 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q rax|- [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v0|q v0|q [11, 15[12 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[vstack:1|d]" v2|d v2|d [15, 24[24 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[vstack:0|q]" v0|q v0|q [15, 27[20 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rsi|q]" v0|q v0|q [27, 28[28 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[16, 18[[26, 27[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 10[[16, 17[[24, 27[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[14, 17[[22, 27[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[16, 17[[26, 27[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[12, 17[[20, 27[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 11[6 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 14[8 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 15[10 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q rax|- [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v0|q v0|q [11, 15[12 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[vstack:1|d]" v2|d v2|d [15, 24[24 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[vstack:0|q]" v0|q v0|q [15, 27[20 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rsi|q]" v0|q v0|q [27, 28[28 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[16, 18[[26, 27[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 10[[16, 17[[24, 27[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|d [0, 8[[14, 17[[22, 27[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[16, 17[[26, 27[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[12, 17[[20, 27[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[26, 27[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 11[6 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 14[8 MustHaveRegister 14 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 15[10 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q rax|- [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v0|q v0|q [11, 15[12 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[vstack:1|d]" v2|d v2|d [15, 24[24 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[vstack:0|q]" v0|q v0|q [15, 27[20 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rsi|q]" v0|q v0|q [27, 28[28 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction rdx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   18  <|@ instruction v3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction vstack:1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [12, 24[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [10, 20[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [12, 24[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [10, 20[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr    8  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   12  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 3]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - stack:28|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveTopDisk(int, int) [bci: 7]
locals: stack:40|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction INC value: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: iload_1       
     3: invokevirtual #6          // popDiskFrom:(int)Towers$TowersDisk
     6: iload_2       
     7: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    10: aload_0       
    11: dup           
    12: getfield      #8          // movesDone:int
    15: iconst_1      
    16: iadd          
    17: putfield      #8          // movesDone:int
    20: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000009f187f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ff0faef889842400c0feff4883ec28669041817f20000000000f8588000000c5f8c6c000c5f8c6c000c5f8c6c00048896c24204c8bd6894c24144c8954240890e8000000000f1f8400000000000faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef8488b742408488bd08b4c24146690e8000000000f1f840000000000488b742408ff460c488b6c24204883c4286666660f1f840000000000493ba7500400000f8711000000c348896c2420e800000000e969fffffff4488d0ddbffffff49898f68040000e90ffffffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f19150335c8, value=139745632247936]:0x7f1910c4e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 [stack overflow check]  <||@
  Comment 56 FRAME_COMPLETE  <||@
  Comment 56 ENTRY_BARRIER_PATCH  <||@
  Comment 70 block B0 null  <||@
  Comment 70 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 -1 GTMARKER markerId: 0  <||@
  Comment 85 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD  <||@
  Comment 90 6 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 93 10 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 97 12 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 102 14 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3]  <||@
  Comment 103 {HotSpotMethod<Towers.popDiskFrom(int)>}  <||@
  Comment 103 INVOKESPECIAL  <||@
  Comment 108 [stack:8]at Towers.moveTopDisk(int, int) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:40|QWORD[.]  |-  |stack:28|DWORD 
     stack:   |stack:40|QWORD[.]  |   |                 <||@
  Comment 116 -1 SFENCE  <||@
  Comment 119 -1 GTMARKER markerId: 0  <||@
  Comment 134 -1 SFENCE  <||@
  Comment 137 16 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 142 18 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 145 20 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 149 22 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7]  <||@
  Comment 151 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 151 INVOKESPECIAL  <||@
  Comment 156 [stack:8]at Towers.moveTopDisk(int, int) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 164 24 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 169 26 INC value: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 172 28 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 211 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f1915033598, value=139745632141856]:0x7f1910c34220}  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f19150335a0, value=139745632276480]:0x7f1910c55000}  <||@
  Comment 242 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f1910cb4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 242 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f19150335b8, value=139745632272160]:0x7f1910c53f20}  <||@
  Comment 248 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-84[Towers.moveTopDisk(int, int)]"
  method "HotSpotCompilation-84[Towers.moveTopDisk(int, int)]"
  date 1731331201369
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f1910cc2020 448b560849bc0000009f187f00004d03d44d33e4493bc20f8543c0f8ff6666900faef8c5f8c6c0ff0faef889842400c0feff4883ec28669041817f20000000000f8588000000c5f8c6c000c5f8c6c000c5f8c6c00048896c24204c8bd6894c24144c8954240890e8f4c2f8ff0f1f8400fc0100000faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef8488b742408488bd08b4c24146690e8c4c2f8ff0f1f84002c020001488b742408ff460c488b6c24204883c4286666660f1f840000000000493ba7500400000f8711000000c348896c2420e82821f7ffe969fffffff4488d0ddbffffff49898f68040000e9ef2ef9fff4e8e91ffffff4e8031ef9fff4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f19150335c8, value=139745632247936]:0x7f1910c4e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 [stack overflow check]  <||@
  Comment 56 FRAME_COMPLETE  <||@
  Comment 56 ENTRY_BARRIER_PATCH  <||@
  Comment 70 block B0 null  <||@
  Comment 70 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 -1 GTMARKER markerId: 0  <||@
  Comment 85 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@40296386 slotKind: QWORD  <||@
  Comment 90 6 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 93 10 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 97 12 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 102 14 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.popDiskFrom(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:3]  <||@
  Comment 103 {HotSpotMethod<Towers.popDiskFrom(int)>}  <||@
  Comment 103 INVOKESPECIAL  <||@
  Comment 108 [stack:8]at Towers.moveTopDisk(int, int) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:40|QWORD[.]  |-  |stack:28|DWORD 
     stack:   |stack:40|QWORD[.]  |   |                 <||@
  Comment 116 -1 SFENCE  <||@
  Comment 119 -1 GTMARKER markerId: 0  <||@
  Comment 134 -1 SFENCE  <||@
  Comment 137 16 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 142 18 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 145 20 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 149 22 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:7]  <||@
  Comment 151 {HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>}  <||@
  Comment 151 INVOKESPECIAL  <||@
  Comment 156 [stack:8]at Towers.moveTopDisk(int, int) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 164 24 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 169 26 INC value: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 172 28 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 211 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f1915033598, value=139745632141856]:0x7f1910c34220}  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f19150335a0, value=139745632276480]:0x7f1910c55000}  <||@
  Comment 242 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f1910cb4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 242 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 248 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f19150335b8, value=139745632272160]:0x7f1910c53f20}  <||@
  Comment 248 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
