begin_compilation
  name " HotSpotCompilation-79[Towers$TowersDisk.setNext(Towers$TowersDisk)]"
  method "HotSpotCompilation-79[Towers$TowersDisk.setNext(Towers$TowersDisk)]"
  date 1731420412940
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v10 v11 v13 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v14 
value: - 
stateBefore: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v14 value: - stateBefore: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a7 v13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Towers$TowersDisk.next
location: Towers$TowersDisk.next
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v14 
lastLocationAccess: - 
value: a7 
stateAfter: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v14 lastLocationAccess: - value: a7 stateAfter: - #next: v13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v14 
value: a2 
object: a1 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v14 value: a2 object: a1 #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v10 v11 v13 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v14 
value: - 
stateBefore: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v14 value: - stateBefore: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a7 v13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Towers$TowersDisk.next
location: Towers$TowersDisk.next
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v14 
lastLocationAccess: - 
value: a7 
stateAfter: - 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v14 lastLocationAccess: - value: a7 stateAfter: - #next: v13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v14 
value: a2 
object: a1 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v14 value: a2 object: a1 #next: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers$TowersDisk.setNext(Towers$TowersDisk) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 17[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [8, 17[8 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v3|q QWORD "[v3|q]" v3|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v4|d DWORD "[v4|d]" v4|d v1|q [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v6|q QWORD "[v6|q]" v6|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 17[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 17[8 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v3|q QWORD "[r11|q]" v3|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v4|d DWORD "[r10|d]" v4|d v1|q [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v6|q QWORD "[r11|q]" v6|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbp|q]" v7|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 17[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 17[8 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v3|q QWORD "[r11|q]" v3|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v4|d DWORD "[r10|d]" v4|d v1|q [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v6|q QWORD "[r11|q]" v6|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbp|q]" v7|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 17[6 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 17[8 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[r10|q]" v2|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v3|q QWORD "[r11|q]" v3|q -1 [10, 11[10 MustHaveRegister  "NoDefinitionFound"
  v4|d DWORD "[r10|d]" v4|d v1|q [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v6|q QWORD "[r11|q]" v6|q -1 [16, 17[16 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbp|q]" v7|q rbp|q [2, 18[2 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction v7|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v2|QWORD, temp2: v3|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction v4|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v5|QWORD, temp2: v6|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: v7|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr   14  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   16  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577 <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #2          // next:Towers$TowersDisk
     5: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000974e7f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec1841817f20000000000f8500010000c5f8c6c000c5f8c6c000c5f8c6c00041807f40000f842e000000448b5e1049c1e3034d85db0f841d0000004d8b57284983fa000f84d70000004983ea084d8957284d0357384d891a4c8bd249c1ea030faef80faef80faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef80faef80faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef8448956104c8bd64c33d249c1ea1566900f844f0000004885d20f84460000004c8bd649c1ea0949bb000000f34e7f00004d03d341803a02742cf08304240041803a00742141c602004d8b5f484d85db900f84470000004983eb084d895f484d035f584d89134883c4180f1f8000000000493ba7500400000f872c000000c348896c2410e800000000e9f1fefffff44c891c24e800000000e92afffffff44c891424e800000000ebbdf4488d0dc0ffffff49898f68040000e974fefffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD  <||@
  Comment 93 10 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577  <||@
  Comment 150 12 r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3  <||@
  Comment 157 -1 SFENCE  <||@
  Comment 160 -1 SFENCE  <||@
  Comment 163 -1 GTMARKER markerId: 0  <||@
  Comment 184 -1 SFENCE  <||@
  Comment 187 -1 GTMARKER markerId: 0  <||@
  Comment 208 14 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 212 16 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577  <||@
  Comment 309 18 RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 320 POLL_RETURN_FAR  <||@
  Comment 339 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 354 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 369 {Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 391 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 397 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 397 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 403 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-79[Towers$TowersDisk.setNext(Towers$TowersDisk)]"
  method "HotSpotCompilation-79[Towers$TowersDisk.setNext(Towers$TowersDisk)]"
  date 1731420412955
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f4ef70c0180 448b560849bc000000974e7f00004d03d44d33e4493bc20f85e3def8ff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec1841817f20000000000f8500010000c5f8c6c000c5f8c6c000c5f8c6c00041807f40000f842e000000448b5e1049c1e3034d85db0f841d0000004d8b57284983fa000f84d70000004983ea084d8957284d0357384d891a4c8bd249c1ea030faef80faef80faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef80faef80faef8c5f8c6c000c5f8c6c000c5f8c6c0000faef8448956104c8bd64c33d249c1ea1566900f844f0000004885d20f84460000004c8bd649c1ea0949bb000000f34e7f00004d03d341803a02742cf08304240041803a00742141c602004d8b5f484d85db900f84470000004983eb084d895f484d035f584d89134883c4180f1f8000000000493ba7500400000f872c000000c348896c2410e8483ff7ffe9f1fefffff44c891c24e899010000e92afffffff44c891424e80a050000ebbdf4488d0dc0ffffff49898f68040000e9f44cf9fff4e8ee3dfffff4e8083cf9fff4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@68801d5d slotKind: QWORD  <||@
  Comment 93 10 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 16], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577  <||@
  Comment 150 12 r10|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@11b852f0 encoding: base: 0 shift: 3  <||@
  Comment 157 -1 SFENCE  <||@
  Comment 160 -1 SFENCE  <||@
  Comment 163 -1 GTMARKER markerId: 0  <||@
  Comment 184 -1 SFENCE  <||@
  Comment 187 -1 GTMARKER markerId: 0  <||@
  Comment 208 14 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 212 16 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3ce71577  <||@
  Comment 309 18 RETURN (savedRbp: rbp|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 320 POLL_RETURN_FAR  <||@
  Comment 339 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 354 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 369 {Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 391 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 397 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 397 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 403 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 403 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
