begin_compilation
  name " HotSpotCompilation-82[Towers.pushDisk(Towers$TowersDisk, int)]"
  method "HotSpotCompilation-82[Towers.pushDisk(Towers$TowersDisk, int)]"
  date 1731420412980
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a141  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v149 ?113 ?17 ?114 ?26 ?115 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a141 a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
lastLocationAccess: - 
=== Succesors ===
next: i142 
=== Usages ===
a34 v150 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v149 lastLocationAccess: - #next: i142  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v148 ?113 ?17 ?114 v74 ?26 a71 ?115 v54 v140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j79 ?113 ?17 ?114 ?26 v62 ?115 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v154 i142 v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a141 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-9227|0xffffffffffffdbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v150 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
v41 
=== Predecessor ===
a141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v150 lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i142 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v93 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-13323|0xffffffffffffcbf5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a141 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a141  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v153 v151 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a34 
index: j79 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a34 index: j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
a50 v75 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a50 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v54 ?113 v78 ?17 ?114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a143  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
profileData: PROFILED designatedSuccessorProbability: 0.011328125
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a143 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v10 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i13 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i13  <|@  <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getSize()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
polymorphic: false
stamp: i32
targetMethod: Direct#Towers$TowersDisk.getSize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v74 
stateDuring: ?113 
=== Succesors ===
next: i16 
=== Usages ===
?114 ?17 v18 
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v74 stateDuring: ?113 #next: i16  <|@  <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getSize()>
=== Inputs ===
arguments: a50 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a50  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i13 a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i13 a1 a2 i3 a50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#Towers$TowersDisk.getSize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v78 
stateDuring: ?114 
=== Succesors ===
next: v112 
=== Usages ===
?17 v18 
=== Predecessor ===
i13 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v78 stateDuring: ?114 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i16 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
i16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v22 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v22 #next: v25  <|@  <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>
=== Inputs ===
arguments: a2 a50 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a50  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
bci: 34
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.setNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v54 
stateDuring: ?115 
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v54 stateDuring: ?115 #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 38]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
lastLocationAccess: - 
=== Succesors ===
next: i145 
=== Usages ===
a56 v152 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v149 lastLocationAccess: - #next: i145  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v155 i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
v62 
=== Predecessor ===
a144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v152 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i145 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i145  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v105 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
v72 
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 38]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a144  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a56 
index: j79 
=== Succesors ===
=== Usages ===
v72 v138 v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v153 
value: - 
stateBefore: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v153 value: - stateBefore: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v105 
address: v153 
lastLocationAccess: - 
value: a71 
stateAfter: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v105 address: v153 lastLocationAccess: - value: a71 stateAfter: - #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v153 
value: a2 
object: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v153 value: a2 object: - #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 63
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@49798e84
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: if_icmplt
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i13 i16 a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i13 i16 a1 a2 i3 a50  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x1dbb42ac]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 42
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@49798e84
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a141  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v149 ?113 ?17 ?114 ?26 ?115 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a141 a144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
lastLocationAccess: - 
=== Succesors ===
next: i142 
=== Usages ===
a34 v150 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v149 lastLocationAccess: - #next: i142  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Towers$TowersDisk
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v148 ?113 ?17 ?114 v74 ?26 a71 ?115 v54 v140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j79 ?113 ?17 ?114 ?26 v62 ?115 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v154 i142 v148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a141 
=== Succesors ===
=== Usages ===
i142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-9227|0xffffffffffffdbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v150 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
v41 
=== Predecessor ===
a141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v150 lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i142 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i142  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v93 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-13323|0xffffffffffffcbf5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a141 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a141  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v153 v151 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
result [v4|QWORD[.] + v5|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a34 
index: j79 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a34 index: j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v151 
lastLocationAccess: - 
=== Succesors ===
next: v11 
=== Usages ===
a50 v75 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v151 lastLocationAccess: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a50 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v54 ?113 v78 ?17 ?114 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a143  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a143 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a143  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
profileData: PROFILED designatedSuccessorProbability: 0.011328125
stamp: void
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a143 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v10 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i13 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i13  <|@  <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getSize()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i13 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 12
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
polymorphic: false
stamp: i32
targetMethod: Direct#Towers$TowersDisk.getSize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v74 
stateDuring: ?113 
=== Succesors ===
next: i16 
=== Usages ===
?114 ?17 v18 
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v74 stateDuring: ?113 #next: i16  <|@  <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getSize()>
=== Inputs ===
arguments: a50 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a50  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i13 a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i13 a1 a2 i3 a50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#Towers$TowersDisk.getSize
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v78 
stateDuring: ?114 
=== Succesors ===
next: v112 
=== Usages ===
?17 v18 
=== Predecessor ===
i13 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v78 stateDuring: ?114 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5cd61783
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i16 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
i16 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v22 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v22 #next: v25  <|@  <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>
=== Inputs ===
arguments: a2 a50 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a50  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
bci: 34
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.setNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v54 
stateDuring: ?115 
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v54 stateDuring: ?115 #next: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 38]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
lastLocationAccess: - 
=== Succesors ===
next: i145 
=== Usages ===
a56 v152 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v149 lastLocationAccess: - #next: i145  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v155 i145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v152 <|@
result [v10|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a144 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v152 
lastLocationAccess: - 
=== Succesors ===
next: v108 
=== Usages ===
v62 
=== Predecessor ===
a144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v152 lastLocationAccess: - #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@99a78d7
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i145 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i145  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
i145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v105 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
v72 
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 38]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a144 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a144  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
result [v11|QWORD[.] + v5|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a56 
index: j79 
=== Succesors ===
=== Usages ===
v72 v138 v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v153 
value: - 
stateBefore: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v153 value: - stateBefore: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v105 
address: v153 
lastLocationAccess: - 
value: a71 
stateAfter: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v105 address: v153 lastLocationAccess: - value: a71 stateAfter: - #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v153 
value: a2 
object: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v153 value: a2 object: - #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 63
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@49798e84
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: if_icmplt
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i13 i16 a1 a2 i3 a50 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i13 i16 a1 a2 i3 a50  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x1dbb42ac]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 42
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@49798e84
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[34, 36[[40, 42[[56, 57[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 10[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[34, 35[[40, 41[[54, 57[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[32, 35[[38, 41[[52, 57[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 62[[78, 89[[90, 97[[98, 105[6 MustHaveRegister 12 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 75[[78, 89[[90, 97[[98, 105[8 MustHaveRegister 18 MustHaveRegister 32 ShouldHaveRegister 52 ShouldHaveRegister 68 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [10, 62[[78, 89[[90, 97[[98, 105[10 MustHaveRegister 14 MustHaveRegister 22 ShouldHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [20, 24[20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [22, 72[[78, 82[22 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [26, 54[[78, 89[26 MustHaveRegister 38 ShouldHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d rax|- [36, 46[[82, 89[36 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d rax|- [42, 46[[82, 89[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [58, 64[58 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|d [64, 72[64 MustHaveRegister 66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[v13|q]" v13|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[v14|d]" v14|d v1|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [72, 75[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[34, 36[[40, 42[[56, 57[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 10[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[34, 35[[40, 41[[54, 57[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[32, 35[[38, 41[[52, 57[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 30[6 MustHaveRegister 12 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 33[8 MustHaveRegister 18 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 30[10 MustHaveRegister 14 MustHaveRegister 22 ShouldHaveRegister  "SpillInDominator"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [20, 24[20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [26, 30[26 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|- [36, 39[36 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|- [42, 46[[82, 89[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [58, 64[58 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|d [64, 72[64 MustHaveRegister 66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r9|q]" v13|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r8|d]" v14|d v1|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [72, 75[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r8|q]" v17|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[vstack:2|q]" v0|q v0|q [30, 33[ "SpillInDominator"
  v19|q QWORD "[vstack:1|q]" v1|q v1|q [33, 62[52 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[vstack:3|d]" v2|d v2|d [30, 33[ "SpillInDominator"
  v21|q QWORD "[vstack:4|q]" v5|q v5|q [30, 33[ "OneSpillStore"
  v22|q QWORD "[vstack:0|q]" v7|q v7|q [30, 33[ "OneSpillStore"
  v23|q QWORD "[vstack:0|q]" v7|q v7|q [33, 54[[78, 82[38 ShouldHaveRegister 54 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:2|q]" v0|q v0|q [33, 50[ "SpillInDominator"
  v25|d DWORD "[vstack:3|d]" v2|d v2|d [33, 50[ "SpillInDominator"
  v26|q QWORD "[vstack:4|q]" v5|q v5|q [33, 62[ "OneSpillStore"
  v27|q QWORD "[r8|q]" v7|q v7|q [82, 89[ "OneSpillStore"
  v28|q QWORD "[rdx|q]" v1|q v1|q [62, 75[[78, 89[[90, 97[[98, 105[68 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:2|q]" v0|q v0|q [50, 55[ "SpillInDominator"
  v30|d DWORD "[vstack:3|d]" v2|d v2|d [50, 55[ "SpillInDominator"
  v31|q QWORD "[r11|q]" v5|q v5|q [62, 72[[78, 82[66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[vstack:5|d]" v8|d v8|d [39, 46[44 ShouldHaveRegister  "OneSpillStore"
  v33|d DWORD "[r10|d]" v8|d v8|d [82, 89[ "OneSpillStore"
  v34|q QWORD "[vstack:2|q]" v0|q v0|q [55, 57[ "SpillInDominator"
  v35|d DWORD "[vstack:3|d]" v2|d v2|d [55, 59[ "SpillInDominator"
  v36|q QWORD "[rsi|q]" v0|q v0|q [57, 62[[78, 89[[90, 97[[98, 105[58 MustHaveRegister  "SpillInDominator"
  v37|d DWORD "[rcx|d]" v2|d v2|d [59, 62[[78, 89[[90, 97[[98, 105[60 MustHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = STACKMOVE (input: v21|QWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = STACKMOVE (input: v20|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v18|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v30|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = STACKMOVE (input: v29|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[34, 36[[40, 42[[56, 57[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 10[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[34, 35[[40, 41[[54, 57[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[32, 35[[38, 41[[52, 57[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 30[6 MustHaveRegister 12 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 33[8 MustHaveRegister 18 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 30[10 MustHaveRegister 14 MustHaveRegister 22 ShouldHaveRegister  "StoreAtDefinition"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [20, 24[20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [26, 30[26 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|- [36, 39[36 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|- [42, 46[[82, 89[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [58, 64[58 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|d [64, 72[64 MustHaveRegister 66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r9|q]" v13|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r8|d]" v14|d v1|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [72, 75[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r8|q]" v17|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[vstack:2|q]" v0|q v0|q [30, 33[ "StoreAtDefinition"
  v19|q QWORD "[vstack:1|q]" v1|q v1|q [33, 62[52 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[vstack:3|d]" v2|d v2|d [30, 33[ "StoreAtDefinition"
  v21|q QWORD "[vstack:4|q]" v5|q v5|q [30, 33[ "OneSpillStore"
  v22|q QWORD "[vstack:0|q]" v7|q v7|q [30, 33[ "OneSpillStore"
  v23|q QWORD "[vstack:0|q]" v7|q v7|q [33, 54[[78, 82[38 ShouldHaveRegister 54 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:2|q]" v0|q v0|q [33, 50[ "StoreAtDefinition"
  v25|d DWORD "[vstack:3|d]" v2|d v2|d [33, 50[ "StoreAtDefinition"
  v26|q QWORD "[vstack:4|q]" v5|q v5|q [33, 62[ "OneSpillStore"
  v27|q QWORD "[r8|q]" v7|q v7|q [82, 89[ "OneSpillStore"
  v28|q QWORD "[rdx|q]" v1|q v1|q [62, 75[[78, 89[[90, 97[[98, 105[68 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:2|q]" v0|q v0|q [50, 55[ "StoreAtDefinition"
  v30|d DWORD "[vstack:3|d]" v2|d v2|d [50, 55[ "StoreAtDefinition"
  v31|q QWORD "[r11|q]" v5|q v5|q [62, 72[[78, 82[66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[vstack:5|d]" v8|d v8|d [39, 46[44 ShouldHaveRegister  "OneSpillStore"
  v33|d DWORD "[r10|d]" v8|d v8|d [82, 89[ "OneSpillStore"
  v34|q QWORD "[vstack:2|q]" v0|q v0|q [55, 57[ "StoreAtDefinition"
  v35|d DWORD "[vstack:3|d]" v2|d v2|d [55, 59[ "StoreAtDefinition"
  v36|q QWORD "[rsi|q]" v0|q v0|q [57, 62[[78, 89[[90, 97[[98, 105[58 MustHaveRegister  "StoreAtDefinition"
  v37|d DWORD "[rcx|d]" v2|d v2|d [59, 62[[78, 89[[90, 97[[98, 105[60 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = STACKMOVE (input: v21|QWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = STACKMOVE (input: v20|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v18|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v30|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = STACKMOVE (input: v29|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[34, 36[[40, 42[[56, 57[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 10[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[34, 35[[40, 41[[54, 57[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[40, 41[[56, 57[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[32, 35[[38, 41[[52, 57[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[40, 41[[56, 57[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 30[6 MustHaveRegister 12 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 33[8 MustHaveRegister 18 MustHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 30[10 MustHaveRegister 14 MustHaveRegister 22 ShouldHaveRegister  "StoreAtDefinition"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 20[12 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [20, 24[20 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 28[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [26, 30[26 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|- [36, 39[36 MustHaveRegister  "OneSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|- [42, 46[[82, 89[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [58, 64[58 MustHaveRegister 60 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|d [64, 72[64 MustHaveRegister 66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r9|q]" v13|q -1 [66, 67[66 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r8|d]" v14|d v1|q [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r10|q]" v15|q -1 [72, 75[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r8|q]" v17|q -1 [74, 75[74 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[vstack:2|q]" v0|q v0|q [30, 33[ "StoreAtDefinition"
  v19|q QWORD "[vstack:1|q]" v1|q v1|q [33, 62[52 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[vstack:3|d]" v2|d v2|d [30, 33[ "StoreAtDefinition"
  v21|q QWORD "[vstack:4|q]" v5|q v5|q [30, 33[ "OneSpillStore"
  v22|q QWORD "[vstack:0|q]" v7|q v7|q [30, 33[ "OneSpillStore"
  v23|q QWORD "[vstack:0|q]" v7|q v7|q [33, 54[[78, 82[38 ShouldHaveRegister 54 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[vstack:2|q]" v0|q v0|q [33, 50[ "StoreAtDefinition"
  v25|d DWORD "[vstack:3|d]" v2|d v2|d [33, 50[ "StoreAtDefinition"
  v26|q QWORD "[vstack:4|q]" v5|q v5|q [33, 62[ "OneSpillStore"
  v27|q QWORD "[r8|q]" v7|q v7|q [82, 89[ "OneSpillStore"
  v28|q QWORD "[rdx|q]" v1|q v1|q [62, 75[[78, 89[[90, 97[[98, 105[68 MustHaveRegister 74 MustHaveRegister  "OneSpillStore"
  v29|q QWORD "[vstack:2|q]" v0|q v0|q [50, 55[ "StoreAtDefinition"
  v30|d DWORD "[vstack:3|d]" v2|d v2|d [50, 55[ "StoreAtDefinition"
  v31|q QWORD "[r11|q]" v5|q v5|q [62, 72[[78, 82[66 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[vstack:5|d]" v8|d v8|d [39, 46[44 ShouldHaveRegister  "OneSpillStore"
  v33|d DWORD "[r10|d]" v8|d v8|d [82, 89[ "OneSpillStore"
  v34|q QWORD "[vstack:2|q]" v0|q v0|q [55, 57[ "StoreAtDefinition"
  v35|d DWORD "[vstack:3|d]" v2|d v2|d [55, 59[ "StoreAtDefinition"
  v36|q QWORD "[rsi|q]" v0|q v0|q [57, 62[[78, 89[[90, 97[[98, 105[58 MustHaveRegister  "StoreAtDefinition"
  v37|d DWORD "[rcx|d]" v2|d v2|d [59, 62[[78, 89[[90, 97[[98, 105[60 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = STACKMOVE (input: v21|QWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = STACKMOVE (input: v20|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = STACKMOVE (input: v18|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v30|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = STACKMOVE (input: v29|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v26|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction v5|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction v6|DWORD[_] = MOV input: [v4|QWORD[.] + v5|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = STACKMOVE (input: v21|QWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = STACKMOVE (input: v22|QWORD[.], ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   36  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: v8|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction v10|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v26|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v11|QWORD[.] + v5|QWORD * 4 + 16], ~expectedObject: -) {temp: v12|QWORD, temp2: v13|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [v11|QWORD[.] + v5|QWORD * 4 + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction v15|QWORD[.+] = LEA address: [v11|QWORD[.] + v5|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v15|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v16|QWORD, temp2: v17|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: v5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: v8|DWORD v9|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: vstack:5|DWORD 
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] vstack:1|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: vstack:5|DWORD 
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] vstack:1|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   68  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:3|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: vstack:5|DWORD 
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD vstack:0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: vstack:2|QWORD[.] vstack:1|QWORD[.] vstack:3|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] vstack:1|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: vstack:4|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction vstack:0|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:4|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction vstack:1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [30, 112[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [34, 116[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [6, 118[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [8, 114[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [32, 80[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [52, 110[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:64|q]" vstack:0|q -1 [30, 112[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:72|q]" vstack:1|q -1 [34, 116[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:56|q]" vstack:2|q -1 [6, 118[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [8, 114[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:40|q]" vstack:4|q -1 [32, 80[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:44|d]" vstack:5|d -1 [52, 110[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   20  <|@ instruction r11|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4607080384120959795
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   40  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 12]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
stack: stack:44|DWORD 
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD stack:64|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 34]
locals: stack:56|QWORD[.] stack:72|QWORD[.] stack:28|DWORD - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 5 <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   88  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 6 <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4577683841240740659
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   30  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 8 <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
stack: r10|DWORD rax|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 9 <|@ <|@
      nr  128  <|@ instruction MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 7 <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_2       
     5: aaload        
     6: astore_3      
     7: aload_3       
     8: ifnull        32
    11: aload_1       
    12: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    15: aload_3       
    16: invokevirtual #2          // Towers$TowersDisk.getSize:()int
    19: if_icmplt     32
    22: new           #4          // java.lang.RuntimeException
    25: dup           
    26: ldc           #5          // "Cannot put a big disk on a smaller one"
    28: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    31: athrow        
    32: aload_1       
    33: aload_3       
    34: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    37: aload_0       
    38: getfield      #1          // piles:Towers$TowersDisk[]
    41: iload_2       
    42: aload_1       
    43: aastore       
    44: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000974e7f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec4841817f20000000000f8516030000c5f8c6c000c5f8c6c000c5f8c6c00048896c24404889742418894c2434448b5610423b0cd50c0000000f837e020000c5f8c6c001c5f8c6c001c5f8c6c001850249c1e203448bd9478b549a10458bc249c1e0034585d20f84e4010000c5f8c6c003c5f8c6c003c5f8c6c0034c894424104c895c2428488bf24889542408e8000000000f1f8400000000000faef8c5f8c6c003c5f8c6c003c5f8c6c0030faef8488b7424108944242490e8000000000f1f8400000000003b4424240f8ea3010000c5f8c6c005c5f8c6c005c5f8c6c005488b742408488b542410e8000000000f1f8400000000000faef8c5f8c6c005c5f8c6c005c5f8c6c0050faef8488b742418448b56108b4c243466660f1f840000000000423b0cd50c0000000f83bf010000c5f8c6c006c5f8c6c006c5f8c6c0064c8b5c2428488b54240849c1e20341807f40000f842f000000478b4c9a1049c1e1034d85c90f841d0000004d8b47284983f8000f84be0100004983e8084d8947284d0347384d89084c8bc249c1e8030faef80faef80faef8c5f8c6c006c5f8c6c006c5f8c6c0060faef80faef84789449a100faef8c5f8c6c006c5f8c6c006c5f8c6c0060faef84f8d549a104d8bda4c33da49c1eb150f84520000004885d20f1f40000f84450000004d8bda49c1eb0949b8000000f34e7f00004d03d841803b02742bf08304240041803b00742041c603004d8b47484d85c00f842a0100004983e8084d8947484d0347584d8918488b6c24404883c4480f1f84000000000066666690493ba7500400000f8708010000c3c5f8c6c002c5f8c6c002c5f8c6c0024c894424104c895c24284889542408e95dfeffffc5f8c6c008c5f8c6c008c5f8c6c008448b5424244c8b4424108b4c2434488b542408488b74241841c78784040000ed92ffff49c7879004000014000000e8000000000f1f840000000000c5f8c6c009c5f8c6c009c5f8c6c00941c78784040000e5d5ffff49c7879004000000000000e8000000000f1f840000000000c5f8c6c007c5f8c6c007c5f8c6c007488b54240841c78784040000e5c0ffff49c7879004000000000000e8000000000f1f84000000000048896c2440e800000000e9dbfcfffff44c890c24e800000000666690e940fefffff44c891c24e800000000e9d7fefffff4488d0de4feffff49898f68040000e958fcfffff441c78784040000f5dbffff49c787900400000000000090e8000000000f1f84000000000041c78784040000f5cbffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5c5ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD  <||@
  Comment 98 6 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 103 8 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 107 10 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 12 CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0]  <||@
  Comment 111 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 block B1 null  <||@
  Comment 125 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 125 -1 GTMARKER markerId: 1  <||@
  Comment 140 16 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 142 18 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 146 20 r11|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 149 22 r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD  <||@
  Comment 154 24 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 161 26 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 170 block B3 null  <||@
  Comment 170 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 -1 GTMARKER markerId: 3  <||@
  Comment 185 40 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 190 42 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 195 44 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 46 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 203 48 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 203 {HotSpotMethod<Towers$TowersDisk.getSize()>}  <||@
  Comment 203 INVOKESPECIAL  <||@
  Comment 208 [stack:8, stack:16, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:64|QWORD[.]   <||@
  Comment 216 -1 GTMARKER markerId: 3  <||@
  Comment 237 50 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 242 52 stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 246 54 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 247 {HotSpotMethod<Towers$TowersDisk.getSize()>}  <||@
  Comment 247 INVOKESPECIAL  <||@
  Comment 252 [stack:8, stack:16, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:64|QWORD[.] 
     stack:   |stack:44|DWORD     |                   |                |                    <||@
  Comment 260 56 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD  <||@
  Comment 270 block B5 null  <||@
  Comment 270 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 -1 GTMARKER markerId: 5  <||@
  Comment 285 64 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 290 66 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 295 68 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34]  <||@
  Comment 295 {HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>}  <||@
  Comment 295 INVOKESPECIAL  <||@
  Comment 300 [stack:8, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 308 -1 GTMARKER markerId: 5  <||@
  Comment 329 70 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 334 72 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 338 74 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 342 76 CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37]  <||@
  Comment 352 [rsi:0, r10:0, stack:8]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 352 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 366 block B6 null  <||@
  Comment 366 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 -1 GTMARKER markerId: 6  <||@
  Comment 381 80 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 386 82 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 391 84 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 395 86 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e  <||@
  Comment 453 88 r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 460 -1 SFENCE  <||@
  Comment 463 -1 SFENCE  <||@
  Comment 466 -1 GTMARKER markerId: 6  <||@
  Comment 487 -1 SFENCE  <||@
  Comment 490 90 MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 495 -1 GTMARKER markerId: 6  <||@
  Comment 516 92 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 521 94 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e  <||@
  Comment 619 96 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 640 POLL_RETURN_FAR  <||@
  Comment 654 block B2 null  <||@
  Comment 654 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 654 -1 GTMARKER markerId: 2  <||@
  Comment 669 30 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 674 32 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 679 34 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 684 36 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 689 block B8 null  <||@
  Comment 689 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 -1 GTMARKER markerId: 8  <||@
  Comment 704 110 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 709 112 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 714 114 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 718 116 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 723 118 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 728 120 MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD  <||@
  Comment 739 122 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 750 124 DEOPT info [bci:19]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 755 [rdx:0, rsi:0, r8:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.] 
     stack:   |r10|DWORD     |rax|DWORD     |           |              <||@
  Comment 763 block B9 null  <||@
  Comment 763 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 -1 GTMARKER markerId: 9  <||@
  Comment 778 128 MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD  <||@
  Comment 789 130 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 800 132 DEOPT info [bci:0]  <||@
  Comment 800 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 805 [rdx:0, rsi:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 813 block B7 null  <||@
  Comment 813 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 813 -1 GTMARKER markerId: 7  <||@
  Comment 828 100 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 833 102 MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD  <||@
  Comment 844 104 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 855 106 DEOPT info [bci:37]  <||@
  Comment 855 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 860 [rdx:0, rsi:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 873 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 888 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 906 {Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 931 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 965 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 995 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 1000 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 1030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 1035 [rsi:0, r10:0, stack:8]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 1043 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1043 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 1049 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-82[Towers.pushDisk(Towers$TowersDisk, int)]"
  method "HotSpotCompilation-82[Towers.pushDisk(Towers$TowersDisk, int)]"
  date 1731420413071
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f4ef70c1840 448b560849bc000000974e7f00004d03d44d33e4493bc20f8523c8f8ff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec4841817f20000000000f8516030000c5f8c6c000c5f8c6c000c5f8c6c00048896c24404889742418894c2434448b5610423b0cd50c0000000f837e020000c5f8c6c001c5f8c6c001c5f8c6c001850249c1e203448bd9478b549a10458bc249c1e0034585d20f84e4010000c5f8c6c003c5f8c6c003c5f8c6c0034c894424104c895c2428488bf24889542408e870caf8ff0f1f8400800200020faef8c5f8c6c003c5f8c6c003c5f8c6c0030faef8488b7424108944242490e844caf8ff0f1f8400ac0200033b4424240f8ea3010000c5f8c6c005c5f8c6c005c5f8c6c005488b742408488b542410e814caf8ff0f1f8400dc0200040faef8c5f8c6c005c5f8c6c005c5f8c6c0050faef8488b742418448b56108b4c243466660f1f840000000000423b0cd50c0000000f83bf010000c5f8c6c006c5f8c6c006c5f8c6c0064c8b5c2428488b54240849c1e20341807f40000f842f000000478b4c9a1049c1e1034d85c90f841d0000004d8b47284983f8000f84be0100004983e8084d8947284d0347384d89084c8bc249c1e8030faef80faef80faef8c5f8c6c006c5f8c6c006c5f8c6c0060faef80faef84789449a100faef8c5f8c6c006c5f8c6c006c5f8c6c0060faef84f8d549a104d8bda4c33da49c1eb150f84520000004885d20f1f40000f84450000004d8bda49c1eb0949b8000000f34e7f00004d03d841803b02742bf08304240041803b00742041c603004d8b47484d85c00f842a0100004983e8084d8947484d0347584d8918488b6c24404883c4480f1f84000000000066666690493ba7500400000f8708010000c3c5f8c6c002c5f8c6c002c5f8c6c0024c894424104c895c24284889542408e95dfeffffc5f8c6c008c5f8c6c008c5f8c6c008448b5424244c8b4424108b4c2434488b542408488b74241841c78784040000ed92ffff49c7879004000014000000e84726f9ff0f1f840000000000c5f8c6c009c5f8c6c009c5f8c6c00941c78784040000e5d5ffff49c7879004000000000000e81526f9ff0f1f840000000000c5f8c6c007c5f8c6c007c5f8c6c007488b54240841c78784040000e5c0ffff49c7879004000000000000e8de25f9ff0f1f84000000000048896c2440e87226f7ffe9dbfcfffff44c890c24e8c3e8ffff666690e940fefffff44c891c24e831ecffffe9d7fefffff4488d0de4feffff49898f68040000e91834f9fff441c78784040000f5dbffff49c787900400000000000090e87525f9ff0f1f84000000000041c78784040000f5cbffff49c7879004000000000000e85225f9ff0f1f84000000000041c78784040000f5c5ffff49c7879004000000000000e82f25f9ff0f1f840000000000e8a824fffff4e8c222f9fff4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1e16be3e slotKind: QWORD  <||@
  Comment 98 6 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 103 8 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 107 10 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 12 CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B9 size: DWORD state [bci:0]  <||@
  Comment 111 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 block B1 null  <||@
  Comment 125 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 125 -1 GTMARKER markerId: 1  <||@
  Comment 140 16 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 140 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 140 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 142 18 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 146 20 r11|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 149 22 r10|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD  <||@
  Comment 154 24 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 161 26 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.011328125 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 170 block B3 null  <||@
  Comment 170 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 -1 GTMARKER markerId: 3  <||@
  Comment 185 40 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 190 42 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 195 44 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 198 46 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 203 48 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:12]  <||@
  Comment 203 {HotSpotMethod<Towers$TowersDisk.getSize()>}  <||@
  Comment 203 INVOKESPECIAL  <||@
  Comment 208 [stack:8, stack:16, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:64|QWORD[.]   <||@
  Comment 216 -1 GTMARKER markerId: 3  <||@
  Comment 237 50 rsi|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 242 52 stack:44|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 246 54 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getSize()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:16]  <||@
  Comment 247 {HotSpotMethod<Towers$TowersDisk.getSize()>}  <||@
  Comment 247 INVOKESPECIAL  <||@
  Comment 252 [stack:8, stack:16, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |stack:64|QWORD[.] 
     stack:   |stack:44|DWORD     |                   |                |                    <||@
  Comment 260 56 CMPBRANCH (x: rax|DWORD, y: stack:44|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B5 falseDestination: B3 -> B8 size: DWORD  <||@
  Comment 270 block B5 null  <||@
  Comment 270 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 -1 GTMARKER markerId: 5  <||@
  Comment 285 64 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 290 66 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 295 68 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34]  <||@
  Comment 295 {HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>}  <||@
  Comment 295 INVOKESPECIAL  <||@
  Comment 300 [stack:8, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |stack:28|DWORD  |-   <||@
  Comment 308 -1 GTMARKER markerId: 5  <||@
  Comment 329 70 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 334 72 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 338 74 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 342 76 CMPBRANCH (x: rcx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD state [bci:37]  <||@
  Comment 352 [rsi:0, r10:0, stack:8]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 352 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 366 block B6 null  <||@
  Comment 366 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 -1 GTMARKER markerId: 6  <||@
  Comment 381 80 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 386 82 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 391 84 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 395 86 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e  <||@
  Comment 453 88 r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@59cfb310 encoding: base: 0 shift: 3  <||@
  Comment 460 -1 SFENCE  <||@
  Comment 463 -1 SFENCE  <||@
  Comment 466 -1 GTMARKER markerId: 6  <||@
  Comment 487 -1 SFENCE  <||@
  Comment 490 90 MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 495 -1 GTMARKER markerId: 6  <||@
  Comment 516 92 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 521 94 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r11|QWORD, temp2: r8|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5188b29e  <||@
  Comment 619 96 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 640 POLL_RETURN_FAR  <||@
  Comment 654 block B2 null  <||@
  Comment 654 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 654 -1 GTMARKER markerId: 2  <||@
  Comment 669 30 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 674 32 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 679 34 stack:72|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 684 36 JUMP ~outgoingValues: [] destination: B2 -> B5  <||@
  Comment 689 block B8 null  <||@
  Comment 689 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 -1 GTMARKER markerId: 8  <||@
  Comment 704 110 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 709 112 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 714 114 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 718 116 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 723 118 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 728 120 MOV x: [r15|QWORD + 1156] y: -27923 size: DWORD  <||@
  Comment 739 122 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 750 124 DEOPT info [bci:19]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 755 [rdx:0, rsi:0, r8:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.] 
     stack:   |r10|DWORD     |rax|DWORD     |           |              <||@
  Comment 763 block B9 null  <||@
  Comment 763 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 -1 GTMARKER markerId: 9  <||@
  Comment 778 128 MOV x: [r15|QWORD + 1156] y: -10779 size: DWORD  <||@
  Comment 789 130 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 800 132 DEOPT info [bci:0]  <||@
  Comment 800 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 805 [rdx:0, rsi:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 813 block B7 null  <||@
  Comment 813 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 813 -1 GTMARKER markerId: 7  <||@
  Comment 828 100 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 833 102 MOV x: [r15|QWORD + 1156] y: -16155 size: DWORD  <||@
  Comment 844 104 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 855 106 DEOPT info [bci:37]  <||@
  Comment 855 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 860 [rdx:0, rsi:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 873 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 888 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f4ef70c0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 906 {Stub<write_barrier_post-stack-only(Word)void>@0x7f4ef70c0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 931 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 965 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 995 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 1000 [rdx:0, rsi:0, r10:0, stack:24]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 1030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f4f0aa335a8, value=139977128493434]:0x7f4ef705417a}  <||@
  Comment 1035 [rsi:0, r10:0, stack:8]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2          |3 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 1043 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1043 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1049 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 1049 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
