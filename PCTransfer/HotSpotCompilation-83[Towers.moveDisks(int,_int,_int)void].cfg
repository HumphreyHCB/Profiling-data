begin_compilation
  name " HotSpotCompilation-83[Towers.moveDisks(int, int, int)]"
  method "HotSpotCompilation-83[Towers.moveDisks(int, int, int)]"
  date 1731420413073
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v34 v35 ?40 v36 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v34 i43 v35 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v34 i43 ?40 v36 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?41 v7 i19 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.5001953125
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 8]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveTopDisk(int, int)>
=== Inputs ===
arguments: a1 i3 i4 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i4  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
bci: 8
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveTopDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v34 
stateDuring: ?39 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v34 stateDuring: ?39 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 24]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 24]
stamp: i32
=== Inputs ===
x: i2 
y: i18 
=== Succesors ===
=== Usages ===
v35 v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 14]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i15 
y: i43 
=== Succesors ===
=== Usages ===
v35 ?40 ?41 v37 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i15 y: i43  <|@  <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 28]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveDisks(int, int, int)>
=== Inputs ===
arguments: a1 i19 i3 i44 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i19 i3 i44  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 i4 i44 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 i4 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
bci: 28
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveDisks
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v35 
stateDuring: ?40 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v35 stateDuring: ?40 #next: v24  <|@  <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 34]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveTopDisk(int, int)>
=== Inputs ===
arguments: a1 i3 i4 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i4  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i4 i44 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i4 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
bci: 34
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveTopDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v36 
stateDuring: ?41 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v36 stateDuring: ?41 #next: v27  <|@  <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 44]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveDisks(int, int, int)>
=== Inputs ===
arguments: a1 i19 i44 i4 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i19 i44 i4  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 44]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveDisks
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v37 
stateDuring: ?42 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v37 stateDuring: ?42 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v29 v31 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v29 v31 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v34 v35 ?40 v36 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v34 i43 v35 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 v34 i43 ?40 v36 ?41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?41 v7 i19 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.5001953125
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 8]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveTopDisk(int, int)>
=== Inputs ===
arguments: a1 i3 i4 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i4  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
bci: 8
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveTopDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v34 
stateDuring: ?39 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v34 stateDuring: ?39 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 24]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 24]
stamp: i32
=== Inputs ===
x: i2 
y: i18 
=== Succesors ===
=== Usages ===
v35 v37 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 14]
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
i44 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i15 
y: i43 
=== Succesors ===
=== Usages ===
v35 ?40 ?41 v37 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i15 y: i43  <|@  <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 28]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveDisks(int, int, int)>
=== Inputs ===
arguments: a1 i19 i3 i44 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i19 i3 i44  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 i4 i44 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 i4 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
bci: 28
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveDisks
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v35 
stateDuring: ?40 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v35 stateDuring: ?40 #next: v24  <|@  <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 34]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveTopDisk(int, int)>
=== Inputs ===
arguments: a1 i3 i4 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i4  <|@  <|@
tid ?41 <|@
d <@d|@=== Debug Properties ===
bci: 34
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i4 i44 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i4 i44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
bci: 34
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 34]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveTopDisk
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v36 
stateDuring: ?41 
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v36 stateDuring: ?41 #next: v27  <|@  <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 44]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Towers.moveDisks(int, int, int)>
=== Inputs ===
arguments: a1 i19 i44 i4 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i19 i44 i4  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.moveDisks(int, int, int)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 44]
polymorphic: false
stamp: void
targetMethod: Direct#Towers.moveDisks
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v37 
stateDuring: ?42 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v37 stateDuring: ?42 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v29 v31 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v29 v31 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.moveDisks(int, int, int) [bci: 47]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 10[[22, 25[[42, 47[[52, 55[[60, 65[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[20, 25[[40, 47[[50, 55[[58, 65[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[24, 25[[46, 47[[54, 55[[64, 65[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[18, 25[[38, 47[[48, 55[[56, 65[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v7|d [0, 12[[24, 25[[44, 47[[54, 55[[62, 65[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 18[[28, 56[6 MustHaveRegister 18 ShouldHaveRegister 38 ShouldHaveRegister 48 ShouldHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 16[[28, 55[8 MustHaveRegister 14 ShouldHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [10, 20[[28, 50[10 MustHaveRegister 20 ShouldHaveRegister 32 ShouldHaveRegister 42 ShouldHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [12, 22[[28, 62[12 MustHaveRegister 22 ShouldHaveRegister 32 ShouldHaveRegister 52 ShouldHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v1|d [30, 58[30 MustHaveRegister 40 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v2|d [32, 37[32 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v6|d [36, 60[36 MustHaveRegister 44 ShouldHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 10[[22, 25[[42, 47[[52, 55[[60, 65[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[20, 25[[40, 47[[50, 55[[58, 65[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[24, 25[[46, 47[[54, 55[[64, 65[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[18, 25[[38, 47[[48, 55[[56, 65[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v7|d [0, 12[[24, 25[[44, 47[[54, 55[[62, 65[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[28, 37[6 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 16[[28, 39[8 MustHaveRegister 14 ShouldHaveRegister 30 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 20[[28, 41[10 MustHaveRegister 20 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [12, 22[[28, 43[12 MustHaveRegister 22 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d v1|d [30, 45[30 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d v2|d [32, 37[32 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [36, 45[36 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r11|q]" v0|q v0|q [37, 45[38 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[vstack:5|d]" v1|d v1|d [39, 45[ "OneSpillStore"
  v10|d DWORD "[rdi|d]" v2|d v2|d [41, 45[42 ShouldHaveRegister  "OneSpillStore"
  v11|d DWORD "[vstack:0|d]" v3|d v3|d [43, 62[52 ShouldHaveRegister 62 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[vstack:3|d]" v4|d v4|d [45, 58[58 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[vstack:4|d]" v7|d v7|d [45, 60[60 ShouldHaveRegister  "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [45, 56[48 ShouldHaveRegister 56 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[vstack:5|d]" v1|d v1|d [45, 55[ "OneSpillStore"
  v16|d DWORD "[vstack:2|d]" v2|d v2|d [45, 50[50 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = STACKMOVE (input: v9|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 10[[22, 25[[42, 47[[52, 55[[60, 65[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[20, 25[[40, 47[[50, 55[[58, 65[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[24, 25[[46, 47[[54, 55[[64, 65[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[18, 25[[38, 47[[48, 55[[56, 65[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v7|d [0, 12[[24, 25[[44, 47[[54, 55[[62, 65[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[28, 37[6 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 16[[28, 39[8 MustHaveRegister 14 ShouldHaveRegister 30 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 20[[28, 41[10 MustHaveRegister 20 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [12, 22[[28, 43[12 MustHaveRegister 22 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d v1|d [30, 45[30 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d v2|d [32, 37[32 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [36, 45[36 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r11|q]" v0|q v0|q [37, 45[38 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[vstack:5|d]" v1|d v1|d [39, 45[ "OneSpillStore"
  v10|d DWORD "[rdi|d]" v2|d v2|d [41, 45[42 ShouldHaveRegister  "OneSpillStore"
  v11|d DWORD "[vstack:0|d]" v3|d v3|d [43, 62[52 ShouldHaveRegister 62 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[vstack:3|d]" v4|d v4|d [45, 58[58 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[vstack:4|d]" v7|d v7|d [45, 60[60 ShouldHaveRegister  "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [45, 56[48 ShouldHaveRegister 56 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[vstack:5|d]" v1|d v1|d [45, 55[ "OneSpillStore"
  v16|d DWORD "[vstack:2|d]" v2|d v2|d [45, 50[50 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = STACKMOVE (input: v9|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- v3|d [0, 10[[22, 25[[42, 47[[52, 55[[60, 65[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 8[[20, 25[[40, 47[[50, 55[[58, 65[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[24, 25[[46, 47[[54, 55[[64, 65[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[18, 25[[38, 47[[48, 55[[56, 65[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v7|d [0, 12[[24, 25[[44, 47[[54, 55[[62, 65[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[46, 47[[54, 55[[64, 65[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[28, 37[6 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 16[[28, 39[8 MustHaveRegister 14 ShouldHaveRegister 30 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [10, 20[[28, 41[10 MustHaveRegister 20 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [12, 22[[28, 43[12 MustHaveRegister 22 ShouldHaveRegister 32 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d v1|d [30, 45[30 MustHaveRegister 40 ShouldHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d v2|d [32, 37[32 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v6|d [36, 45[36 MustHaveRegister 44 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r11|q]" v0|q v0|q [37, 45[38 ShouldHaveRegister  "OneSpillStore"
  v9|d DWORD "[vstack:5|d]" v1|d v1|d [39, 45[ "OneSpillStore"
  v10|d DWORD "[rdi|d]" v2|d v2|d [41, 45[42 ShouldHaveRegister  "OneSpillStore"
  v11|d DWORD "[vstack:0|d]" v3|d v3|d [43, 62[52 ShouldHaveRegister 62 ShouldHaveRegister  "OneSpillStore"
  v12|d DWORD "[vstack:3|d]" v4|d v4|d [45, 58[58 ShouldHaveRegister  "OneSpillStore"
  v13|d DWORD "[vstack:4|d]" v7|d v7|d [45, 60[60 ShouldHaveRegister  "OneSpillStore"
  v14|q QWORD "[vstack:1|q]" v0|q v0|q [45, 56[48 ShouldHaveRegister 56 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[vstack:5|d]" v1|d v1|d [45, 55[ "OneSpillStore"
  v16|d DWORD "[vstack:2|d]" v2|d v2|d [45, 50[50 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = STACKMOVE (input: v9|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction v4|DWORD = DEC value: v1|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction v6|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = STACKMOVE (input: v9|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: v0|QWORD[.] v1|DWORD - v3|DWORD v7|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: vstack:1|QWORD[.] vstack:5|DWORD vstack:2|DWORD vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: vstack:1|QWORD[.] vstack:5|DWORD - vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   26  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   36  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: vstack:1|QWORD[.] vstack:5|DWORD vstack:2|DWORD vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: vstack:1|QWORD[.] vstack:5|DWORD - vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:5|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction vstack:0|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction vstack:4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction vstack:3|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction vstack:2|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: vstack:1|QWORD[.] vstack:5|DWORD vstack:2|DWORD vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: vstack:1|QWORD[.] vstack:5|DWORD - vstack:0|DWORD vstack:4|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [40, 68[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [50, 62[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [48, 56[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [46, 64[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [44, 66[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [32, 60[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:32|d]" vstack:0|d -1 [40, 68[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [50, 62[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:44|d]" vstack:2|d -1 [48, 56[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:40|d]" vstack:3|d -1 [46, 64[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [44, 66[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:28|d]" vstack:5|d -1 [32, 60[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: []
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602680578391251354
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   10  <|@ instruction rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: []
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 8]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   16  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 3 <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4602675300735438028
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   20  <|@ instruction r10|DWORD = DEC value: rdx|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr   26  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 28]
locals: stack:56|QWORD[.] stack:28|DWORD stack:44|DWORD stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28] <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 34]
locals: stack:56|QWORD[.] stack:28|DWORD - stack:32|DWORD stack:36|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
Towers.moveDisks(int, int, int) [bci: 44]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44] <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: iconst_1      
     2: if_icmpne     14
     5: aload_0       
     6: iload_2       
     7: iload_3       
     8: invokevirtual #10         // moveTopDisk:(int, int)void
    11: goto          47
    14: iconst_3      
    15: iload_2       
    16: isub          
    17: iload_3       
    18: isub          
    19: istore        4
    21: aload_0       
    22: iload_1       
    23: iconst_1      
    24: isub          
    25: iload_2       
    26: iload         4
    28: invokevirtual #11         // moveDisks:(int, int, int)void
    31: aload_0       
    32: iload_2       
    33: iload_3       
    34: invokevirtual #10         // moveTopDisk:(int, int)void
    37: aload_0       
    38: iload_1       
    39: iconst_1      
    40: isub          
    41: iload         4
    43: iload_3       
    44: invokevirtual #11         // moveDisks:(int, int, int)void
    47: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000974e7f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec3841817f20000000000f852f010000c5f8c6c000c5f8c6c000c5f8c6c00048896c243083fa010f8563000000c5f8c6c001c5f8c6c001c5f8c6c0018bd1418bc890666690e8000000000f1f8400000000000faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef8c5f8c6c003c5f8c6c003c5f8c6c003488b6c24304883c438666690493ba7500400000f87c0000000c3c5f8c6c002c5f8c6c002c5f8c6c002448bd241ffca448bd94503d841b903000000452bcb4c8bde89542424418bd28bf94489442420458bc144894c241c4489542418897c24144c895c24086690e8000000000f1f8400000000000faef8c5f8c6c002c5f8c6c002c5f8c6c0020faef8488b7424088b5424148b4c242090e8000000000f1f840000000000488b7424088b5424188b4c241c448b44242090e8000000000f1f840000000000e928ffffff48896c2430e800000000e9c2fefffff4488d0d2cffffff49898f68040000e960fefffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD  <||@
  Comment 98 6 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 107 block B1 null  <||@
  Comment 107 8 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 -1 GTMARKER markerId: 1  <||@
  Comment 122 10 rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 124 12 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 127 14 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8]  <||@
  Comment 131 {HotSpotMethod<Towers.moveTopDisk(int, int)>}  <||@
  Comment 131 INVOKESPECIAL  <||@
  Comment 136 []at Towers.moveDisks(int, int, int) [bci: 8, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 144 -1 GTMARKER markerId: 1  <||@
  Comment 165 16 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 165 block B3 null  <||@
  Comment 165 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 -1 GTMARKER markerId: 3  <||@
  Comment 180 76 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B2 null  <||@
  Comment 206 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 -1 GTMARKER markerId: 2  <||@
  Comment 221 20 r10|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 227 22 r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 233 24 r9|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 239 26 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 242 28 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 245 32 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 249 34 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 252 36 rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 254 40 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 259 42 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 262 44 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 267 46 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 272 48 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 276 50 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 281 52 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28]  <||@
  Comment 283 {HotSpotMethod<Towers.moveDisks(int, int, int)>}  <||@
  Comment 283 INVOKESPECIAL  <||@
  Comment 288 [stack:8]at Towers.moveDisks(int, int, int) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1               |2               |3               |4              
     locals:  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |stack:32|DWORD  |stack:36|DWORD   <||@
  Comment 296 -1 GTMARKER markerId: 2  <||@
  Comment 317 54 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 322 56 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 326 58 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 330 60 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34]  <||@
  Comment 331 {HotSpotMethod<Towers.moveTopDisk(int, int)>}  <||@
  Comment 331 INVOKESPECIAL  <||@
  Comment 336 [stack:8]at Towers.moveDisks(int, int, int) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1               |2  |3               |4              
     locals:  |stack:56|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD  |stack:36|DWORD   <||@
  Comment 344 62 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 349 64 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 353 66 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 357 68 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 362 70 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44]  <||@
  Comment 363 {HotSpotMethod<Towers.moveDisks(int, int, int)>}  <||@
  Comment 363 INVOKESPECIAL  <||@
  Comment 368 []at Towers.moveDisks(int, int, int) [bci: 44, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 376 72 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 386 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 411 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 417 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 417 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 423 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-83[Towers.moveDisks(int, int, int)]"
  method "HotSpotCompilation-83[Towers.moveDisks(int, int, int)]"
  date 1731420413114
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f4ef70c12c0 448b560849bc000000974e7f00004d03d44d33e4493bc20f85a3cdf8ff6666900faef8c5f8c6c0ffc5f8c6c0ffc5f8c6c0ff0faef889842400c0feff4883ec3841817f20000000000f852f010000c5f8c6c000c5f8c6c000c5f8c6c00048896c243083fa010f8563000000c5f8c6c001c5f8c6c001c5f8c6c0018bd1418bc890666690e838d0f8ff0f1f8400380200000faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef8c5f8c6c003c5f8c6c003c5f8c6c003488b6c24304883c438666690493ba7500400000f87c0000000c3c5f8c6c002c5f8c6c002c5f8c6c002448bd241ffca448bd94503d841b903000000452bcb4c8bde89542424418bd28bf94489442420458bc144894c241c4489542418897c24144c895c24086690e8a0cff8ff0f1f8400d00200010faef8c5f8c6c002c5f8c6c002c5f8c6c0020faef8488b7424088b5424148b4c242090e870cff8ff0f1f840000030002488b7424088b5424188b4c241c448b44242090e850cff8ff0f1f840020030003e928ffffff48896c2430e8d92df7ffe9c2fefffff4488d0d2cffffff49898f68040000e9a03bf9fff4e89a2cfffff4e8b42af9fff4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f4f0aa335c8, value=139977128468608]:0x7f4ef704e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 53 [stack overflow check]  <||@
  Comment 64 FRAME_COMPLETE  <||@
  Comment 64 ENTRY_BARRIER_PATCH  <||@
  Comment 78 block B0 null  <||@
  Comment 78 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 -1 GTMARKER markerId: 0  <||@
  Comment 93 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 98 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@54b78c70 slotKind: QWORD  <||@
  Comment 98 6 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.5001953125 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 107 block B1 null  <||@
  Comment 107 8 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 107 -1 GTMARKER markerId: 1  <||@
  Comment 122 10 rdx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 124 12 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 127 14 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:8]  <||@
  Comment 131 {HotSpotMethod<Towers.moveTopDisk(int, int)>}  <||@
  Comment 131 INVOKESPECIAL  <||@
  Comment 136 []at Towers.moveDisks(int, int, int) [bci: 8, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 144 -1 GTMARKER markerId: 1  <||@
  Comment 165 16 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 165 block B3 null  <||@
  Comment 165 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 -1 GTMARKER markerId: 3  <||@
  Comment 180 76 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B2 null  <||@
  Comment 206 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 -1 GTMARKER markerId: 2  <||@
  Comment 221 20 r10|DWORD = DEC value: rdx|DWORD size: DWORD  <||@
  Comment 227 22 r11|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 233 24 r9|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 239 26 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 242 28 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 245 32 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 249 34 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 252 36 rdi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 254 40 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 259 42 r8|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 262 44 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 267 46 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 272 48 stack:44|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 276 50 stack:56|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 281 52 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:28]  <||@
  Comment 283 {HotSpotMethod<Towers.moveDisks(int, int, int)>}  <||@
  Comment 283 INVOKESPECIAL  <||@
  Comment 288 [stack:8]at Towers.moveDisks(int, int, int) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1               |2               |3               |4              
     locals:  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:44|DWORD  |stack:32|DWORD  |stack:36|DWORD   <||@
  Comment 296 -1 GTMARKER markerId: 2  <||@
  Comment 317 54 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 322 56 rdx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 326 58 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 330 60 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveTopDisk(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:34]  <||@
  Comment 331 {HotSpotMethod<Towers.moveTopDisk(int, int)>}  <||@
  Comment 331 INVOKESPECIAL  <||@
  Comment 336 [stack:8]at Towers.moveDisks(int, int, int) [bci: 34, duringCall: true, rethrow: false]
              |0                  |1               |2  |3               |4              
     locals:  |stack:56|QWORD[.]  |stack:28|DWORD  |-  |stack:32|DWORD  |stack:36|DWORD   <||@
  Comment 344 62 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 349 64 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 353 66 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 357 68 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 362 70 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Towers.moveDisks(int, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5be2b2dd state [bci:44]  <||@
  Comment 363 {HotSpotMethod<Towers.moveDisks(int, int, int)>}  <||@
  Comment 363 INVOKESPECIAL  <||@
  Comment 368 []at Towers.moveDisks(int, int, int) [bci: 44, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 376 72 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 386 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f4f0aa33598, value=139977128362528]:0x7f4ef7034220}  <||@
  Comment 411 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f4f0aa335a0, value=139977128497152]:0x7f4ef7055000}  <||@
  Comment 417 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f4ef70b4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 417 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f4f0aa335b8, value=139977128492832]:0x7f4ef7053f20}  <||@
  Comment 423 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
