begin_compilation
  name " HotSpotCompilation-85[Towers.popDiskFrom(int)]"
  method "HotSpotCompilation-85[Towers.popDiskFrom(int)]"
  date 1731331201371
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a95  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 1]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
lastLocationAccess: - 
=== Succesors ===
next: i96 
=== Usages ===
a22 v101 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v100 lastLocationAccess: - #next: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v44 ?77 j60 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v104 i96 v99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a95 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-6155|0xffffffffffffe7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v101 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
v44 
=== Predecessor ===
a95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v101 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@256aa5f2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i96 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
i96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a97 
=== Usages ===
v55 
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a97  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 1]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a95 
=== Succesors ===
=== Usages ===
v102 ?77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a95  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a22 
index: j60 
=== Succesors ===
=== Usages ===
v55 a97 v92 v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a22 index: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v102 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
a38 v103 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v102 lastLocationAccess: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a97 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v103 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a97 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v103 #next: a11  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v18 v57 ?77 ?78 v42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 27]
referencedType: [null]
returnStamp: a# Towers$TowersDisk
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getNext()>
=== Inputs ===
arguments: a38 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a22 i2 - - a38 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a22 i2 - - a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 27]
polymorphic: false
stamp: a# Towers$TowersDisk
targetMethod: Direct#Towers$TowersDisk.getNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v42 
stateDuring: ?77 
=== Succesors ===
next: v92 
=== Usages ===
a54 v94 
=== Predecessor ===
v99 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v42 stateDuring: ?77 #next: v92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
precise: true
stamp: void
=== Inputs ===
address: v102 
value: - 
stateBefore: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
a11 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v102 value: - stateBefore: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a11 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v69 
address: v102 
lastLocationAccess: - 
value: a54 
stateAfter: - 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v69 address: v102 lastLocationAccess: - value: a54 stateAfter: - #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
precise: true
stamp: void
=== Inputs ===
address: v102 
value: a11 
object: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v102 value: a11 object: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 33]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>
=== Inputs ===
arguments: a38 a6 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38 a6  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 33
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a38 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
bci: 33
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 33]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.setNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?78 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?78 #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 37]
stamp: void
=== Inputs ===
memoryMap: - 
result: a38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 45
mayConvertToGuard: true
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@33b082c5
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a95 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a95  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a95 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a95 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 1]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
lastLocationAccess: - 
=== Succesors ===
next: i96 
=== Usages ===
a22 v101 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v100 lastLocationAccess: - #next: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v44 ?77 j60 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v104 i96 v99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a95 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-6155|0xffffffffffffe7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v101 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
v44 
=== Predecessor ===
a95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v101 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@256aa5f2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i96 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
i96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v69 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: a97 
=== Usages ===
v55 
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a97  <|@  <|@
f <@~|@floating>@ <|@
tid a22 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 1]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a95 
=== Succesors ===
=== Usages ===
v102 ?77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a95  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
result [v3|QWORD[.] + v4|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a22 
index: j60 
=== Succesors ===
=== Usages ===
v55 a97 v92 v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a22 index: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v102 
lastLocationAccess: - 
=== Succesors ===
next: v99 
=== Usages ===
a38 v103 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v102 lastLocationAccess: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result [v5|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a97 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: v103 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a97 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: v103 #next: a11  <|@  <|@
f <@~|@floating>@ <|@
tid a38 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a97 
=== Succesors ===
=== Usages ===
v18 v57 ?77 ?78 v42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a97  <|@  <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 27]
referencedType: [null]
returnStamp: a# Towers$TowersDisk
signature: [HotSpotType<LTowers$TowersDisk;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.getNext()>
=== Inputs ===
arguments: a38 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a22 i2 - - a38 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a22 i2 - - a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 27]
polymorphic: false
stamp: a# Towers$TowersDisk
targetMethod: Direct#Towers$TowersDisk.getNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v42 
stateDuring: ?77 
=== Succesors ===
next: v92 
=== Usages ===
a54 v94 
=== Predecessor ===
v99 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v42 stateDuring: ?77 #next: v92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
precise: true
stamp: void
=== Inputs ===
address: v102 
value: - 
stateBefore: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
a11 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v102 value: - stateBefore: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
op: Compress
stamp: n# Towers$TowersDisk
=== Inputs ===
value: a11 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v69 
address: v102 
lastLocationAccess: - 
value: a54 
stateAfter: - 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v69 address: v102 lastLocationAccess: - value: a54 stateAfter: - #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
precise: true
stamp: void
=== Inputs ===
address: v102 
value: a11 
object: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v102 value: a11 object: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 33]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<LTowers$TowersDisk;, resolved>, UnresolvedJavaType<LTowers$TowersDisk;>]
stamp: void
targetMethod: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>
=== Inputs ===
arguments: a38 a6 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a38 a6  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 33
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.popDiskFrom(int)>
localsSize: 3
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a38 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
bci: 33
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 33]
polymorphic: false
stamp: void
targetMethod: Direct#Towers$TowersDisk.setNext
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?78 
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?78 #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 37]
stamp: void
=== Inputs ===
memoryMap: - 
result: a38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 45
mayConvertToGuard: true
nodeSourcePosition: at Towers.popDiskFrom(int) [bci: 5]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@33b082c5
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[28, 30[[46, 47[[48, 50[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[28, 29[[44, 47[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[28, 29[[46, 47[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 6[[26, 29[[42, 47[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 23[[52, 59[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [8, 29[[52, 59[8 MustHaveRegister 12 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|d [16, 38[16 MustHaveRegister 20 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [18, 38[18 MustHaveRegister 20 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [20, 24[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|d [24, 48[24 MustHaveRegister 26 ShouldHaveRegister 42 ShouldHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [30, 41[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[v9|q]" v9|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[v10|d]" v10|d v7|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [38, 41[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[v13|q]" v13|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[28, 30[[46, 47[[48, 50[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[28, 29[[44, 47[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[28, 29[[46, 47[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 6[[26, 29[[42, 47[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 23[[52, 59[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 27[8 MustHaveRegister 12 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|d [16, 27[16 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 27[18 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [20, 24[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v5|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [30, 41[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rdx|q]" v9|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[rsi|d]" v10|d v7|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [38, 41[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[vstack:3|d]" v1|d v1|d [27, 29[ "OneSpillStore"
  v15|q QWORD "[vstack:1|q]" v3|q v3|q [27, 31[ "OneSpillStore"
  v16|q QWORD "[vstack:0|q]" v4|q v4|q [27, 31[ "OneSpillStore"
  v17|q QWORD "[vstack:2|q]" v6|q v6|q [27, 48[42 ShouldHaveRegister 48 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r11|q]" v4|q v4|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v19|q QWORD "[r10|q]" v3|q v3|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[rdx|d]" v1|d v1|d [52, 59[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: v16|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[28, 30[[46, 47[[48, 50[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[28, 29[[44, 47[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[28, 29[[46, 47[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 6[[26, 29[[42, 47[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 23[[52, 59[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 27[8 MustHaveRegister 12 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|d [16, 27[16 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 27[18 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [20, 24[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v5|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [30, 41[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rdx|q]" v9|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[rsi|d]" v10|d v7|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [38, 41[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[vstack:3|d]" v1|d v1|d [27, 29[ "OneSpillStore"
  v15|q QWORD "[vstack:1|q]" v3|q v3|q [27, 31[ "OneSpillStore"
  v16|q QWORD "[vstack:0|q]" v4|q v4|q [27, 31[ "OneSpillStore"
  v17|q QWORD "[vstack:2|q]" v6|q v6|q [27, 48[42 ShouldHaveRegister 48 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r11|q]" v4|q v4|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v19|q QWORD "[r10|q]" v3|q v3|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[rdx|d]" v1|d v1|d [52, 59[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: v16|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v6|q [0, 1[[28, 30[[46, 47[[48, 50[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 8[[28, 29[[44, 47[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[28, 29[[46, 47[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 6[[26, 29[[42, 47[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[28, 29[[46, 47[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 23[[52, 59[6 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [8, 27[8 MustHaveRegister 12 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 16[10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q v2|d [16, 27[16 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [18, 27[18 MustHaveRegister 20 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [20, 24[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v5|d [24, 27[24 MustHaveRegister 26 ShouldHaveRegister  "OneSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [30, 41[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v9|q QWORD "[rdx|q]" v9|q -1 [32, 33[32 MustHaveRegister  "NoDefinitionFound"
  v10|d DWORD "[rsi|d]" v10|d v7|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q -1 [38, 41[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q -1 [40, 41[40 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[vstack:3|d]" v1|d v1|d [27, 29[ "OneSpillStore"
  v15|q QWORD "[vstack:1|q]" v3|q v3|q [27, 31[ "OneSpillStore"
  v16|q QWORD "[vstack:0|q]" v4|q v4|q [27, 31[ "OneSpillStore"
  v17|q QWORD "[vstack:2|q]" v6|q v6|q [27, 48[42 ShouldHaveRegister 48 ShouldHaveRegister  "OneSpillStore"
  v18|q QWORD "[r11|q]" v4|q v4|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v19|q QWORD "[r10|q]" v3|q v3|q [31, 38[32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister  "OneSpillStore"
  v20|d DWORD "[rdx|d]" v1|d v1|d [52, 59[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: v16|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v2|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction v4|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|DWORD[_] = MOV input: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction NULLCHECK address: [v5|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: v4|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: v3|QWORD[.] v1|DWORD 
locals: - - v6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   30  <|@ instruction v7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVE input: v16|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + v4|QWORD * 4 + 16], ~expectedObject: -) {temp: v8|QWORD, temp2: v9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction v10|DWORD[_] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|QWORD[.] + v4|QWORD * 4 + 16], y: v10|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction v11|QWORD[.+] = LEA address: [v3|QWORD[.] + v4|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v11|QWORD[.+], ~newValue: v7|QWORD[.]) {temp: v12|QWORD, temp2: v13|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - v6|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: vstack:1|QWORD[.] vstack:3|DWORD 
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: vstack:1|QWORD[.] vstack:3|DWORD 
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   34  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   40  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   42  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction vstack:3|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction vstack:0|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: vstack:1|QWORD[.] vstack:3|DWORD 
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - vstack:2|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [30, 34[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [28, 36[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [26, 54[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [24, 32[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [30, 34[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [28, 36[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:48|q]" vstack:2|q -1 [26, 54[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [24, 32[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIRGTSlowdownMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 0 <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   12  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 27]
stack: stack:56|QWORD[.] stack:28|DWORD 
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27] <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   34  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 1 <|@ <|@
      nr   -1  <|@ instruction SFENCE <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3 <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 33]
locals: - - stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33] <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction GTMARKER markerId: 2 <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
Towers.popDiskFrom(int) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // piles:Towers$TowersDisk[]
     4: iload_1       
     5: aaload        
     6: astore_2      
     7: aload_2       
     8: ifnonnull     21
    11: new           #4          // java.lang.RuntimeException
    14: dup           
    15: ldc           #8          // "Attempting to remove a disk from an empty pile"
    17: invokespecial #3          // java.lang.RuntimeException.<init>:(java.lang.String)void
    20: athrow        
    21: aload_0       
    22: getfield      #1          // piles:Towers$TowersDisk[]
    25: iload_1       
    26: aload_2       
    27: invokevirtual #5          // Towers$TowersDisk.getNext:()Towers$TowersDisk
    30: aastore       
    31: aload_2       
    32: aconst_null   
    33: invokevirtual #4          // Towers$TowersDisk.setNext:(Towers$TowersDisk)void
    36: aload_2       
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000009f187f00004d03d44d33e4493bc20f85e3ffffff6666900faef8c5f8c6c0ff0faef889842400c0feff4883ec38669041817f20000000000f85ba010000c5f8c6c000c5f8c6c000c5f8c6c00048896c2430448b56106690423b14d50c0000000f8360010000c5f8c6c001c5f8c6c001c5f8c6c00149c1e203448bda478b449a10428504c50000000049c1e003498bf0895424244c894424104c895424084c895c2418e8000000000f1f8400000000000faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef84c8b5c24184c8b54240841807f40000f1f40000f842f000000438b549a1048c1e2034885d20f841d000000498b77284883fe000f840a0100004883ee084989772849037738488916488bf048c1ee030faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef84389749a104b8d749a10488bd64833d048c1ea150f844b0000004885c00f8442000000488bd648c1ea0949ba00c086fd187f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84980000004983ea084d8957484d035758498912488b74241048c7c20000000090e8000000000f1f840000000000488b442410488b6c24304883c4386690493ba7500400000f8761000000c3c5f8c6c002c5f8c6c002c5f8c6c00241c78784040000e5d2ffff49c7879004000000000000e8000000000f1f84000000000048896c2430e800000000e937fefffff448891424e800000000e9f7fefffff448891424e800000000e969fffffff4488d0d8bffffff49898f680400000f1f4000e9bbfdfffff441c78784040000f5e7ffff49c78790040000000000000f1f4000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f19150335c8, value=139745632247936]:0x7f1910c4e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 [stack overflow check]  <||@
  Comment 56 FRAME_COMPLETE  <||@
  Comment 56 ENTRY_BARRIER_PATCH  <||@
  Comment 70 block B0 null  <||@
  Comment 70 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 -1 GTMARKER markerId: 0  <||@
  Comment 85 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD  <||@
  Comment 90 6 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 94 8 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0]  <||@
  Comment 96 [rsi:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 96 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 block B1 null  <||@
  Comment 110 10 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 110 -1 GTMARKER markerId: 1  <||@
  Comment 125 12 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 129 14 r11|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 132 16 r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD  <||@
  Comment 137 18 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0]  <||@
  Comment 137 [rsi:0, r8:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 20 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 149 22 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 152 24 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 156 26 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 161 28 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 166 30 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 171 32 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27]  <||@
  Comment 171 {HotSpotMethod<Towers$TowersDisk.getNext()>}  <||@
  Comment 171 INVOKESPECIAL  <||@
  Comment 176 [stack:8, stack:16]at Towers.popDiskFrom(int) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |-                  |-               |stack:48|QWORD[.] 
     stack:   |stack:56|QWORD[.]  |stack:28|DWORD  |                    <||@
  Comment 184 -1 SFENCE  <||@
  Comment 187 -1 GTMARKER markerId: 1  <||@
  Comment 202 -1 SFENCE  <||@
  Comment 205 34 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 210 36 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 215 38 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3  <||@
  Comment 277 40 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 284 -1 SFENCE  <||@
  Comment 287 -1 GTMARKER markerId: 1  <||@
  Comment 302 -1 SFENCE  <||@
  Comment 305 42 MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 310 44 rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 315 46 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3  <||@
  Comment 406 48 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 411 50 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 418 52 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33]  <||@
  Comment 419 {HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>}  <||@
  Comment 419 INVOKESPECIAL  <||@
  Comment 424 [stack:16]at Towers.popDiskFrom(int) [bci: 33, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.]   <||@
  Comment 432 54 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 437 56 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f  <||@
  Comment 448 POLL_RETURN_FAR  <||@
  Comment 462 block B2 null  <||@
  Comment 462 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 -1 GTMARKER markerId: 2  <||@
  Comment 477 60 MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD  <||@
  Comment 488 62 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 499 64 DEOPT info [bci:0]  <||@
  Comment 499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f19150335a8, value=139745632272762]:0x7f1910c5417a}  <||@
  Comment 504 [rsi:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 517 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f1915033598, value=139745632141856]:0x7f1910c34220}  <||@
  Comment 532 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 547 {Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 576 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f19150335a0, value=139745632276480]:0x7f1910c55000}  <||@
  Comment 608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f19150335a8, value=139745632272762]:0x7f1910c5417a}  <||@
  Comment 613 [rsi:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 621 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f1910cb4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 621 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 627 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f19150335b8, value=139745632272160]:0x7f1910c53f20}  <||@
  Comment 627 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-85[Towers.popDiskFrom(int)]"
  method "HotSpotCompilation-85[Towers.popDiskFrom(int)]"
  date 1731331201427
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f1910cc27a0 448b560849bc0000009f187f00004d03d44d33e4493bc20f85c3b8f8ff6666900faef8c5f8c6c0ff0faef889842400c0feff4883ec38669041817f20000000000f85ba010000c5f8c6c000c5f8c6c000c5f8c6c00048896c2430448b56106690423b14d50c0000000f8360010000c5f8c6c001c5f8c6c001c5f8c6c00149c1e203448bda478b449a10428504c50000000049c1e003498bf0895424244c894424104c895424084c895c2418e830bbf8ff0f1f8400400200020faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef84c8b5c24184c8b54240841807f40000f1f40000f842f000000438b549a1048c1e2034885d20f841d000000498b77284883fe000f840a0100004883ee084989772849037738488916488bf048c1ee030faef8c5f8c6c001c5f8c6c001c5f8c6c0010faef84389749a104b8d749a10488bd64833d048c1ea150f844b0000004885c00f8442000000488bd648c1ea0949ba00c086fd187f00004903d2803a027429f083042400803a00741fc602004d8b57484d85d20f84980000004983ea084d8957484d035758498912488b74241048c7c20000000090e838baf8ff0f1f840038030003488b442410488b6c24304883c4386690493ba7500400000f8761000000c3c5f8c6c002c5f8c6c002c5f8c6c00241c78784040000e5d2ffff49c7879004000000000000e8e217f9ff0f1f84000000000048896c2430e87618f7ffe937fefffff448891424e8c7daffffe9f7fefffff448891424e838deffffe969fffffff4488d0d8bffffff49898f680400000f1f4000e91b26f9fff441c78784040000f5e7ffff49c78790040000000000000f1f4000e87517f9ff0f1f840000000000e8ee16fffff4e80815f9fff4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f19150335c8, value=139745632247936]:0x7f1910c4e080}  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 43 [stack overflow check]  <||@
  Comment 56 FRAME_COMPLETE  <||@
  Comment 56 ENTRY_BARRIER_PATCH  <||@
  Comment 70 block B0 null  <||@
  Comment 70 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 70 -1 GTMARKER markerId: 0  <||@
  Comment 85 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 90 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5f3ce8ba slotKind: QWORD  <||@
  Comment 90 6 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 94 8 CMPBRANCH (x: rdx|DWORD, y: [r10|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD state [bci:0]  <||@
  Comment 96 [rsi:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 96 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 block B1 null  <||@
  Comment 110 10 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 110 -1 GTMARKER markerId: 1  <||@
  Comment 125 12 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 129 14 r11|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 132 16 r8|DWORD[_] = MOV input: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: DWORD  <||@
  Comment 137 18 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:0]  <||@
  Comment 137 [rsi:0, r8:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 20 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 149 22 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 152 24 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 156 26 stack:48|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 161 28 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 166 30 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 171 32 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.getNext()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:27]  <||@
  Comment 171 {HotSpotMethod<Towers$TowersDisk.getNext()>}  <||@
  Comment 171 INVOKESPECIAL  <||@
  Comment 176 [stack:8, stack:16]at Towers.popDiskFrom(int) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |-                  |-               |stack:48|QWORD[.] 
     stack:   |stack:56|QWORD[.]  |stack:28|DWORD  |                    <||@
  Comment 184 -1 SFENCE  <||@
  Comment 187 -1 GTMARKER markerId: 1  <||@
  Comment 202 -1 SFENCE  <||@
  Comment 205 34 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 210 36 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 215 38 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r11|QWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3  <||@
  Comment 277 40 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@c58b374 encoding: base: 0 shift: 3  <||@
  Comment 284 -1 SFENCE  <||@
  Comment 287 -1 GTMARKER markerId: 1  <||@
  Comment 302 -1 SFENCE  <||@
  Comment 305 42 MOV (x: [r10|QWORD[.] + r11|QWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 310 44 rsi|QWORD[.+] = LEA address: [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 315 46 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rax|QWORD[.]) {temp: rdx|QWORD, temp2: r10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@318e25f3  <||@
  Comment 406 48 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 411 50 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 418 52 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f state [bci:33]  <||@
  Comment 419 {HotSpotMethod<Towers$TowersDisk.setNext(Towers$TowersDisk)>}  <||@
  Comment 419 INVOKESPECIAL  <||@
  Comment 424 [stack:16]at Towers.popDiskFrom(int) [bci: 33, duringCall: true, rethrow: false]
              |0  |1  |2                 
     locals:  |-  |-  |stack:48|QWORD[.]   <||@
  Comment 432 54 rax|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 437 56 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@358fd28f  <||@
  Comment 448 POLL_RETURN_FAR  <||@
  Comment 462 block B2 null  <||@
  Comment 462 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 462 -1 GTMARKER markerId: 2  <||@
  Comment 477 60 MOV x: [r15|QWORD + 1156] y: -11547 size: DWORD  <||@
  Comment 488 62 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 499 64 DEOPT info [bci:0]  <||@
  Comment 499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f19150335a8, value=139745632272762]:0x7f1910c5417a}  <||@
  Comment 504 [rsi:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 517 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f1915033598, value=139745632141856]:0x7f1910c34220}  <||@
  Comment 532 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f1910cc0480:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 547 {Stub<write_barrier_post-stack-only(Word)void>@0x7f1910cc0800:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 576 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f19150335a0, value=139745632276480]:0x7f1910c55000}  <||@
  Comment 608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f19150335a8, value=139745632272762]:0x7f1910c5417a}  <||@
  Comment 613 [rsi:0, r10:0]at Towers.popDiskFrom(int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 621 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f1910cb4100:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 621 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 627 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f19150335b8, value=139745632272160]:0x7f1910c53f20}  <||@
  Comment 627 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
