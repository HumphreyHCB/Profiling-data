begin_compilation
  name " HotSpotCompilation-83[List$Element.length()]"
  method "HotSpotCompilation-83[List$Element.length()]"
  date 1740398976897
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a133 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a133  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
v140 v116 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v139 lastLocationAccess: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a133  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.length() [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 ?77 i15 ?87 i80 i27 ?82 i37 i85 i46 i90 i55 ?132 i66 ?67 i70 ?72 i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
a133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 8]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
v141 v117 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v140 lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a134 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a134  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
a134 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v23 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a134 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
lastLocationAccess: - 
=== Succesors ===
next: v35 
=== Usages ===
v142 v118 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v141 lastLocationAccess: - #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a135 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a135  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a135 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
v143 v119 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v142 lastLocationAccess: - #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a136 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a136  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v43 #falseSuccessor: v42  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a137  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a136 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v144 v120 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v143 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a137 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a137  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a137 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
a111 v112 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a138  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v61 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i64 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i64  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a138  <|@  <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LList$Element;, resolved>]
stamp: void
targetMethod: HotSpotMethod<List$Element.length()>
=== Inputs ===
arguments: a111 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a111  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i9 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i9  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?87 
values: i9 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?87 values: i9  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?82 
values: i9 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?82 values: i9  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?77 
values: i9 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?77 values: i9  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: i9 
=== Succesors ===
=== Usages ===
?132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i9  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: i9 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
bci: 14
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
polymorphic: false
stamp: i32
targetMethod: Direct#List$Element.length
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v115 
stateDuring: ?132 
=== Succesors ===
next: v71 
=== Usages ===
i66 
=== Predecessor ===
v60 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v115 stateDuring: ?132 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i64 
y: i9 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i64 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
i64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i9 i66 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v68 values: i9 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v71 
=== Succesors ===
next: v76 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i70 
y: i9 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i70 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v73 
values: i9 i55 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v73 values: i9 i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: v81 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i75 
y: i9 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i75 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v78 
values: i9 i46 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v78 values: i9 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v79 v81 
=== Succesors ===
next: v86 
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v79 v81 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v83 
values: i9 i37 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v83 values: i9 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: v91 
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i85 
y: i9 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i85 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v88 
values: i9 i27 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v88 values: i9 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v91 
=== Succesors ===
next: v16 
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v91 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
stamp: i32
=== Inputs ===
x: i90 
y: i9 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a133 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a133  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
lastLocationAccess: - 
=== Succesors ===
next: v8 
=== Usages ===
v140 v116 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v139 lastLocationAccess: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a133  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at List$Element.length() [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 ?77 i15 ?87 i80 i27 ?82 i37 i85 i46 i90 i55 ?132 i66 ?67 i70 ?72 i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
a133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v7 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 8]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a133 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
v141 v117 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v140 lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a134 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a134  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
a134 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v23 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a134 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v141 
lastLocationAccess: - 
=== Succesors ===
next: v35 
=== Usages ===
v142 v118 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v141 lastLocationAccess: - #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a135 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a135  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
result [v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a135 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
v143 v119 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v142 lastLocationAccess: - #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a136 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a136  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v43 
falseSuccessor: v42 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v43 #falseSuccessor: v42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a137  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a136 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v143 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
v144 v120 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v143 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a137 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a137  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
result [v5|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a137 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
a111 v112 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a138  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 4]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v61 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 7]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List$Element.length() [bci: 9]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i64 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i64  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.length() [bci: 1]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a138 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a138  <|@  <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<LList$Element;, resolved>]
stamp: void
targetMethod: HotSpotMethod<List$Element.length()>
=== Inputs ===
arguments: a111 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a111  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i9 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i9  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?87 
values: i9 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?87 values: i9  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?82 
values: i9 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?82 values: i9  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?77 
values: i9 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?77 values: i9  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?72 
values: i9 
=== Succesors ===
=== Usages ===
?132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i9  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List$Element.length()>
localsSize: 1
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: i9 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i64 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 14
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
polymorphic: false
stamp: i32
targetMethod: Direct#List$Element.length
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v115 
stateDuring: ?132 
=== Succesors ===
next: v71 
=== Usages ===
i66 
=== Predecessor ===
v60 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v115 stateDuring: ?132 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i64 
y: i9 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i64 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
i64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i9 i66 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v68 values: i9 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v71 
=== Succesors ===
next: v76 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i70 
y: i9 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i70 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v73 
values: i9 i55 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v73 values: i9 i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: v81 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i75 
y: i9 
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i75 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i80 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v78 
values: i9 i46 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v78 values: i9 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v79 v81 
=== Succesors ===
next: v86 
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v79 v81 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i80 
y: i9 
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v83 
values: i9 i37 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v83 values: i9 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v86 
=== Succesors ===
next: v91 
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v86 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
at List$Element.length() [bci: 14]
stamp: i32
=== Inputs ===
x: i85 
y: i9 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i85 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i90 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v88 
values: i9 i27 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v88 values: i9 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v91 
=== Succesors ===
next: v16 
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v91 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 17]
stamp: i32
=== Inputs ===
x: i90 
y: i9 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i90 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List$Element.length() [bci: 18]
stamp: void
=== Inputs ===
memoryMap: - 
result: i15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[48, 50[[58, 60[[110, 112[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[48, 49[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 6[[46, 49[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 14[8 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [14, 20[14 MustHaveRegister 16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [20, 26[20 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [38, 44[38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d rax|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [52, 55[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [82, 84[84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v10|d [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [88, 90[90 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v12|d [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v13|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [100, 102[102 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v16|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [106, 108[108 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v18|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[48, 50[[58, 60[[110, 112[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[48, 49[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 6[[46, 49[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 14[8 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [14, 20[14 MustHaveRegister 16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [20, 26[20 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [38, 44[38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v6|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [52, 55[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [82, 84[84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v10|d [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [88, 90[90 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v13|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [100, 102[102 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [106, 108[108 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[48, 50[[58, 60[[110, 112[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[48, 49[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 6[[46, 49[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 14[8 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [14, 20[14 MustHaveRegister 16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [20, 26[20 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [38, 44[38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v6|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [52, 55[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [82, 84[84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v10|d [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [88, 90[90 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v13|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [100, 102[102 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [106, 108[108 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[48, 50[[58, 60[[110, 112[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[48, 49[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 6[[46, 49[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[48, 49[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rsi|d]" v1|d -1 [8, 14[8 MustHaveRegister 10 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rsi|d]" v2|d -1 [14, 20[14 MustHaveRegister 16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [20, 26[20 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rsi|d]" v4|d -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rsi|d]" v5|d -1 [32, 38[32 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [38, 44[38 MustHaveRegister 40 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q v6|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d v8|d [52, 55[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v9|d [82, 84[84 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v10|d [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [88, 90[90 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v12|d [90, 93[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v13|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v15|d [100, 102[102 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v17|d [106, 108[108 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v18|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [v10|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [v12|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD[_], y: v1|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v4|DWORD[_] = MOV input: [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   50  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction v11|DWORD = INC value: v10|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction v13|DWORD = INC value: v12|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction v17|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction v19|DWORD = INC value: v18|DWORD size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@reference-map: []
live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602962014524415225
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ st <@st|@reference-map: []
live-base-pointers: []
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
List$Element.length() [bci: 14]
stack: int[1|0x1] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603493880633208426
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604084842976311982
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B3" "B16" 
    successors 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   60  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4589392119407993380
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4588670678776485646
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // next:List$Element
     4: ifnonnull     9
     7: iconst_1      
     8: ireturn       
     9: iconst_1      
    10: aload_0       
    11: getfield      #2          // next:List$Element
    14: invokevirtual #3          // length:()int
    17: iadd          
    18: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec1841817f20000000000f85db00000048896c24108b7610669085f60f84860000008b34f51000000085f60f84970000008b34f510000000669085f60f848d0000008b34f51000000085f60f84850000008b34f510000000669085f60f847b0000008b34f51000000085f60f847300000048c1e603e8000000000f1f840000000000ffc0ffc0ffc0ffc0ffc0ffc0488b6c24104883c418666690493ba7500400000f8754000000c3b801000000488b6c24104883c4180f1f4000493ba7500400000f8748000000c3b801000000ebbdb801000000ebb4b801000000ebabb801000000eba2b801000000eb9948896c2410e800000000e916fffffff4488d0d98ffffff49898f68040000e9ccfefffff4488d0da4ffffff49898f68040000e9b8fefffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD  <||@
  Comment 59 8 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 62 10 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 72 block B2 null  <||@
  Comment 72 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 72 14 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 79 16 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 87 block B4 null  <||@
  Comment 87 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 20 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 94 22 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 104 block B6 null  <||@
  Comment 104 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 26 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 111 28 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 119 block B8 null  <||@
  Comment 119 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 32 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 126 34 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 136 block B10 null  <||@
  Comment 136 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 38 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 143 40 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 151 block B12 null  <||@
  Comment 151 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 44 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3  <||@
  Comment 155 48 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14]  <||@
  Comment 155 {HotSpotMethod<List$Element.length()>}  <||@
  Comment 155 INVOKESPECIAL  <||@
  Comment 160 []at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1]   <||@
  Comment 168 52 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 170 54 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 170 block B13 null  <||@
  Comment 170 82 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 170 84 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 172 86 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 172 block B14 null  <||@
  Comment 172 88 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 172 90 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 174 92 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 174 block B15 null  <||@
  Comment 174 94 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 174 96 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 176 98 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 176 block B16 null  <||@
  Comment 176 100 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 176 102 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 178 104 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 178 block B17 null  <||@
  Comment 178 106 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 178 108 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 180 112 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B1 null  <||@
  Comment 206 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 58 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 211 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 224 POLL_RETURN_FAR  <||@
  Comment 238 block B3 null  <||@
  Comment 238 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 243 64 JUMP ~outgoingValues: [] destination: B3 -> B17  <||@
  Comment 245 block B5 null  <||@
  Comment 245 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 250 68 JUMP ~outgoingValues: [] destination: B5 -> B16  <||@
  Comment 252 block B7 null  <||@
  Comment 252 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 257 72 JUMP ~outgoingValues: [] destination: B7 -> B15  <||@
  Comment 259 block B9 null  <||@
  Comment 259 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 264 76 JUMP ~outgoingValues: [] destination: B9 -> B14  <||@
  Comment 266 block B11 null  <||@
  Comment 266 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 266 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 271 80 JUMP ~outgoingValues: [] destination: B11 -> B13  <||@
  Comment 278 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 303 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 329 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 335 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-83[List$Element.length()]"
  method "HotSpotCompilation-83[List$Element.length()]"
  date 1740398976998
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0c23a0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85c3bcf8ff89842400c0feff4883ec1841817f20000000000f85db00000048896c24108b7610669085f60f84860000008b34f51000000085f60f84970000008b34f510000000669085f60f848d0000008b34f51000000085f60f84850000008b34f510000000669085f60f847b0000008b34f51000000085f60f847300000048c1e603e840bff8ff0f1f840030020000ffc0ffc0ffc0ffc0ffc0ffc0488b6c24104883c418666690493ba7500400000f8754000000c3b801000000488b6c24104883c4180f1f4000493ba7500400000f8748000000c3b801000000ebbdb801000000ebb4b801000000ebabb801000000eba2b801000000eb9948896c2410e8651df7ffe916fffffff4488d0d98ffffff49898f68040000e92c2bf9fff4488d0da4ffffff49898f68040000e9182bf9fff4e81220fffff4e82c1af9fff4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7bbed30d slotKind: QWORD  <||@
  Comment 59 8 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 62 10 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 72 block B2 null  <||@
  Comment 72 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 72 14 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 79 16 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 87 block B4 null  <||@
  Comment 87 18 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 20 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 94 22 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 104 block B6 null  <||@
  Comment 104 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 26 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 111 28 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 119 block B8 null  <||@
  Comment 119 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 32 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 126 34 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 136 block B10 null  <||@
  Comment 136 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 136 38 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 143 40 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 151 block B12 null  <||@
  Comment 151 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 44 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@518e674d encoding: base: 0 shift: 3  <||@
  Comment 155 48 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<List$Element.length()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:14, 14, 14, 14, 14, 14]  <||@
  Comment 155 {HotSpotMethod<List$Element.length()>}  <||@
  Comment 155 INVOKESPECIAL  <||@
  Comment 160 []at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1] 
  at List$Element.length() [bci: 14, duringCall: true, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[1|0x1]   <||@
  Comment 168 52 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 170 54 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 170 block B13 null  <||@
  Comment 170 82 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 170 84 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 172 86 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 172 block B14 null  <||@
  Comment 172 88 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 172 90 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 174 92 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 174 block B15 null  <||@
  Comment 174 94 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 174 96 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 176 98 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 176 block B16 null  <||@
  Comment 176 100 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 176 102 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 178 104 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 178 block B17 null  <||@
  Comment 178 106 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 178 108 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 180 112 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 192 POLL_RETURN_FAR  <||@
  Comment 206 block B1 null  <||@
  Comment 206 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 58 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 211 60 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 224 POLL_RETURN_FAR  <||@
  Comment 238 block B3 null  <||@
  Comment 238 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 238 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 243 64 JUMP ~outgoingValues: [] destination: B3 -> B17  <||@
  Comment 245 block B5 null  <||@
  Comment 245 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 250 68 JUMP ~outgoingValues: [] destination: B5 -> B16  <||@
  Comment 252 block B7 null  <||@
  Comment 252 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 257 72 JUMP ~outgoingValues: [] destination: B7 -> B15  <||@
  Comment 259 block B9 null  <||@
  Comment 259 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 259 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 264 76 JUMP ~outgoingValues: [] destination: B9 -> B14  <||@
  Comment 266 block B11 null  <||@
  Comment 266 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 266 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 271 80 JUMP ~outgoingValues: [] destination: B11 -> B13  <||@
  Comment 278 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 303 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 329 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 329 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 335 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
